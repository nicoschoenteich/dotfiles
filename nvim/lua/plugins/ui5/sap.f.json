{
    "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
    "version": "1.125.0",
    "library": "sap.f",
    "symbols": [
        {
            "kind": "namespace",
            "name": "sap.f",
            "basename": "f",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.44",
            "description": "<p><p>SAPUI5 library with controls specialized for SAP Fiori apps.</p></p>",
            "displayName": "sap.f",
            "nodes": [
                {
                    "name": "sap.f.Avatar",
                    "description": "<p>An image-like control that has different display options for representing images, initials, and icons.\n</p>",
                    "href": "api/sap.f.Avatar",
                    "deprecated": true
                },
                {
                    "name": "sap.f.AvatarColor",
                    "description": "<p>Possible background color options for the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control.\n</p>",
                    "href": "api/sap.f.AvatarColor",
                    "deprecated": true
                },
                {
                    "name": "sap.f.AvatarGroup",
                    "description": "<p>Displays a group of avatars arranged horizontally. </p>",
                    "href": "api/sap.f.AvatarGroup"
                },
                {
                    "name": "sap.f.AvatarGroupItem",
                    "description": "<p>Represents a single avatar item displayed in the <a target=\"_self\" href=\"api/sap.f.AvatarGroup\">sap.f.AvatarGroup</a> control.\n</p>",
                    "href": "api/sap.f.AvatarGroupItem"
                },
                {
                    "name": "sap.f.AvatarGroupType",
                    "description": "<p>Group modes for the <a target=\"_self\" href=\"api/sap.f.AvatarGroup\">sap.f.AvatarGroup</a> control.\n</p>",
                    "href": "api/sap.f.AvatarGroupType"
                },
                {
                    "name": "sap.f.AvatarImageFitType",
                    "description": "<p>Types of image size and position that determine how an image fits in the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control area.\n</p>",
                    "href": "api/sap.f.AvatarImageFitType",
                    "deprecated": true
                },
                {
                    "name": "sap.f.AvatarShape",
                    "description": "<p>Types of shape for the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control.\n</p>",
                    "href": "api/sap.f.AvatarShape",
                    "deprecated": true
                },
                {
                    "name": "sap.f.AvatarSize",
                    "description": "<p>Predefined sizes for the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control.\n</p>",
                    "href": "api/sap.f.AvatarSize",
                    "deprecated": true
                },
                {
                    "name": "sap.f.AvatarType",
                    "description": "<p>Types of <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> based on the displayed content.\n</p>",
                    "href": "api/sap.f.AvatarType",
                    "deprecated": true
                },
                {
                    "name": "sap.f.Card",
                    "description": "<p>A control that represents a container with a predefined header and content.\n</p>",
                    "href": "api/sap.f.Card"
                },
                {
                    "name": "sap.f.CardBase",
                    "description": "<p>A base class for controls that represent a container with a predefined header and content.</p>",
                    "href": "api/sap.f.CardBase"
                },
                {
                    "name": "sap.f.DynamicPage",
                    "description": "<p>A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n</p>",
                    "href": "api/sap.f.DynamicPage"
                },
                {
                    "name": "sap.f.DynamicPageAccessibleLandmarkInfo",
                    "description": "<p>Settings for accessible landmarks which can be applied to the container elements of a <code>sap.f.DynamicPage</code> control.\n</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo"
                },
                {
                    "name": "sap.f.DynamicPageHeader",
                    "description": "<p>Header of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a>.\n</p>",
                    "href": "api/sap.f.DynamicPageHeader"
                },
                {
                    "name": "sap.f.DynamicPageTitle",
                    "description": "<p>Title of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a>.\n</p>",
                    "href": "api/sap.f.DynamicPageTitle"
                },
                {
                    "name": "sap.f.DynamicPageTitleArea",
                    "description": "<p>Defines the areas within the <code>sap.f.DynamicPageTitle</code> control.\n</p>",
                    "href": "api/sap.f.DynamicPageTitleArea",
                    "deprecated": true
                },
                {
                    "name": "sap.f.DynamicPageTitleShrinkRatio",
                    "description": "<p>A string type that represents the shrink ratios of the areas within the <code>sap.f.DynamicPageTitle</code>.</p>",
                    "href": "api/sap.f.DynamicPageTitleShrinkRatio"
                },
                {
                    "name": "sap.f.FlexibleColumnLayout",
                    "description": "<p>Implements the list-detail-detail paradigm by displaying up to three pages in separate columns.\n</p>",
                    "href": "api/sap.f.FlexibleColumnLayout"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
                    "description": "<p>Settings for accessible landmarks which can be applied to the container elements of a <code>sap.f.FlexibleColumnLayout</code> control. </p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper",
                    "description": "<p>Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout</code>-based app.\n</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper"
                },
                {
                    "name": "sap.f.GridContainer",
                    "description": "<p>A layout container control used for aligning items with various sizes in a simple grid.\n</p>",
                    "href": "api/sap.f.GridContainer"
                },
                {
                    "name": "sap.f.GridContainerItemLayoutData",
                    "description": "<p>Holds layout data for an item inside a <code>sap.f.GridContainer</code>.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData"
                },
                {
                    "name": "sap.f.GridContainerSettings",
                    "description": "<p>Holds a set of settings that define the dimensions of <code>sap.f.GridContainer</code>.\n</p>",
                    "href": "api/sap.f.GridContainerSettings"
                },
                {
                    "name": "sap.f.GridList",
                    "description": "<p>A list-based control with grid layout capabilities.\n</p>",
                    "href": "api/sap.f.GridList"
                },
                {
                    "name": "sap.f.GridListItem",
                    "description": "<p>The <code>GridListItem</code> with a content aggregation can be used to display all kind of information. </p>",
                    "href": "api/sap.f.GridListItem"
                },
                {
                    "name": "sap.f.ICard",
                    "description": "<p>Interface that should be implemented by all card controls.</p>",
                    "href": "api/sap.f.ICard"
                },
                {
                    "name": "sap.f.IDynamicPageStickyContent",
                    "description": "<p>Interface for controls suitable for the <code>stickySubheaderProvider</code> association of <code><a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a></code>.\n</p>",
                    "href": "api/sap.f.IDynamicPageStickyContent"
                },
                {
                    "name": "sap.f.IllustratedMessage",
                    "description": "<p>A combination of message and illustration to represent an empty or a success state.\n</p>",
                    "href": "api/sap.f.IllustratedMessage",
                    "deprecated": true
                },
                {
                    "name": "sap.f.IllustratedMessageSize",
                    "description": "<p>Available <code>Illustration</code> sizes for the <a target=\"_self\" href=\"api/sap.f.IllustratedMessage\">sap.f.IllustratedMessage</a> control.\n</p>",
                    "href": "api/sap.f.IllustratedMessageSize",
                    "deprecated": true
                },
                {
                    "name": "sap.f.IllustratedMessageType",
                    "description": "<p>Available <code>Illustration</code> types for the <a target=\"_self\" href=\"api/sap.f.IllustratedMessage\">sap.f.IllustratedMessage</a> control.\n</p>",
                    "href": "api/sap.f.IllustratedMessageType",
                    "deprecated": true
                },
                {
                    "name": "sap.f.Illustration",
                    "description": "<p>A simple control which uses a Symbol ID to visualize an SVG which has already been loaded in the <a target=\"_self\" href=\"api/sap.f.IllustrationPool\">sap.f.IllustrationPool</a>.\n</p>",
                    "href": "api/sap.f.Illustration",
                    "deprecated": true
                },
                {
                    "name": "sap.f.IllustrationPool",
                    "description": "<p><code>IllustrationPool</code> loads the illustration assets (SVGs) via XMLHttpRequest requests.\n</p>",
                    "href": "api/sap.f.IllustrationPool",
                    "deprecated": true
                },
                {
                    "name": "sap.f.IShellBar",
                    "description": "<p>Interface for controls suitable for the <code>additionalContent</code> aggregation of <code><a target=\"_self\" href=\"api/sap.f.ShellBar\">sap.f.ShellBar</a></code>.</p>",
                    "href": "api/sap.f.IShellBar"
                },
                {
                    "name": "sap.f.LayoutType",
                    "description": "<p>Layouts, representing the number of columns to be displayed and their relative widths for a <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout\">sap.f.FlexibleColumnLayout</a> control.\n</p>",
                    "href": "api/sap.f.LayoutType"
                },
                {
                    "name": "sap.f.NavigationDirection",
                    "description": "<p>Enumeration for different navigation directions.\n</p>",
                    "href": "api/sap.f.NavigationDirection"
                },
                {
                    "name": "sap.f.ProductSwitch",
                    "description": "<p>A layout control that provides specific configuration about how the items should be displayed.</p>",
                    "href": "api/sap.f.ProductSwitch"
                },
                {
                    "name": "sap.f.ProductSwitchItem",
                    "description": "<p>A control that is used as a child of <code>ProductSwitch</code></p><p><b>Note:</b> <code>ProductSwitchItem</code> is not supported when used outside of <code>ProductSwitch</code>.</p>",
                    "href": "api/sap.f.ProductSwitchItem"
                },
                {
                    "name": "sap.f.SearchManager",
                    "description": "<p>Defines specific properties of the search that are applied to <code>sap.f.ShellBar</code>.</p>",
                    "href": "api/sap.f.SearchManager"
                },
                {
                    "name": "sap.f.ShellBar",
                    "description": "<p>A horizontal bar control holding multiple child controls used as application shell header.\n</p>",
                    "href": "api/sap.f.ShellBar"
                },
                {
                    "name": "sap.f.SidePanel",
                    "description": "<h3>Overview</h3><p><code>SidePanel</code> is a layout control that allows primary and additional content to be displayed by choosing the action items from its action bar.</p><h3>Usage</h3><p>Action bar with action items have two states - collapsed and expanded. In collapsed state only icons are displayed, and in expanded state both icons and titles are displayed.</p><p>Each action item can have a content and choose an action item toggles the display of its content. The content can be added to the action item's <code>content</code> aggregation, or can be added or changed later.</p><p>Each click/tap fires an event, and in the event handler specific content can be added/changed to the <code>content</code> aggregation of the clicked/tapped action item or data can be retreived from the same aggregation depending on the state of the action item.</p><p>If the side content is displayed, there is automatically generated header of the side content which contains the icon and title of the selected action item and a close button that closes the area where side content is displayed.</p><h3>Responsive Behavior</h3><p><b>On desktop/tablet device</b></p><p>The side panel contains action bar that have action items placed vertically, and when expanded, the side content is displayed next to the action bar. If there is not enough space for all available action items, an overflow icon is displayed, and it toggles ON/OFF an overflow menu with the rest of the action items that are not visible at the moment.</p><p>When expanded, the side content shrinks the main content.</p><p><b>On mobile device</b></p><p>The side panel contains action bar that have action items placed horizontally at the bottom of the display, and when expanded, the side content is displayed above the action bar. If there is not enough room for all action items, the action bar can be swiped to access the rest of the action items.</p><h3>Resizing</h3><p>Resizing functionality only affects desktop or tablet devices.</p><p>By setting the <code>sidePanelResizable</code> property, the expanded side panel can be resized by mouse (by drag or by double click on resize splitter), by keyboard or by choosing one of three predefined positions in the side panel's context menu (min, max and default widths)</p><h3>Keyboard shortcuts</h3><p><ul> <li>[Shift] + [Command] + [p] (Mac) / [Shift] + [Control] + [p] (Windows) - Expand/Collapse side panel</li> <li>[Arrow Up], [Arrow Down] - Move to the next or previous action item</li> <li>[Enter], [Space] - Choose the selected action item</li> <li>[Command] + [Arrow Left] (Mac) / [Control] + [Arrow Left] (Windows) / [Tab]- Move from action items to the opened side content panel</li> <li>[Command] + [Arrow Right] (Mac) / [Control] + [Arrow Right] (Windows) / [Shift] + [Tab]- Move from opened side content panel to the action items</li> <li>[F6] / [Shift] + [F6] - Navigate back and forth between main content, side panel and side content groups <li>[Esc] - Close the opened side content panel and set focus back to main content</li> </ul></p><p>If the side panel's <code>sidePanelResizable</code> property is set, there is an action item chosen, and the resize splitter is focused:</p><p><ul> <li>[Home] - set the expanded side panel width to the minimum value defined in <code>sidePanelMinWidth</code> property</li> <li>[End] - set the expanded side panel width to the maximum value defined in <code>sidePanelMaxWidth</code> property</li> <li>[Enter] - set the expanded side panel width to the default value defined in <code>sidePanelWidth</code> property</li> <li>[Shift]+[F10] or [Context menu] - show the resize context menu</li> <li>[Arrow Left] or [Arrow Up] / [Arrow Right] or [Arrow Down] - increase/decrease the width of the expanded side panel with the regular step</li> <li>[Shift] + [Arrow Left] or [Shift] + [Arrow Up] / [Shift] + [Arrow Right] or [Shift] + [Arrow Down] - increase/decrease the width of the expanded side panel with the larger step</li> </ul></p>",
                    "href": "api/sap.f.SidePanel"
                },
                {
                    "name": "sap.f.SidePanelItem",
                    "description": "<h3>Overview</h3><p>The SidePanel Action Item.</p>",
                    "href": "api/sap.f.SidePanelItem"
                },
                {
                    "name": "sap.f.SidePanelPosition",
                    "description": "<p>Enumeration for different SidePanel position.\n</p>",
                    "href": "api/sap.f.SidePanelPosition"
                },
                {
                    "name": "sap.f.cards",
                    "description": "",
                    "href": "api/sap.f.cards"
                },
                {
                    "name": "sap.f.dnd",
                    "description": "",
                    "href": "api/sap.f.dnd"
                },
                {
                    "name": "sap.f.routing",
                    "description": "",
                    "href": "api/sap.f.routing"
                },
                {
                    "name": "sap.f.semantic",
                    "description": "",
                    "href": "api/sap.f.semantic"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.Avatar",
            "basename": "Avatar",
            "resource": "sap/f/Avatar.js",
            "module": "sap/f/Avatar",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "extends": "sap.m.Avatar",
            "description": "<p>An image-like control that has different display options for representing images, initials, and icons.</p><h3>Overview</h3><p>The <code>Avatar</code> control allows the usage of different content, shapes, and sizes depending on the use case.</p><p>The content types that can be displayed are either images, icons, or initials. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size.</p><h3>Usage</h3><p>Up to two Latin letters can be displayed as initials in an <code>Avatar</code>. If there are more than two letters, or if there's a non-Latin character present, a default image placeholder will be created.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "designtime": "sap/f/designtime/Avatar.designtime"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>Avatar</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.m.Avatar#constructor\">sap.m.Avatar</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.Avatar(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.Avatar.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.Avatar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.Avatar#methods/sap.m.Avatar.extend\">sap.m.Avatar.extend</a>.</p>",
                    "href": "api/sap.f.Avatar#methods/sap.f.Avatar.extend",
                    "code": "<pre>sap.f.Avatar.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.Avatar.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.Avatar.</p>",
                    "href": "api/sap.f.Avatar#methods/sap.f.Avatar.getMetadata",
                    "code": "<pre>sap.f.Avatar.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.Avatar",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.Avatar",
            "subTitle": "Deprecated in version: 1.73",
            "uxGuidelinesLink": "https://experience.sap.com/fiori-design-web/avatar",
            "uxGuidelinesLinkText": "Avatar",
            "deprecatedText": "Deprecated as of version 1.73. Use the <a target=\"_self\" href=\"api/sap.m.Avatar\">sap.m.Avatar</a> instead."
        },
        {
            "kind": "typedef",
            "name": "sap.f.AvatarColor",
            "basename": "AvatarColor",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.69",
            "description": "<p><p>Possible background color options for the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control.</p><p><b>Notes:</b> <ul> <li>Keep in mind that the colors are theme-dependent and can differ based on the currently used theme.</li> <li> If the <code>Random</code> value is assigned, a random color is chosen from the accent options (Accent1 to Accent10).</li> </ul></p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.AvatarColor\">sap.m.AvatarColor</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.AvatarColor",
            "displayName": "sap.f.AvatarColor",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.AvatarColor",
            "subTitle": "Deprecated in version: 1.73",
            "deprecatedText": "Deprecated as of version 1.73. Use the <a target=\"_self\" href=\"api/sap.m.AvatarColor\">sap.m.AvatarColor</a> instead."
        },
        {
            "kind": "class",
            "name": "sap.f.AvatarGroup",
            "basename": "AvatarGroup",
            "resource": "sap/f/AvatarGroup.js",
            "module": "sap/f/AvatarGroup",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.73",
            "extends": "sap.ui.core.Control",
            "description": "<p>Displays a group of avatars arranged horizontally. It is useful to visually showcase a group of related avatars, such as, project team members or employees.</p><h3>Overview</h3><p>The control allows you to display the avatars in different sizes, depending on your use case.</p><p>The <code>AvatarGroup</code> control has two group types: <ul> <li><code>Group</code> type: The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.</li> <li><code>Individual</code> type: The avatars are displayed side-by-side and each avatar has its own click/tap area.</li> </ul></p><h3>Responsive Behavior</h3><p>When the available space is less than the width required to display all avatars, an overflow visualization appears as a button placed at the end with the same shape and size as the avatars. The visualization displays the number of avatars that have overflowed and are not currently visible.</p><h3>Usage</h3><p>Use the <code>AvatarGroup</code> if: <ul> <li>You want to display a group of avatars.</li> <li>You want to display several avatars which have something in common.</li> </ul></p><p>Do not use the <code>AvatarGroup</code> if: <ul> <li>You want to display a single avatar.</li> <li>You want to display a gallery for simple images.</li> <li>You want to use it for other visual content than avatars.</li> </ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "_interactive",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "hidden",
                        "description": "<p>Defines if keyboard or mouse interactions on this control are allowed.</p>",
                        "methods": [
                            "get_interactive",
                            "set_interactive"
                        ]
                    },
                    {
                        "name": "avatarCustomDisplaySize",
                        "type": "sap.ui.core.AbsoluteCSSSize",
                        "defaultValue": "3rem",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.103",
                        "description": "<p>Specifies a custom display size for each avatar.</p><p><b>Notes:</b> <ul> <li>Supports only <code>px</code> and code>rem</code> values.</li> <li>It takes effect only if the <code>avatarDisplaySize</code> property is set to <code>Custom</code>.</li> </ul><br><br><i>Since: 1.103.</i></p>",
                        "methods": [
                            "getAvatarCustomDisplaySize",
                            "setAvatarCustomDisplaySize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "avatarCustomFontSize",
                        "type": "sap.ui.core.AbsoluteCSSSize",
                        "defaultValue": "1.125rem",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.103",
                        "description": "<p>Specifies a custom font size for each avatar.</p><p><b>Note:</b> It takes effect only if the <code>avatarDisplaySize</code> property is set to <code>Custom</code>.<br><br><i>Since: 1.103.</i></p>",
                        "methods": [
                            "getAvatarCustomFontSize",
                            "setAvatarCustomFontSize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "avatarDisplaySize",
                        "type": "sap.m.AvatarSize",
                        "defaultValue": "S",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the display size of each avatar.</p>",
                        "methods": [
                            "getAvatarDisplaySize",
                            "setAvatarDisplaySize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "groupType",
                        "type": "sap.f.AvatarGroupType",
                        "defaultValue": "Group",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the mode of the <code>AvatarGroup</code>.</p>",
                        "methods": [
                            "getGroupType",
                            "setGroupType"
                        ],
                        "linkEnabled": true
                    }
                ],
                "aggregations": [
                    {
                        "name": "items",
                        "singularName": "item",
                        "type": "sap.f.AvatarGroupItem",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The <code>AvatarGroupItems</code> contained by the control.</p>",
                        "methods": [
                            "getItems",
                            "destroyItems",
                            "insertItem",
                            "addItem",
                            "removeItem",
                            "indexOfItem",
                            "removeAllItems"
                        ],
                        "linkEnabled": true
                    }
                ],
                "defaultAggregation": "items"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>AvatarGroup</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.AvatarGroup(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "press",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "groupType",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The <code>GroupType</code> of the control.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.groupType"
                        },
                        {
                            "name": "overflowButtonPressed",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Indication whether the overflow button is pressed.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.overflowButtonPressed"
                        },
                        {
                            "name": "avatarsDisplayed",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The number of currently displayed (visible) avatars.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.avatarsDisplayed"
                        }
                    ],
                    "description": "<p>Fired when the user clicks or taps on the control.</p>"
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.AvatarGroupItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.AvatarGroupItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some item to the aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/addItem",
                    "code": "<pre>addItem(oItem) : this</pre>"
                },
                {
                    "name": "attachPress",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.AvatarGroup</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.AvatarGroup#events/press\">press</a> event of this <code>sap.f.AvatarGroup</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.AvatarGroup</code> itself.</p><p>Fired when the user clicks or taps on the control.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/attachPress",
                    "code": "<pre>attachPress(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the items in the aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/destroyItems",
                    "code": "<pre>destroyItems() : this</pre>"
                },
                {
                    "name": "detachPress",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.AvatarGroup#events/press\">press</a> event of this <code>sap.f.AvatarGroup</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/detachPress",
                    "code": "<pre>detachPress(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.AvatarGroup.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.AvatarGroup with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/sap.f.AvatarGroup.extend",
                    "code": "<pre>sap.f.AvatarGroup.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "firePress",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "groupType",
                            "optional": true,
                            "description": "<p>The <code>GroupType</code> of the control.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.groupType",
                            "defaultValue": ""
                        },
                        {
                            "name": "overflowButtonPressed",
                            "optional": true,
                            "description": "<p>Indication whether the overflow button is pressed.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.overflowButtonPressed",
                            "defaultValue": ""
                        },
                        {
                            "name": "avatarsDisplayed",
                            "optional": true,
                            "description": "<p>The number of currently displayed (visible) avatars.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.avatarsDisplayed",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.AvatarGroup#events/press\">press</a> to attached listeners.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/firePress",
                    "code": "<pre>firePress(mParameters?) : this</pre>"
                },
                {
                    "name": "getAvatarCustomDisplaySize",
                    "visibility": "public",
                    "since": "1.103",
                    "returnValue": {
                        "type": "sap.ui.core.AbsoluteCSSSize",
                        "description": "<p>Value of property <code>avatarCustomDisplaySize</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.AbsoluteCSSSize",
                                "href": "api/sap.ui.core.AbsoluteCSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getAvatarCustomDisplaySize\">avatarCustomDisplaySize</a>.</p><p>Specifies a custom display size for each avatar.</p><p><b>Notes:</b> <ul> <li>Supports only <code>px</code> and code>rem</code> values.</li> <li>It takes effect only if the <code>avatarDisplaySize</code> property is set to <code>Custom</code>.</li> </ul></p><p>Default value is <code>\"3rem\"</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/getAvatarCustomDisplaySize",
                    "code": "<pre>getAvatarCustomDisplaySize() : sap.ui.core.AbsoluteCSSSize</pre>"
                },
                {
                    "name": "getAvatarCustomFontSize",
                    "visibility": "public",
                    "since": "1.103",
                    "returnValue": {
                        "type": "sap.ui.core.AbsoluteCSSSize",
                        "description": "<p>Value of property <code>avatarCustomFontSize</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.AbsoluteCSSSize",
                                "href": "api/sap.ui.core.AbsoluteCSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getAvatarCustomFontSize\">avatarCustomFontSize</a>.</p><p>Specifies a custom font size for each avatar.</p><p><b>Note:</b> It takes effect only if the <code>avatarDisplaySize</code> property is set to <code>Custom</code>.</p><p>Default value is <code>\"1.125rem\"</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/getAvatarCustomFontSize",
                    "code": "<pre>getAvatarCustomFontSize() : sap.ui.core.AbsoluteCSSSize</pre>"
                },
                {
                    "name": "getAvatarDisplaySize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.AvatarSize",
                        "description": "<p>Value of property <code>avatarDisplaySize</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarSize",
                                "href": "api/sap.m.AvatarSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getAvatarDisplaySize\">avatarDisplaySize</a>.</p><p>Defines the display size of each avatar.</p><p>Default value is <code>S</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/getAvatarDisplaySize",
                    "code": "<pre>getAvatarDisplaySize() : sap.m.AvatarSize</pre>"
                },
                {
                    "name": "getGroupType",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.AvatarGroupType",
                        "description": "<p>Value of property <code>groupType</code></p>",
                        "types": [
                            {
                                "value": "sap.f.AvatarGroupType",
                                "href": "api/sap.f.AvatarGroupType",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getGroupType\">groupType</a>.</p><p>Defines the mode of the <code>AvatarGroup</code>.</p><p>Default value is <code>Group</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/getGroupType",
                    "code": "<pre>getGroupType() : sap.f.AvatarGroupType</pre>"
                },
                {
                    "name": "getItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.AvatarGroupItem[]",
                        "types": [
                            {
                                "value": "sap.f.AvatarGroupItem[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>.</p><p>The <code>AvatarGroupItems</code> contained by the control.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/getItems",
                    "code": "<pre>getItems() : sap.f.AvatarGroupItem[]</pre>"
                },
                {
                    "name": "sap.f.AvatarGroup.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.AvatarGroup.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/sap.f.AvatarGroup.getMetadata",
                    "code": "<pre>sap.f.AvatarGroup.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "indexOfItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.f.AvatarGroupItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.AvatarGroupItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.f.AvatarGroupItem</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/indexOfItem",
                    "code": "<pre>indexOfItem(oItem) : int</pre>"
                },
                {
                    "name": "insertItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.AvatarGroupItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.AvatarGroupItem"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a item into the aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/insertItem",
                    "code": "<pre>insertItem(oItem, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.AvatarGroupItem[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.f.AvatarGroupItem[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/removeAllItems",
                    "code": "<pre>removeAllItems() : sap.f.AvatarGroupItem[]</pre>"
                },
                {
                    "name": "removeItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.AvatarGroupItem|null",
                        "description": "<p>The removed item or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.f.AvatarGroupItem",
                                "href": "api/sap.f.AvatarGroupItem",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vItem",
                            "optional": false,
                            "description": "<p>The item to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.f.AvatarGroupItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.AvatarGroupItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a item from the aggregation <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/removeItem",
                    "code": "<pre>removeItem(vItem) : sap.f.AvatarGroupItem|null</pre>"
                },
                {
                    "name": "setAvatarCustomDisplaySize",
                    "visibility": "public",
                    "since": "1.103",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sAvatarCustomDisplaySize",
                            "optional": true,
                            "defaultValue": "\"3rem\"",
                            "description": "<p>New value for property <code>avatarCustomDisplaySize</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.AbsoluteCSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.AbsoluteCSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getAvatarCustomDisplaySize\">avatarCustomDisplaySize</a>.</p><p>Specifies a custom display size for each avatar.</p><p><b>Notes:</b> <ul> <li>Supports only <code>px</code> and code>rem</code> values.</li> <li>It takes effect only if the <code>avatarDisplaySize</code> property is set to <code>Custom</code>.</li> </ul></p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"3rem\"</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/setAvatarCustomDisplaySize",
                    "code": "<pre>setAvatarCustomDisplaySize(sAvatarCustomDisplaySize?) : this</pre>"
                },
                {
                    "name": "setAvatarCustomFontSize",
                    "visibility": "public",
                    "since": "1.103",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sAvatarCustomFontSize",
                            "optional": true,
                            "defaultValue": "\"1.125rem\"",
                            "description": "<p>New value for property <code>avatarCustomFontSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.AbsoluteCSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.AbsoluteCSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getAvatarCustomFontSize\">avatarCustomFontSize</a>.</p><p>Specifies a custom font size for each avatar.</p><p><b>Note:</b> It takes effect only if the <code>avatarDisplaySize</code> property is set to <code>Custom</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"1.125rem\"</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/setAvatarCustomFontSize",
                    "code": "<pre>setAvatarCustomFontSize(sAvatarCustomFontSize?) : this</pre>"
                },
                {
                    "name": "setAvatarDisplaySize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sAvatarDisplaySize",
                            "optional": true,
                            "defaultValue": "S",
                            "description": "<p>New value for property <code>avatarDisplaySize</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getAvatarDisplaySize\">avatarDisplaySize</a>.</p><p>Defines the display size of each avatar.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>S</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/setAvatarDisplaySize",
                    "code": "<pre>setAvatarDisplaySize(sAvatarDisplaySize?) : this</pre>"
                },
                {
                    "name": "setGroupType",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sGroupType",
                            "optional": true,
                            "defaultValue": "Group",
                            "description": "<p>New value for property <code>groupType</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.AvatarGroupType",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.AvatarGroupType"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroup#methods/getGroupType\">groupType</a>.</p><p>Defines the mode of the <code>AvatarGroup</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Group</code>.</p>",
                    "href": "api/sap.f.AvatarGroup#methods/setGroupType",
                    "code": "<pre>setGroupType(sGroupType?) : this</pre>"
                }
            ],
            "displayName": "sap.f.AvatarGroup",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.AvatarGroup",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.AvatarGroupItem",
            "basename": "AvatarGroupItem",
            "resource": "sap/f/AvatarGroupItem.js",
            "module": "sap/f/AvatarGroupItem",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.73",
            "extends": "sap.ui.core.Control",
            "description": "<p>Represents a single avatar item displayed in the <a target=\"_self\" href=\"api/sap.f.AvatarGroup\">sap.f.AvatarGroup</a> control.</p><h3>Overview</h3><p> The <code>AvatarGroupItem</code> control allows you to define additional properties that are applied when rendering each <code>AvatarGroupItem</code> instance in the <a target=\"_self\" href=\"api/sap.f.AvatarGroup\">sap.f.AvatarGroup</a> control.</p>",
            "experimental": {
                "since": "1.73",
                "text": "This class is experimental and provides only limited functionality. Also the API might be changed in future."
            },
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "fallbackIcon",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>Defines the fallback icon displayed in case of wrong image src and no initials set.</p><p><b>Notes:</b> <ul> <li>If not set, a default fallback icon is displayed.</li> <li>Accepted values are only icons from the SAP icon font.</li> </ul></p>",
                        "methods": [
                            "getFallbackIcon",
                            "setFallbackIcon"
                        ]
                    },
                    {
                        "name": "initials",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>Defines the displayed initials.</p>",
                        "methods": [
                            "getInitials",
                            "setInitials"
                        ]
                    },
                    {
                        "name": "src",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>Determines the path to the desired image or icon.</p>",
                        "methods": [
                            "getSrc",
                            "setSrc"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>AvatarGroupItem</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.AvatarGroupItem(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.AvatarGroupItem.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.AvatarGroupItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/sap.f.AvatarGroupItem.extend",
                    "code": "<pre>sap.f.AvatarGroupItem.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getAvatarColor",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>The color of the avatar</p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Returns the color of the avatar.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/getAvatarColor",
                    "code": "<pre>getAvatarColor() : string</pre>"
                },
                {
                    "name": "getFallbackIcon",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>fallbackIcon</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroupItem#methods/getFallbackIcon\">fallbackIcon</a>.</p><p>Defines the fallback icon displayed in case of wrong image src and no initials set.</p><p><b>Notes:</b> <ul> <li>If not set, a default fallback icon is displayed.</li> <li>Accepted values are only icons from the SAP icon font.</li> </ul></p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/getFallbackIcon",
                    "code": "<pre>getFallbackIcon() : string</pre>"
                },
                {
                    "name": "getInitials",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>initials</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroupItem#methods/getInitials\">initials</a>.</p><p>Defines the displayed initials.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/getInitials",
                    "code": "<pre>getInitials() : string</pre>"
                },
                {
                    "name": "sap.f.AvatarGroupItem.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.AvatarGroupItem.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/sap.f.AvatarGroupItem.getMetadata",
                    "code": "<pre>sap.f.AvatarGroupItem.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>src</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.AvatarGroupItem#methods/getSrc\">src</a>.</p><p>Determines the path to the desired image or icon.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/getSrc",
                    "code": "<pre>getSrc() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "setFallbackIcon",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sFallbackIcon",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>fallbackIcon</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroupItem#methods/getFallbackIcon\">fallbackIcon</a>.</p><p>Defines the fallback icon displayed in case of wrong image src and no initials set.</p><p><b>Notes:</b> <ul> <li>If not set, a default fallback icon is displayed.</li> <li>Accepted values are only icons from the SAP icon font.</li> </ul></p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/setFallbackIcon",
                    "code": "<pre>setFallbackIcon(sFallbackIcon?) : this</pre>"
                },
                {
                    "name": "setInitials",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sInitials",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>initials</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroupItem#methods/getInitials\">initials</a>.</p><p>Defines the displayed initials.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/setInitials",
                    "code": "<pre>setInitials(sInitials?) : this</pre>"
                },
                {
                    "name": "setSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSrc",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>src</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.AvatarGroupItem#methods/getSrc\">src</a>.</p><p>Determines the path to the desired image or icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.AvatarGroupItem#methods/setSrc",
                    "code": "<pre>setSrc(sSrc?) : this</pre>"
                }
            ],
            "displayName": "sap.f.AvatarGroupItem",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.AvatarGroupItem",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.AvatarGroupType",
            "basename": "AvatarGroupType",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "AvatarGroupType",
            "static": true,
            "visibility": "public",
            "since": "1.73",
            "description": "<p><p>Group modes for the <a target=\"_self\" href=\"api/sap.f.AvatarGroup\">sap.f.AvatarGroup</a> control.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'AvatarGroupType'.</p></p>",
            "experimental": {
                "since": "1.73"
            },
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.AvatarGroupType.Group",
                    "visibility": "public",
                    "description": "<p>The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.</p>"
                },
                {
                    "name": "sap.f.AvatarGroupType.Individual",
                    "visibility": "public",
                    "description": "<p>The avatars are displayed side-by-side and each avatar has its own click/tap area.</p>"
                }
            ],
            "displayName": "sap.f.AvatarGroupType",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.AvatarGroupType",
            "subTitle": ""
        },
        {
            "kind": "typedef",
            "name": "sap.f.AvatarImageFitType",
            "basename": "AvatarImageFitType",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "description": "<p><p>Types of image size and position that determine how an image fits in the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control area.</p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.AvatarImageFitType\">sap.m.AvatarImageFitType</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.AvatarImageFitType",
            "displayName": "sap.f.AvatarImageFitType",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.AvatarImageFitType",
            "subTitle": "Deprecated in version: 1.73",
            "deprecatedText": "Deprecated as of version 1.73. Use the <a target=\"_self\" href=\"api/sap.m.AvatarImageFitType\">sap.m.AvatarImageFitType</a> instead."
        },
        {
            "kind": "typedef",
            "name": "sap.f.AvatarShape",
            "basename": "AvatarShape",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "description": "<p><p>Types of shape for the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control.</p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.AvatarShape\">sap.m.AvatarShape</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.AvatarShape",
            "displayName": "sap.f.AvatarShape",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.AvatarShape",
            "subTitle": "Deprecated in version: 1.73",
            "deprecatedText": "Deprecated as of version 1.73. Use the <a target=\"_self\" href=\"api/sap.m.AvatarShape\">sap.m.AvatarShape</a> instead."
        },
        {
            "kind": "typedef",
            "name": "sap.f.AvatarSize",
            "basename": "AvatarSize",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "description": "<p><p>Predefined sizes for the <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> control.</p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.AvatarSize\">sap.m.AvatarSize</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.AvatarSize",
            "displayName": "sap.f.AvatarSize",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.AvatarSize",
            "subTitle": "Deprecated in version: 1.73",
            "deprecatedText": "Deprecated as of version 1.73. Use the <a target=\"_self\" href=\"api/sap.m.AvatarSize\">sap.m.AvatarSize</a> instead."
        },
        {
            "kind": "typedef",
            "name": "sap.f.AvatarType",
            "basename": "AvatarType",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "description": "<p><p>Types of <a target=\"_self\" href=\"api/sap.f.Avatar\">sap.f.Avatar</a> based on the displayed content.</p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.AvatarType\">sap.m.AvatarType</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.AvatarType",
            "displayName": "sap.f.AvatarType",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.AvatarType",
            "subTitle": "Deprecated in version: 1.73",
            "deprecatedText": "Deprecated as of version 1.73. Use the <a target=\"_self\" href=\"api/sap.m.AvatarType\">sap.m.AvatarType</a> instead."
        },
        {
            "kind": "class",
            "name": "sap.f.Card",
            "basename": "Card",
            "resource": "sap/f/Card.js",
            "module": "sap/f/Card",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.64",
            "extends": "sap.f.CardBase",
            "description": "<p>A control that represents a container with a predefined header and content.</p><h3>Overview</h3><p> The card is a container for grouping and displaying information.</p><h3>Structure</h3><p> You can control the width and height of the card, using properties. The <code>Card</code> has the following aggregations: <ul> <li><code>header</code> - can be either a <a target=\"_self\" href=\"api/sap.f.cards.Header\">Header</a> or a <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader\">NumericHeader</a> <li><code>content</code> - can be any <a target=\"_self\" href=\"api/sap.ui.core.Control\">Control</a>.</li> </ul></p><h3>Guidelines:</h3><p> <ul> <li>A card should represent a task or visualize a specific set of information.</li> <li>It is recommended to use cards on home page layouts.</li> <li>The card shouldn't be large with a lot of content.</li> </ul></p><h3>Usage</h3><p> To show a KPI value or any numeric information, use <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader\">NumericHeader</a> as a card header. For any other use cases, use the regular <a target=\"_self\" href=\"api/sap.f.cards.Header\">Header</a>. Recommended content: - List - Table - Object information - Charts - Timelines - Images</p><p><i>When to use</i> <ul> <li>When you need multiple cards on a home page layout.</li> <li>When you have to achieve simple card visualization.</li> </ul></p><p><i>When not to use</i> <ul> <li>When you have to reuse the card between applications. For such cases, use: <a target=\"_self\" href=\"api/sap.ui.integration.widgets.Card\">Integration Card</a>.</li> <li>When you need nesting. For such cases, use: <a target=\"_self\" href=\"api/sap.m.Panel\">Panel</a>.</li> <li>When the card is not part of a card layout. For such cases, use: <a target=\"_self\" href=\"api/sap.m.Panel\">Panel</a>.</li> <li>When you need more header configuration flexibility.</li> </ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "headerPosition",
                        "type": "sap.f.cards.HeaderPosition",
                        "defaultValue": "Top",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.65",
                        "description": "<p>Defines the position of the Card Header.<br><br><i>Since: 1.65.</i></p>",
                        "methods": [
                            "getHeaderPosition",
                            "setHeaderPosition"
                        ],
                        "linkEnabled": true
                    }
                ],
                "aggregations": [
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Defines the content of the card.</p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "setContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "header",
                        "singularName": "header",
                        "type": "sap.f.cards.IHeader",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Defines the header of the card.</p>",
                        "methods": [
                            "getHeader",
                            "destroyHeader",
                            "setHeader"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>Card</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.Card(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the content in the aggregation <a target=\"_self\" href=\"api/sap.f.Card#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.Card#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "destroyHeader",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the header in the aggregation <a target=\"_self\" href=\"api/sap.f.Card#methods/getHeader\">header</a>.</p>",
                    "href": "api/sap.f.Card#methods/destroyHeader",
                    "code": "<pre>destroyHeader() : this</pre>"
                },
                {
                    "name": "sap.f.Card.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.Card with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.CardBase#methods/sap.f.CardBase.extend\">sap.f.CardBase.extend</a>.</p>",
                    "href": "api/sap.f.Card#methods/sap.f.Card.extend",
                    "code": "<pre>sap.f.Card.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.Card#methods/getContent\">content</a>.</p><p>Defines the content of the card.</p>",
                    "href": "api/sap.f.Card#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getHeader",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.cards.IHeader",
                        "types": [
                            {
                                "value": "sap.f.cards.IHeader",
                                "href": "api/sap.f.cards.IHeader",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.Card#methods/getHeader\">header</a>.</p><p>Defines the header of the card.</p>",
                    "href": "api/sap.f.Card#methods/getHeader",
                    "code": "<pre>getHeader() : sap.f.cards.IHeader</pre>"
                },
                {
                    "name": "getHeaderPosition",
                    "visibility": "public",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.f.cards.HeaderPosition",
                        "description": "<p>Value of property <code>headerPosition</code></p>",
                        "types": [
                            {
                                "value": "sap.f.cards.HeaderPosition",
                                "href": "api/sap.f.cards.HeaderPosition",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.Card#methods/getHeaderPosition\">headerPosition</a>.</p><p>Defines the position of the Card Header.</p><p>Default value is <code>Top</code>.</p>",
                    "href": "api/sap.f.Card#methods/getHeaderPosition",
                    "code": "<pre>getHeaderPosition() : sap.f.cards.HeaderPosition</pre>"
                },
                {
                    "name": "sap.f.Card.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.Card.</p>",
                    "href": "api/sap.f.Card#methods/sap.f.Card.getMetadata",
                    "code": "<pre>sap.f.Card.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "setContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.Card#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.Card#methods/setContent",
                    "code": "<pre>setContent(oContent) : this</pre>"
                },
                {
                    "name": "setHeader",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oHeader",
                            "optional": false,
                            "description": "<p>The header to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.IHeader",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.IHeader"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.Card#methods/getHeader\">header</a>.</p>",
                    "href": "api/sap.f.Card#methods/setHeader",
                    "code": "<pre>setHeader(oHeader) : this</pre>"
                },
                {
                    "name": "setHeaderPosition",
                    "visibility": "public",
                    "since": "1.65",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHeaderPosition",
                            "optional": true,
                            "defaultValue": "Top",
                            "description": "<p>New value for property <code>headerPosition</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.HeaderPosition",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.HeaderPosition"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.Card#methods/getHeaderPosition\">headerPosition</a>.</p><p>Defines the position of the Card Header.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Top</code>.</p>",
                    "href": "api/sap.f.Card#methods/setHeaderPosition",
                    "code": "<pre>setHeaderPosition(sHeaderPosition?) : this</pre>"
                }
            ],
            "displayName": "sap.f.Card",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.Card",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.CardBase",
            "basename": "CardBase",
            "resource": "sap/f/CardBase.js",
            "module": "sap/f/CardBase",
            "export": "",
            "static": true,
            "visibility": "public",
            "extends": "sap.ui.core.Control",
            "implements": [
                "sap.f.ICard",
                "sap.m.IBadge"
            ],
            "description": "<p>A base class for controls that represent a container with a predefined header and content.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "height",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "auto",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the height of the card.</p>",
                        "methods": [
                            "getHeight",
                            "setHeight"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "width",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "100%",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the width of the card.</p>",
                        "methods": [
                            "getWidth",
                            "setWidth"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>CardBase</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.CardBase(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.CardBase.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.CardBase with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.CardBase#methods/sap.f.CardBase.extend",
                    "code": "<pre>sap.f.CardBase.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getAriaRoleDescription",
                    "visibility": "restricted",
                    "href": "api/sap.f.CardBase#methods/getAriaRoleDescription",
                    "code": "<pre>getAriaRoleDescription() : void</pre>"
                },
                {
                    "name": "getFocusDomRef",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "Element",
                        "description": "<p>Returns the DOM Element that should get the focus</p>",
                        "types": [
                            {
                                "value": "Element"
                            }
                        ]
                    },
                    "description": "<p>Returns the DOM Element that should get the focus.</p>",
                    "href": "api/sap.f.CardBase#methods/getFocusDomRef",
                    "code": "<pre>getFocusDomRef() : Element</pre>"
                },
                {
                    "name": "getHeight",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>height</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.CardBase#methods/getHeight\">height</a>.</p><p>Defines the height of the card.</p><p>Default value is <code>\"auto\"</code>.</p>",
                    "href": "api/sap.f.CardBase#methods/getHeight",
                    "code": "<pre>getHeight() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "sap.f.CardBase.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.CardBase.</p>",
                    "href": "api/sap.f.CardBase#methods/sap.f.CardBase.getMetadata",
                    "code": "<pre>sap.f.CardBase.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getWidth",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>width</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.CardBase#methods/getWidth\">width</a>.</p><p>Defines the width of the card.</p><p>Default value is <code>\"100%\"</code>.</p>",
                    "href": "api/sap.f.CardBase#methods/getWidth",
                    "code": "<pre>getWidth() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "setHeight",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHeight",
                            "optional": true,
                            "defaultValue": "\"auto\"",
                            "description": "<p>New value for property <code>height</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.CardBase#methods/getHeight\">height</a>.</p><p>Defines the height of the card.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"auto\"</code>.</p>",
                    "href": "api/sap.f.CardBase#methods/setHeight",
                    "code": "<pre>setHeight(sHeight?) : this</pre>"
                },
                {
                    "name": "setWidth",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sWidth",
                            "optional": true,
                            "defaultValue": "\"100%\"",
                            "description": "<p>New value for property <code>width</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.CardBase#methods/getWidth\">width</a>.</p><p>Defines the width of the card.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"100%\"</code>.</p>",
                    "href": "api/sap.f.CardBase#methods/setWidth",
                    "code": "<pre>setWidth(sWidth?) : this</pre>"
                }
            ],
            "displayName": "sap.f.CardBase",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.CardBase",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.cards.BaseHeader",
            "basename": "BaseHeader",
            "resource": "sap/f/cards/BaseHeader.js",
            "module": "sap/f/cards/BaseHeader",
            "export": "",
            "abstract": true,
            "static": true,
            "visibility": "public",
            "since": "1.86",
            "extends": "sap.ui.core.Control",
            "description": "<p>Provides basic functionality for header controls that can be used in <code>sap.f.Card</code.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "dataTimestamp",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the timestamp of the oldest data in the card. Use this to show to the end user how fresh the information in the card is.</p><p>Must be specified in ISO 8601 format.</p><p>Will be shown as a relative time like \"5 minutes ago\".</p>",
                        "experimental": {
                            "since": "1.89",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getDataTimestamp",
                            "setDataTimestamp"
                        ]
                    },
                    {
                        "name": "dataTimestampUpdating",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Misc",
                        "visibility": "hidden",
                        "description": "<p>Set to true to show that the data timestamp is currently updating.</p>",
                        "methods": [
                            "getDataTimestampUpdating",
                            "setDataTimestampUpdating"
                        ]
                    },
                    {
                        "name": "focusable",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Misc",
                        "visibility": "hidden",
                        "description": "<p>Set to false if header shouldn't be focusable.</p>",
                        "methods": [
                            "getFocusable",
                            "setFocusable"
                        ]
                    },
                    {
                        "name": "headingLevel",
                        "type": "string",
                        "defaultValue": "3",
                        "group": "Misc",
                        "visibility": "hidden",
                        "description": "<p>Defines aria-level of the header.</p><p>When header is in a dialog aria-level is 1 When header is not in a dialog(standard scenario) aria-level is 3</p>",
                        "methods": [
                            "getHeadingLevel",
                            "setHeadingLevel"
                        ]
                    },
                    {
                        "name": "href",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the href which the header should open. If set - the header will act and render as a link.</p>",
                        "experimental": {
                            "since": "1.122",
                            "text": "Do not use this feature outside of sap.ui.integration.widgets.Card."
                        },
                        "methods": [
                            "getHref",
                            "setHref"
                        ]
                    },
                    {
                        "name": "statusVisible",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the status text visibility.</p>",
                        "experimental": {
                            "since": "1.116",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getStatusVisible",
                            "setStatusVisible"
                        ]
                    },
                    {
                        "name": "target",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the target for the case when <code>href</code> is given.</p>",
                        "experimental": {
                            "since": "1.122",
                            "text": "Do not use this feature outside of sap.ui.integration.widgets.Card."
                        },
                        "methods": [
                            "getTarget",
                            "setTarget"
                        ]
                    },
                    {
                        "name": "useTileLayout",
                        "type": "boolean",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "hidden",
                        "description": "<p>If the header should be rendered as a tile.</p>",
                        "methods": [
                            "getUseTileLayout",
                            "setUseTileLayout"
                        ]
                    },
                    {
                        "name": "useTooltips",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Misc",
                        "visibility": "hidden",
                        "description": "<p>Defines if tooltips should be shown for truncated texts.</p>",
                        "methods": [
                            "getUseTooltips",
                            "setUseTooltips"
                        ]
                    },
                    {
                        "name": "wrappingType",
                        "type": "sap.m.WrappingType",
                        "defaultValue": "Normal",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the type of text wrapping to be used inside the header. This applies to title, subtitle and details texts of the header.</p>",
                        "experimental": {
                            "since": "1.122",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getWrappingType",
                            "setWrappingType"
                        ],
                        "linkEnabled": true
                    }
                ],
                "aggregations": [
                    {
                        "name": "_dataTimestamp",
                        "singularName": "_dataTimestamp",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Holds the internal data timestamp text aggregation.</p>",
                        "methods": [
                            "get_dataTimestamp",
                            "destroy_dataTimestamp",
                            "set_dataTimestamp"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_error",
                        "singularName": "_error",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Defines an error which will be displayed in the header.</p>",
                        "methods": [
                            "get_error",
                            "destroy_error",
                            "set_error"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "bannerLines",
                        "singularName": "bannerLine",
                        "type": "sap.m.Text",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Show as a banner in the header area. Use for example for system info and application shortcut.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getBannerLines",
                            "destroyBannerLines",
                            "insertBannerLine",
                            "addBannerLine",
                            "removeBannerLine",
                            "indexOfBannerLine",
                            "removeAllBannerLines"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "toolbar",
                        "singularName": "toolbar",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.86",
                        "description": "<p>Defines the toolbar.<br><br><i>Since: 1.86.</i></p>",
                        "experimental": {
                            "since": "1.86"
                        },
                        "methods": [
                            "getToolbar",
                            "destroyToolbar",
                            "setToolbar"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>BaseHeader</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.cards.BaseHeader(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "addBannerLine",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBannerLine",
                            "optional": false,
                            "description": "<p>The bannerLine to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Text",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Text"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some bannerLine to the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/addBannerLine",
                    "code": "<pre>addBannerLine(oBannerLine) : this</pre>"
                },
                {
                    "name": "destroyBannerLines",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the bannerLines in the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/destroyBannerLines",
                    "code": "<pre>destroyBannerLines() : this</pre>"
                },
                {
                    "name": "destroyToolbar",
                    "visibility": "public",
                    "since": "1.86",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the toolbar in the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getToolbar\">toolbar</a>.</p>",
                    "experimental": {
                        "since": "1.86"
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/destroyToolbar",
                    "code": "<pre>destroyToolbar() : this</pre>"
                },
                {
                    "name": "sap.f.cards.BaseHeader.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.cards.BaseHeader with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.cards.BaseHeader#methods/sap.f.cards.BaseHeader.extend",
                    "code": "<pre>sap.f.cards.BaseHeader.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getAriaHeadingLevel",
                    "visibility": "restricted",
                    "href": "api/sap.f.cards.BaseHeader#methods/getAriaHeadingLevel",
                    "code": "<pre>getAriaHeadingLevel() : void</pre>"
                },
                {
                    "name": "getAriaRoleDescription",
                    "visibility": "restricted",
                    "href": "api/sap.f.cards.BaseHeader#methods/getAriaRoleDescription",
                    "code": "<pre>getAriaRoleDescription() : void</pre>"
                },
                {
                    "name": "getBannerLines",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.m.Text[]",
                        "types": [
                            {
                                "value": "sap.m.Text[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>.</p><p>Show as a banner in the header area. Use for example for system info and application shortcut.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getBannerLines",
                    "code": "<pre>getBannerLines() : sap.m.Text[]</pre>"
                },
                {
                    "name": "getDataTimestamp",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>dataTimestamp</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getDataTimestamp\">dataTimestamp</a>.</p><p>Defines the timestamp of the oldest data in the card. Use this to show to the end user how fresh the information in the card is.</p><p>Must be specified in ISO 8601 format.</p><p>Will be shown as a relative time like \"5 minutes ago\".</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.89",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getDataTimestamp",
                    "code": "<pre>getDataTimestamp() : string</pre>"
                },
                {
                    "name": "getFocusableElementAriaRole",
                    "visibility": "restricted",
                    "href": "api/sap.f.cards.BaseHeader#methods/getFocusableElementAriaRole",
                    "code": "<pre>getFocusableElementAriaRole() : void</pre>"
                },
                {
                    "name": "getHref",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>href</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getHref\">href</a>.</p><p>Defines the href which the header should open. If set - the header will act and render as a link.</p>",
                    "experimental": {
                        "since": "1.122",
                        "text": "Do not use this feature outside of sap.ui.integration.widgets.Card."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getHref",
                    "code": "<pre>getHref() : string</pre>"
                },
                {
                    "name": "sap.f.cards.BaseHeader.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.cards.BaseHeader.</p>",
                    "href": "api/sap.f.cards.BaseHeader#methods/sap.f.cards.BaseHeader.getMetadata",
                    "code": "<pre>sap.f.cards.BaseHeader.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getStatusVisible",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>statusVisible</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getStatusVisible\">statusVisible</a>.</p><p>Defines the status text visibility.</p><p>Default value is <code>true</code>.</p>",
                    "experimental": {
                        "since": "1.116",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getStatusVisible",
                    "code": "<pre>getStatusVisible() : boolean</pre>"
                },
                {
                    "name": "getTarget",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>target</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getTarget\">target</a>.</p><p>Defines the target for the case when <code>href</code> is given.</p>",
                    "experimental": {
                        "since": "1.122",
                        "text": "Do not use this feature outside of sap.ui.integration.widgets.Card."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getTarget",
                    "code": "<pre>getTarget() : string</pre>"
                },
                {
                    "name": "sap.f.cards.BaseHeader.getTimestampIntervalTrigger",
                    "visibility": "restricted",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.IntervalTrigger",
                        "description": "<p>The timestamp interval trigger for all card headers.</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.IntervalTrigger",
                                "href": "api/sap.ui.core.IntervalTrigger",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets or creates an interval trigger for the timestamp which is shared for all card headers.</p>",
                    "href": "api/sap.f.cards.BaseHeader#methods/sap.f.cards.BaseHeader.getTimestampIntervalTrigger",
                    "code": "<pre>sap.f.cards.BaseHeader.getTimestampIntervalTrigger() : sap.ui.core.IntervalTrigger</pre>"
                },
                {
                    "name": "getTitleAriaRole",
                    "visibility": "restricted",
                    "href": "api/sap.f.cards.BaseHeader#methods/getTitleAriaRole",
                    "code": "<pre>getTitleAriaRole() : void</pre>"
                },
                {
                    "name": "getToolbar",
                    "visibility": "public",
                    "since": "1.86",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getToolbar\">toolbar</a>.</p><p>Defines the toolbar.</p>",
                    "experimental": {
                        "since": "1.86"
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getToolbar",
                    "code": "<pre>getToolbar() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getWrappingType",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.WrappingType",
                        "description": "<p>Value of property <code>wrappingType</code></p>",
                        "types": [
                            {
                                "value": "sap.m.WrappingType",
                                "href": "api/sap.m.WrappingType",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getWrappingType\">wrappingType</a>.</p><p>Defines the type of text wrapping to be used inside the header. This applies to title, subtitle and details texts of the header.</p><p>Default value is <code>Normal</code>.</p>",
                    "experimental": {
                        "since": "1.122",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/getWrappingType",
                    "code": "<pre>getWrappingType() : sap.m.WrappingType</pre>"
                },
                {
                    "name": "indexOfBannerLine",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBannerLine",
                            "optional": false,
                            "description": "<p>The bannerLine whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.Text",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Text"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.Text</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>. and returns its index if found or -1 otherwise.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/indexOfBannerLine",
                    "code": "<pre>indexOfBannerLine(oBannerLine) : int</pre>"
                },
                {
                    "name": "insertBannerLine",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBannerLine",
                            "optional": false,
                            "description": "<p>The bannerLine to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Text",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Text"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the bannerLine should be inserted at; for a negative value of <code>iIndex</code>, the bannerLine is inserted at position 0; for a value greater than the current size of the aggregation, the bannerLine is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a bannerLine into the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/insertBannerLine",
                    "code": "<pre>insertBannerLine(oBannerLine, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllBannerLines",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.m.Text[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.Text[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/removeAllBannerLines",
                    "code": "<pre>removeAllBannerLines() : sap.m.Text[]</pre>"
                },
                {
                    "name": "removeBannerLine",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.m.Text|null",
                        "description": "<p>The removed bannerLine or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.Text",
                                "href": "api/sap.m.Text",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vBannerLine",
                            "optional": false,
                            "description": "<p>The bannerLine to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.Text",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Text"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a bannerLine from the aggregation <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getBannerLines\">bannerLines</a>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/removeBannerLine",
                    "code": "<pre>removeBannerLine(vBannerLine) : sap.m.Text|null</pre>"
                },
                {
                    "name": "setDataTimestamp",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sDataTimestamp",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>dataTimestamp</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getDataTimestamp\">dataTimestamp</a>.</p><p>Defines the timestamp of the oldest data in the card. Use this to show to the end user how fresh the information in the card is.</p><p>Must be specified in ISO 8601 format.</p><p>Will be shown as a relative time like \"5 minutes ago\".</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.89",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/setDataTimestamp",
                    "code": "<pre>setDataTimestamp(sDataTimestamp?) : this</pre>"
                },
                {
                    "name": "setHref",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHref",
                            "optional": false,
                            "description": "<p>New value for property <code>href</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getHref\">href</a>.</p><p>Defines the href which the header should open. If set - the header will act and render as a link.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "experimental": {
                        "since": "1.122",
                        "text": "Do not use this feature outside of sap.ui.integration.widgets.Card."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/setHref",
                    "code": "<pre>setHref(sHref) : this</pre>"
                },
                {
                    "name": "setStatusVisible",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bStatusVisible",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>statusVisible</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getStatusVisible\">statusVisible</a>.</p><p>Defines the status text visibility.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "experimental": {
                        "since": "1.116",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/setStatusVisible",
                    "code": "<pre>setStatusVisible(bStatusVisible?) : this</pre>"
                },
                {
                    "name": "setTarget",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTarget",
                            "optional": false,
                            "description": "<p>New value for property <code>target</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getTarget\">target</a>.</p><p>Defines the target for the case when <code>href</code> is given.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "experimental": {
                        "since": "1.122",
                        "text": "Do not use this feature outside of sap.ui.integration.widgets.Card."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/setTarget",
                    "code": "<pre>setTarget(sTarget) : this</pre>"
                },
                {
                    "name": "setToolbar",
                    "visibility": "public",
                    "since": "1.86",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oToolbar",
                            "optional": false,
                            "description": "<p>The toolbar to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getToolbar\">toolbar</a>.</p>",
                    "experimental": {
                        "since": "1.86"
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/setToolbar",
                    "code": "<pre>setToolbar(oToolbar) : this</pre>"
                },
                {
                    "name": "setWrappingType",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sWrappingType",
                            "optional": true,
                            "defaultValue": "Normal",
                            "description": "<p>New value for property <code>wrappingType</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.WrappingType",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.WrappingType"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/getWrappingType\">wrappingType</a>.</p><p>Defines the type of text wrapping to be used inside the header. This applies to title, subtitle and details texts of the header.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Normal</code>.</p>",
                    "experimental": {
                        "since": "1.122",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.BaseHeader#methods/setWrappingType",
                    "code": "<pre>setWrappingType(sWrappingType?) : this</pre>"
                }
            ],
            "displayName": "sap.f.cards.BaseHeader",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "abstract class sap.f.cards.BaseHeader",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.cards.Header",
            "basename": "Header",
            "resource": "sap/f/cards/Header.js",
            "module": "sap/f/cards/Header",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.64",
            "extends": "sap.f.cards.BaseHeader",
            "implements": [
                "sap.f.cards.IHeader"
            ],
            "description": "<p>Displays general information in the header of the <a target=\"_self\" href=\"api/sap.f.Card\">sap.f.Card</a>.</p><p>You can configure the title, subtitle, status text and icon, using the provided properties.</p><p><b>Notes:</b> <ul> <li>You should always set a title.</li> <li>To show a KPI or any numeric information, use <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader\">sap.f.cards.NumericHeader</a> instead.</li> <ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "iconAlt",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines an alt text for the avatar or icon.</p>",
                        "experimental": {
                            "since": "1.81",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getIconAlt",
                            "setIconAlt"
                        ]
                    },
                    {
                        "name": "iconBackgroundColor",
                        "type": "sap.m.AvatarColor",
                        "defaultValue": "Transparent",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines a background color for the avatar or icon.</p>",
                        "experimental": {
                            "since": "1.83",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getIconBackgroundColor",
                            "setIconBackgroundColor"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconDisplayShape",
                        "type": "sap.m.AvatarShape",
                        "defaultValue": "Circle",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the shape of the icon.</p>",
                        "methods": [
                            "getIconDisplayShape",
                            "setIconDisplayShape"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconInitials",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the initials of the icon.</p>",
                        "methods": [
                            "getIconInitials",
                            "setIconInitials"
                        ]
                    },
                    {
                        "name": "iconSize",
                        "type": "sap.m.AvatarSize",
                        "defaultValue": "S",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the size of the icon.</p>",
                        "experimental": {
                            "since": "1.119",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getIconSize",
                            "setIconSize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconSrc",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the icon source.</p>",
                        "methods": [
                            "getIconSrc",
                            "setIconSrc"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconVisible",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines whether the card icon is visible.</p>",
                        "experimental": {
                            "since": "1.83",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getIconVisible",
                            "setIconVisible"
                        ]
                    },
                    {
                        "name": "statusText",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the status text.</p>",
                        "methods": [
                            "getStatusText",
                            "setStatusText"
                        ]
                    },
                    {
                        "name": "subtitle",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the subtitle.</p>",
                        "methods": [
                            "getSubtitle",
                            "setSubtitle"
                        ]
                    },
                    {
                        "name": "subtitleMaxLines",
                        "type": "int",
                        "defaultValue": 2,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Limits the number of lines for the subtitle.</p>",
                        "experimental": {
                            "since": "1.101"
                        },
                        "methods": [
                            "getSubtitleMaxLines",
                            "setSubtitleMaxLines"
                        ]
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the title.</p>",
                        "methods": [
                            "getTitle",
                            "setTitle"
                        ]
                    },
                    {
                        "name": "titleMaxLines",
                        "type": "int",
                        "defaultValue": 3,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Limits the number of lines for the title.</p>",
                        "experimental": {
                            "since": "1.101"
                        },
                        "methods": [
                            "getTitleMaxLines",
                            "setTitleMaxLines"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_avatar",
                        "singularName": "_avatar",
                        "type": "sap.m.Avatar",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Defines the inner avatar control.</p>",
                        "methods": [
                            "get_avatar",
                            "destroy_avatar",
                            "set_avatar"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_subtitle",
                        "singularName": "_subtitle",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Defines the inner subtitle control.</p>",
                        "methods": [
                            "get_subtitle",
                            "destroy_subtitle",
                            "set_subtitle"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_title",
                        "singularName": "_title",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Defines the inner title control.</p>",
                        "methods": [
                            "get_title",
                            "destroy_title",
                            "set_title"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>Header</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.cards.Header(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "press",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        }
                    ],
                    "description": "<p>Fires when the user presses the control.</p>"
                }
            ],
            "methods": [
                {
                    "name": "attachPress",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.cards.Header</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.cards.Header#events/press\">press</a> event of this <code>sap.f.cards.Header</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.cards.Header</code> itself.</p><p>Fires when the user presses the control.</p>",
                    "href": "api/sap.f.cards.Header#methods/attachPress",
                    "code": "<pre>attachPress(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachPress",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.cards.Header#events/press\">press</a> event of this <code>sap.f.cards.Header</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.cards.Header#methods/detachPress",
                    "code": "<pre>detachPress(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "enhanceAccessibilityState",
                    "visibility": "protected",
                    "parameters": [
                        {
                            "name": "oElement",
                            "optional": false,
                            "description": "<p>The Control that gets rendered by the RenderManager</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "mAriaProps",
                            "optional": false,
                            "description": "<p>The mapping of \"aria-\" prefixed attributes</p>",
                            "types": [
                                {
                                    "value": "{role:string,level:string}"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>This method is a hook for the RenderManager that gets called during the rendering of child Controls. It allows to add, remove and update existing accessibility attributes (ARIA) of those controls.</p>",
                    "href": "api/sap.f.cards.Header#methods/enhanceAccessibilityState",
                    "code": "<pre>enhanceAccessibilityState(oElement, mAriaProps) : void</pre>"
                },
                {
                    "name": "sap.f.cards.Header.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.cards.Header with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/sap.f.cards.BaseHeader.extend\">sap.f.cards.BaseHeader.extend</a>.</p>",
                    "href": "api/sap.f.cards.Header#methods/sap.f.cards.Header.extend",
                    "code": "<pre>sap.f.cards.Header.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "firePress",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.cards.Header#events/press\">press</a> to attached listeners.</p>",
                    "href": "api/sap.f.cards.Header#methods/firePress",
                    "code": "<pre>firePress(mParameters?) : this</pre>"
                },
                {
                    "name": "getIconAlt",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>iconAlt</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconAlt\">iconAlt</a>.</p><p>Defines an alt text for the avatar or icon.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.81",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/getIconAlt",
                    "code": "<pre>getIconAlt() : string</pre>"
                },
                {
                    "name": "getIconBackgroundColor",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.AvatarColor",
                        "description": "<p>Value of property <code>iconBackgroundColor</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarColor",
                                "href": "api/sap.m.AvatarColor",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconBackgroundColor\">iconBackgroundColor</a>.</p><p>Defines a background color for the avatar or icon.</p><p>Default value is <code>Transparent</code>.</p>",
                    "experimental": {
                        "since": "1.83",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/getIconBackgroundColor",
                    "code": "<pre>getIconBackgroundColor() : sap.m.AvatarColor</pre>"
                },
                {
                    "name": "getIconDisplayShape",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.AvatarShape",
                        "description": "<p>Value of property <code>iconDisplayShape</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarShape",
                                "href": "api/sap.m.AvatarShape",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconDisplayShape\">iconDisplayShape</a>.</p><p>Defines the shape of the icon.</p><p>Default value is <code>Circle</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/getIconDisplayShape",
                    "code": "<pre>getIconDisplayShape() : sap.m.AvatarShape</pre>"
                },
                {
                    "name": "getIconInitials",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>iconInitials</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconInitials\">iconInitials</a>.</p><p>Defines the initials of the icon.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/getIconInitials",
                    "code": "<pre>getIconInitials() : string</pre>"
                },
                {
                    "name": "getIconSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.AvatarSize",
                        "description": "<p>Value of property <code>iconSize</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarSize",
                                "href": "api/sap.m.AvatarSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconSize\">iconSize</a>.</p><p>Defines the size of the icon.</p><p>Default value is <code>S</code>.</p>",
                    "experimental": {
                        "since": "1.119",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/getIconSize",
                    "code": "<pre>getIconSize() : sap.m.AvatarSize</pre>"
                },
                {
                    "name": "getIconSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>iconSrc</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconSrc\">iconSrc</a>.</p><p>Defines the icon source.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/getIconSrc",
                    "code": "<pre>getIconSrc() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "getIconVisible",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>iconVisible</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconVisible\">iconVisible</a>.</p><p>Defines whether the card icon is visible.</p><p>Default value is <code>true</code>.</p>",
                    "experimental": {
                        "since": "1.83",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/getIconVisible",
                    "code": "<pre>getIconVisible() : boolean</pre>"
                },
                {
                    "name": "sap.f.cards.Header.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.cards.Header.</p>",
                    "href": "api/sap.f.cards.Header#methods/sap.f.cards.Header.getMetadata",
                    "code": "<pre>sap.f.cards.Header.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getStatusText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>statusText</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getStatusText\">statusText</a>.</p><p>Defines the status text.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/getStatusText",
                    "code": "<pre>getStatusText() : string</pre>"
                },
                {
                    "name": "getSubtitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>subtitle</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getSubtitle\">subtitle</a>.</p><p>Defines the subtitle.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/getSubtitle",
                    "code": "<pre>getSubtitle() : string</pre>"
                },
                {
                    "name": "getSubtitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>subtitleMaxLines</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getSubtitleMaxLines\">subtitleMaxLines</a>.</p><p>Limits the number of lines for the subtitle.</p><p>Default value is <code>2</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.Header#methods/getSubtitleMaxLines",
                    "code": "<pre>getSubtitleMaxLines() : int</pre>"
                },
                {
                    "name": "getTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>title</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getTitle\">title</a>.</p><p>Defines the title.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/getTitle",
                    "code": "<pre>getTitle() : string</pre>"
                },
                {
                    "name": "getTitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>titleMaxLines</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getTitleMaxLines\">titleMaxLines</a>.</p><p>Limits the number of lines for the title.</p><p>Default value is <code>3</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.Header#methods/getTitleMaxLines",
                    "code": "<pre>getTitleMaxLines() : int</pre>"
                },
                {
                    "name": "setIconAlt",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconAlt",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>iconAlt</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconAlt\">iconAlt</a>.</p><p>Defines an alt text for the avatar or icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.81",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/setIconAlt",
                    "code": "<pre>setIconAlt(sIconAlt?) : this</pre>"
                },
                {
                    "name": "setIconBackgroundColor",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconBackgroundColor",
                            "optional": true,
                            "defaultValue": "Transparent",
                            "description": "<p>New value for property <code>iconBackgroundColor</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarColor",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarColor"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconBackgroundColor\">iconBackgroundColor</a>.</p><p>Defines a background color for the avatar or icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Transparent</code>.</p>",
                    "experimental": {
                        "since": "1.83",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/setIconBackgroundColor",
                    "code": "<pre>setIconBackgroundColor(sIconBackgroundColor?) : this</pre>"
                },
                {
                    "name": "setIconDisplayShape",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconDisplayShape",
                            "optional": true,
                            "defaultValue": "Circle",
                            "description": "<p>New value for property <code>iconDisplayShape</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarShape",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarShape"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconDisplayShape\">iconDisplayShape</a>.</p><p>Defines the shape of the icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Circle</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/setIconDisplayShape",
                    "code": "<pre>setIconDisplayShape(sIconDisplayShape?) : this</pre>"
                },
                {
                    "name": "setIconInitials",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconInitials",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>iconInitials</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconInitials\">iconInitials</a>.</p><p>Defines the initials of the icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/setIconInitials",
                    "code": "<pre>setIconInitials(sIconInitials?) : this</pre>"
                },
                {
                    "name": "setIconSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconSize",
                            "optional": true,
                            "defaultValue": "S",
                            "description": "<p>New value for property <code>iconSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconSize\">iconSize</a>.</p><p>Defines the size of the icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>S</code>.</p>",
                    "experimental": {
                        "since": "1.119",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/setIconSize",
                    "code": "<pre>setIconSize(sIconSize?) : this</pre>"
                },
                {
                    "name": "setIconSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconSrc",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>iconSrc</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconSrc\">iconSrc</a>.</p><p>Defines the icon source.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/setIconSrc",
                    "code": "<pre>setIconSrc(sIconSrc?) : this</pre>"
                },
                {
                    "name": "setIconVisible",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bIconVisible",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>iconVisible</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getIconVisible\">iconVisible</a>.</p><p>Defines whether the card icon is visible.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "experimental": {
                        "since": "1.83",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.Header#methods/setIconVisible",
                    "code": "<pre>setIconVisible(bIconVisible?) : this</pre>"
                },
                {
                    "name": "setStatusText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sStatusText",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>statusText</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getStatusText\">statusText</a>.</p><p>Defines the status text.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/setStatusText",
                    "code": "<pre>setStatusText(sStatusText?) : this</pre>"
                },
                {
                    "name": "setSubtitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSubtitle",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>subtitle</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getSubtitle\">subtitle</a>.</p><p>Defines the subtitle.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/setSubtitle",
                    "code": "<pre>setSubtitle(sSubtitle?) : this</pre>"
                },
                {
                    "name": "setSubtitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iSubtitleMaxLines",
                            "optional": true,
                            "defaultValue": 2,
                            "description": "<p>New value for property <code>subtitleMaxLines</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getSubtitleMaxLines\">subtitleMaxLines</a>.</p><p>Limits the number of lines for the subtitle.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>2</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.Header#methods/setSubtitleMaxLines",
                    "code": "<pre>setSubtitleMaxLines(iSubtitleMaxLines?) : this</pre>"
                },
                {
                    "name": "setTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTitle",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>title</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getTitle\">title</a>.</p><p>Defines the title.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.Header#methods/setTitle",
                    "code": "<pre>setTitle(sTitle?) : this</pre>"
                },
                {
                    "name": "setTitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iTitleMaxLines",
                            "optional": true,
                            "defaultValue": 3,
                            "description": "<p>New value for property <code>titleMaxLines</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.Header#methods/getTitleMaxLines\">titleMaxLines</a>.</p><p>Limits the number of lines for the title.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>3</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.Header#methods/setTitleMaxLines",
                    "code": "<pre>setTitleMaxLines(iTitleMaxLines?) : this</pre>"
                },
                {
                    "name": "shouldShowIcon",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>If the icon should be shown.</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "href": "api/sap.f.cards.Header#methods/shouldShowIcon",
                    "code": "<pre>shouldShowIcon() : boolean</pre>"
                }
            ],
            "displayName": "sap.f.cards.Header",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.cards.Header",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.cards.HeaderPosition",
            "basename": "HeaderPosition",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "cards.HeaderPosition",
            "static": true,
            "visibility": "public",
            "since": "1.65",
            "description": "<p><p>Different options for the position of the header in controls that implement the <a target=\"_self\" href=\"api/sap.f.ICard\">sap.f.ICard</a> interface.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'cards.HeaderPosition'.</p></p>",
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.cards.HeaderPosition.Bottom",
                    "visibility": "public",
                    "description": "<p>The Header is under the content.</p>"
                },
                {
                    "name": "sap.f.cards.HeaderPosition.Top",
                    "visibility": "public",
                    "description": "<p>The Header is over the content.</p>"
                }
            ],
            "displayName": "sap.f.cards.HeaderPosition",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.cards.HeaderPosition",
            "subTitle": ""
        },
        {
            "kind": "interface",
            "name": "sap.f.cards.IHeader",
            "basename": "IHeader",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.62",
            "description": "<p><p>Marker interface for controls suitable as a header in controls that implement the <a target=\"_self\" href=\"api/sap.f.ICard\">sap.f.ICard</a> interface.</p></p>",
            "displayName": "sap.f.cards.IHeader",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "interface sap.f.cards.IHeader",
            "subTitle": ""
        },
        {
            "kind": "namespace",
            "name": "sap.f.cards.loading.PlaceholderBaseRenderer",
            "basename": "PlaceholderBaseRenderer",
            "resource": "sap/f/cards/loading/PlaceholderBaseRenderer.js",
            "module": "sap/f/cards/loading/PlaceholderBaseRenderer",
            "export": "",
            "static": true,
            "visibility": "protected",
            "description": "<p><p>PlaceholderBase renderer.</p></p>",
            "methods": [
                {
                    "name": "sap.f.cards.loading.PlaceholderBaseRenderer.addOuterAttributes",
                    "visibility": "protected",
                    "static": true,
                    "parameters": [
                        {
                            "name": "oControl",
                            "optional": false,
                            "description": "<p>An object representation of the control that should be rendered.</p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.loading.PlaceholderBase",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.loading.PlaceholderBase"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oRm",
                            "optional": false,
                            "description": "<p>The RenderManager that can be used for writing to the render output buffer.</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.RenderManager",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.RenderManager"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>This method is reserved for derived classes to add their respective attributes.</p>",
                    "href": "api/sap.f.cards.loading.PlaceholderBaseRenderer#methods/sap.f.cards.loading.PlaceholderBaseRenderer.addOuterAttributes",
                    "code": "<pre>sap.f.cards.loading.PlaceholderBaseRenderer.addOuterAttributes(oControl, oRm) : void</pre>"
                },
                {
                    "name": "sap.f.cards.loading.PlaceholderBaseRenderer.renderContent",
                    "visibility": "protected",
                    "static": true,
                    "parameters": [
                        {
                            "name": "oControl",
                            "optional": false,
                            "description": "<p>An object representation of the control that should be rendered.</p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.loading.PlaceholderBase",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.loading.PlaceholderBase"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oRm",
                            "optional": false,
                            "description": "<p>The RenderManager that can be used for writing to the render output buffer.</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.RenderManager",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.RenderManager"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>This method is reserved for derived classes to render their respective content.</p>",
                    "href": "api/sap.f.cards.loading.PlaceholderBaseRenderer#methods/sap.f.cards.loading.PlaceholderBaseRenderer.renderContent",
                    "code": "<pre>sap.f.cards.loading.PlaceholderBaseRenderer.renderContent(oControl, oRm) : void</pre>"
                }
            ],
            "displayName": "sap.f.cards.loading.PlaceholderBaseRenderer",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.cards.loading.PlaceholderBaseRenderer",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.cards.NumericHeader",
            "basename": "NumericHeader",
            "resource": "sap/f/cards/NumericHeader.js",
            "module": "sap/f/cards/NumericHeader",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.64",
            "extends": "sap.f.cards.BaseHeader",
            "implements": [
                "sap.f.cards.IHeader"
            ],
            "description": "<p>Displays general information in the header of the <a target=\"_self\" href=\"api/sap.f.Card\">sap.f.Card</a> and allows the configuration of a numeric value visualization.</p><p>You can configure the title, subtitle, and status text, using the provided properties. To add more side number indicators, use the <code>sideIndicators</code> aggregation.</p><p><b>Notes:</b> <ul> <li>You should always set a title.</li> <li>You should always have a maximum of two side indicators.</li> <li>To show only basic information, use <a target=\"_self\" href=\"api/sap.f.cards.Header\">Header</a> instead.</li> </ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "details",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Additional text which adds more details to what is shown in the numeric header.</p>",
                        "methods": [
                            "getDetails",
                            "setDetails"
                        ]
                    },
                    {
                        "name": "detailsMaxLines",
                        "type": "int",
                        "defaultValue": 1,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Limits the number of lines for the details.</p>",
                        "experimental": {
                            "since": "1.101"
                        },
                        "methods": [
                            "getDetailsMaxLines",
                            "setDetailsMaxLines"
                        ]
                    },
                    {
                        "name": "detailsState",
                        "type": "sap.ui.core.ValueState",
                        "defaultValue": "None",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>The semantic color which represents the state of the details text.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getDetailsState",
                            "setDetailsState"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconAlt",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Defines an alt text for the avatar or icon.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getIconAlt",
                            "setIconAlt"
                        ]
                    },
                    {
                        "name": "iconBackgroundColor",
                        "type": "sap.m.AvatarColor",
                        "defaultValue": "Transparent",
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Defines a background color for the avatar or icon.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getIconBackgroundColor",
                            "setIconBackgroundColor"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconDisplayShape",
                        "type": "sap.m.AvatarShape",
                        "defaultValue": "Circle",
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Defines the shape of the icon.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getIconDisplayShape",
                            "setIconDisplayShape"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconInitials",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Defines the initials of the icon.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getIconInitials",
                            "setIconInitials"
                        ]
                    },
                    {
                        "name": "iconSize",
                        "type": "sap.m.AvatarSize",
                        "defaultValue": "S",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the size of the icon.</p>",
                        "experimental": {
                            "since": "1.119",
                            "text": "this feature is experimental and the API may change."
                        },
                        "methods": [
                            "getIconSize",
                            "setIconSize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconSrc",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Defines the icon source.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getIconSrc",
                            "setIconSrc"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "iconVisible",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.118",
                        "description": "<p>Defines whether the card icon is visible.<br><br><i>Since: 1.118.</i></p>",
                        "experimental": {
                            "since": "1.118",
                            "text": "For usage only by Work Zone."
                        },
                        "methods": [
                            "getIconVisible",
                            "setIconVisible"
                        ]
                    },
                    {
                        "name": "number",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>The numeric value of the main number indicator. If the value contains more than five characters, only the first five are displayed. Without rounding the number.</p>",
                        "methods": [
                            "getNumber",
                            "setNumber"
                        ]
                    },
                    {
                        "name": "numberSize",
                        "type": "string",
                        "defaultValue": "L",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The size of the of the main indicator. Possible values are \"S\" and \"L\".</p>",
                        "methods": [
                            "getNumberSize",
                            "setNumberSize"
                        ]
                    },
                    {
                        "name": "numberVisible",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Misc",
                        "visibility": "public",
                        "since": "1.109",
                        "description": "<p>Whether the main numeric indicator is visible or not<br><br><i>Since: 1.109.</i></p>",
                        "methods": [
                            "getNumberVisible",
                            "setNumberVisible"
                        ]
                    },
                    {
                        "name": "scale",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>Defines the unit of measurement (scaling prefix) for the main indicator. Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used. If the unit contains more than three characters, only the first three characters are displayed.</p>",
                        "methods": [
                            "getScale",
                            "setScale"
                        ]
                    },
                    {
                        "name": "sideIndicatorsAlignment",
                        "type": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
                        "defaultValue": "Begin",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The alignment of the side indicators.</p>",
                        "methods": [
                            "getSideIndicatorsAlignment",
                            "setSideIndicatorsAlignment"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "state",
                        "type": "sap.m.ValueColor",
                        "defaultValue": "Neutral",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The semantic color which represents the state of the main number indicator.</p>",
                        "experimental": {
                            "since": "1.64",
                            "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
                        },
                        "methods": [
                            "getState",
                            "setState"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "statusText",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the status text.</p>",
                        "methods": [
                            "getStatusText",
                            "setStatusText"
                        ]
                    },
                    {
                        "name": "subtitle",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The subtitle of the card</p>",
                        "methods": [
                            "getSubtitle",
                            "setSubtitle"
                        ]
                    },
                    {
                        "name": "subtitleMaxLines",
                        "type": "int",
                        "defaultValue": 2,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Limits the number of lines for the subtitle.</p>",
                        "experimental": {
                            "since": "1.101"
                        },
                        "methods": [
                            "getSubtitleMaxLines",
                            "setSubtitleMaxLines"
                        ]
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The title of the card</p>",
                        "methods": [
                            "getTitle",
                            "setTitle"
                        ]
                    },
                    {
                        "name": "titleMaxLines",
                        "type": "int",
                        "defaultValue": 3,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Limits the number of lines for the title.</p>",
                        "experimental": {
                            "since": "1.101"
                        },
                        "methods": [
                            "getTitleMaxLines",
                            "setTitleMaxLines"
                        ]
                    },
                    {
                        "name": "trend",
                        "type": "sap.m.DeviationIndicator",
                        "defaultValue": "None",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The direction of the trend arrow. Shows deviation for the value of the main number indicator.</p>",
                        "methods": [
                            "getTrend",
                            "setTrend"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "unitOfMeasurement",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>General unit of measurement for the header. Displayed as side information to the subtitle.</p>",
                        "methods": [
                            "getUnitOfMeasurement",
                            "setUnitOfMeasurement"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_avatar",
                        "singularName": "_avatar",
                        "type": "sap.m.Avatar",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Defines the inner avatar control.</p>",
                        "methods": [
                            "get_avatar",
                            "destroy_avatar",
                            "set_avatar"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_details",
                        "singularName": "_detail",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Display details</p>",
                        "methods": [
                            "get_details",
                            "destroy_details",
                            "set_details"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_numericIndicators",
                        "singularName": "_numericIndicator",
                        "type": "sap.f.cards.NumericIndicators",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Displays the main and side indicators</p>",
                        "methods": [
                            "get_numericIndicators",
                            "destroy_numericIndicators",
                            "set_numericIndicators"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_subtitle",
                        "singularName": "_subtitle",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Used to display subtitle text</p>",
                        "methods": [
                            "get_subtitle",
                            "destroy_subtitle",
                            "set_subtitle"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_title",
                        "singularName": "_title",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Used to display title text</p>",
                        "methods": [
                            "get_title",
                            "destroy_title",
                            "set_title"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_unitOfMeasurement",
                        "singularName": "_unitOfMeasurement",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Shows unit of measurement next to subtitle</p>",
                        "methods": [
                            "get_unitOfMeasurement",
                            "destroy_unitOfMeasurement",
                            "set_unitOfMeasurement"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "microChart",
                        "singularName": "microChart",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Micro Chart</p>",
                        "experimental": {
                            "since": "1.124"
                        },
                        "methods": [
                            "getMicroChart",
                            "destroyMicroChart",
                            "setMicroChart"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "sideIndicators",
                        "singularName": "sideIndicator",
                        "type": "sap.f.cards.NumericSideIndicator",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>Additional side number indicators. For example \"Deviation\" and \"Target\". Not more than two side indicators should be used.</p>",
                        "methods": [
                            "getSideIndicators",
                            "destroySideIndicators",
                            "insertSideIndicator",
                            "addSideIndicator",
                            "removeSideIndicator",
                            "indexOfSideIndicator",
                            "removeAllSideIndicators"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>NumericHeader</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.cards.NumericHeader(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "press",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        }
                    ],
                    "description": "<p>Fires when the user presses the control.</p>"
                }
            ],
            "methods": [
                {
                    "name": "addSideIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSideIndicator",
                            "optional": false,
                            "description": "<p>The sideIndicator to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.NumericSideIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.NumericSideIndicator"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some sideIndicator to the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/addSideIndicator",
                    "code": "<pre>addSideIndicator(oSideIndicator) : this</pre>"
                },
                {
                    "name": "attachPress",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.cards.NumericHeader</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#events/press\">press</a> event of this <code>sap.f.cards.NumericHeader</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.cards.NumericHeader</code> itself.</p><p>Fires when the user presses the control.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/attachPress",
                    "code": "<pre>attachPress(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyMicroChart",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the microChart in the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getMicroChart\">microChart</a>.</p>",
                    "experimental": {
                        "since": "1.124"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/destroyMicroChart",
                    "code": "<pre>destroyMicroChart() : this</pre>"
                },
                {
                    "name": "destroySideIndicators",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the sideIndicators in the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/destroySideIndicators",
                    "code": "<pre>destroySideIndicators() : this</pre>"
                },
                {
                    "name": "detachPress",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#events/press\">press</a> event of this <code>sap.f.cards.NumericHeader</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/detachPress",
                    "code": "<pre>detachPress(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "enhanceAccessibilityState",
                    "visibility": "protected",
                    "parameters": [
                        {
                            "name": "oElement",
                            "optional": false,
                            "description": "<p>The Control that gets rendered by the RenderManager</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "mAriaProps",
                            "optional": false,
                            "description": "<p>The mapping of \"aria-\" prefixed attributes</p>",
                            "types": [
                                {
                                    "value": "{role:string,level:string}"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>This method is a hook for the RenderManager that gets called during the rendering of child Controls. It allows to add, remove and update existing accessibility attributes (ARIA) of those controls.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/enhanceAccessibilityState",
                    "code": "<pre>enhanceAccessibilityState(oElement, mAriaProps) : void</pre>"
                },
                {
                    "name": "sap.f.cards.NumericHeader.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.cards.NumericHeader with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.cards.BaseHeader#methods/sap.f.cards.BaseHeader.extend\">sap.f.cards.BaseHeader.extend</a>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/sap.f.cards.NumericHeader.extend",
                    "code": "<pre>sap.f.cards.NumericHeader.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "firePress",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#events/press\">press</a> to attached listeners.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/firePress",
                    "code": "<pre>firePress(mParameters?) : this</pre>"
                },
                {
                    "name": "getDetails",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>details</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getDetails\">details</a>.</p><p>Additional text which adds more details to what is shown in the numeric header.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getDetails",
                    "code": "<pre>getDetails() : string</pre>"
                },
                {
                    "name": "getDetailsMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>detailsMaxLines</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getDetailsMaxLines\">detailsMaxLines</a>.</p><p>Limits the number of lines for the details.</p><p>Default value is <code>1</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getDetailsMaxLines",
                    "code": "<pre>getDetailsMaxLines() : int</pre>"
                },
                {
                    "name": "getDetailsState",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.ui.core.ValueState",
                        "description": "<p>Value of property <code>detailsState</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ValueState",
                                "href": "api/sap.ui.core.ValueState",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getDetailsState\">detailsState</a>.</p><p>The semantic color which represents the state of the details text.</p><p>Default value is <code>None</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getDetailsState",
                    "code": "<pre>getDetailsState() : sap.ui.core.ValueState</pre>"
                },
                {
                    "name": "getIconAlt",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>iconAlt</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconAlt\">iconAlt</a>.</p><p>Defines an alt text for the avatar or icon.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconAlt",
                    "code": "<pre>getIconAlt() : string</pre>"
                },
                {
                    "name": "getIconBackgroundColor",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.m.AvatarColor",
                        "description": "<p>Value of property <code>iconBackgroundColor</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarColor",
                                "href": "api/sap.m.AvatarColor",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconBackgroundColor\">iconBackgroundColor</a>.</p><p>Defines a background color for the avatar or icon.</p><p>Default value is <code>Transparent</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconBackgroundColor",
                    "code": "<pre>getIconBackgroundColor() : sap.m.AvatarColor</pre>"
                },
                {
                    "name": "getIconDisplayShape",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.m.AvatarShape",
                        "description": "<p>Value of property <code>iconDisplayShape</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarShape",
                                "href": "api/sap.m.AvatarShape",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconDisplayShape\">iconDisplayShape</a>.</p><p>Defines the shape of the icon.</p><p>Default value is <code>Circle</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconDisplayShape",
                    "code": "<pre>getIconDisplayShape() : sap.m.AvatarShape</pre>"
                },
                {
                    "name": "getIconInitials",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>iconInitials</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconInitials\">iconInitials</a>.</p><p>Defines the initials of the icon.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconInitials",
                    "code": "<pre>getIconInitials() : string</pre>"
                },
                {
                    "name": "getIconSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.AvatarSize",
                        "description": "<p>Value of property <code>iconSize</code></p>",
                        "types": [
                            {
                                "value": "sap.m.AvatarSize",
                                "href": "api/sap.m.AvatarSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconSize\">iconSize</a>.</p><p>Defines the size of the icon.</p><p>Default value is <code>S</code>.</p>",
                    "experimental": {
                        "since": "1.119",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconSize",
                    "code": "<pre>getIconSize() : sap.m.AvatarSize</pre>"
                },
                {
                    "name": "getIconSrc",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>iconSrc</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconSrc\">iconSrc</a>.</p><p>Defines the icon source.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconSrc",
                    "code": "<pre>getIconSrc() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "getIconVisible",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>iconVisible</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconVisible\">iconVisible</a>.</p><p>Defines whether the card icon is visible.</p><p>Default value is <code>true</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getIconVisible",
                    "code": "<pre>getIconVisible() : boolean</pre>"
                },
                {
                    "name": "sap.f.cards.NumericHeader.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.cards.NumericHeader.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/sap.f.cards.NumericHeader.getMetadata",
                    "code": "<pre>sap.f.cards.NumericHeader.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getMicroChart",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getMicroChart\">microChart</a>.</p><p>Micro Chart</p>",
                    "experimental": {
                        "since": "1.124"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getMicroChart",
                    "code": "<pre>getMicroChart() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getNumber",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>number</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getNumber\">number</a>.</p><p>The numeric value of the main number indicator. If the value contains more than five characters, only the first five are displayed. Without rounding the number.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getNumber",
                    "code": "<pre>getNumber() : string</pre>"
                },
                {
                    "name": "getNumberSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>numberSize</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getNumberSize\">numberSize</a>.</p><p>The size of the of the main indicator. Possible values are \"S\" and \"L\".</p><p>Default value is <code>\"L\"</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getNumberSize",
                    "code": "<pre>getNumberSize() : string</pre>"
                },
                {
                    "name": "getNumberVisible",
                    "visibility": "public",
                    "since": "1.109",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>numberVisible</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getNumberVisible\">numberVisible</a>.</p><p>Whether the main numeric indicator is visible or not</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getNumberVisible",
                    "code": "<pre>getNumberVisible() : boolean</pre>"
                },
                {
                    "name": "getScale",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>scale</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getScale\">scale</a>.</p><p>Defines the unit of measurement (scaling prefix) for the main indicator. Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used. If the unit contains more than three characters, only the first three characters are displayed.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getScale",
                    "code": "<pre>getScale() : string</pre>"
                },
                {
                    "name": "getSideIndicators",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.cards.NumericSideIndicator[]",
                        "types": [
                            {
                                "value": "sap.f.cards.NumericSideIndicator[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>.</p><p>Additional side number indicators. For example \"Deviation\" and \"Target\". Not more than two side indicators should be used.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getSideIndicators",
                    "code": "<pre>getSideIndicators() : sap.f.cards.NumericSideIndicator[]</pre>"
                },
                {
                    "name": "getSideIndicatorsAlignment",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
                        "description": "<p>Value of property <code>sideIndicatorsAlignment</code></p>",
                        "types": [
                            {
                                "value": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
                                "href": "api/sap.f.cards.NumericHeaderSideIndicatorsAlignment",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicatorsAlignment\">sideIndicatorsAlignment</a>.</p><p>The alignment of the side indicators.</p><p>Default value is <code>\"Begin\"</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getSideIndicatorsAlignment",
                    "code": "<pre>getSideIndicatorsAlignment() : sap.f.cards.NumericHeaderSideIndicatorsAlignment</pre>"
                },
                {
                    "name": "getState",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.ValueColor",
                        "description": "<p>Value of property <code>state</code></p>",
                        "types": [
                            {
                                "value": "sap.m.ValueColor",
                                "href": "api/sap.m.ValueColor",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getState\">state</a>.</p><p>The semantic color which represents the state of the main number indicator.</p><p>Default value is <code>\"Neutral\"</code>.</p>",
                    "experimental": {
                        "since": "1.64",
                        "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getState",
                    "code": "<pre>getState() : sap.m.ValueColor</pre>"
                },
                {
                    "name": "getStatusText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>statusText</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getStatusText\">statusText</a>.</p><p>Defines the status text.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getStatusText",
                    "code": "<pre>getStatusText() : string</pre>"
                },
                {
                    "name": "getSubtitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>subtitle</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSubtitle\">subtitle</a>.</p><p>The subtitle of the card</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getSubtitle",
                    "code": "<pre>getSubtitle() : string</pre>"
                },
                {
                    "name": "getSubtitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>subtitleMaxLines</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSubtitleMaxLines\">subtitleMaxLines</a>.</p><p>Limits the number of lines for the subtitle.</p><p>Default value is <code>2</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getSubtitleMaxLines",
                    "code": "<pre>getSubtitleMaxLines() : int</pre>"
                },
                {
                    "name": "getTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>title</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getTitle\">title</a>.</p><p>The title of the card</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getTitle",
                    "code": "<pre>getTitle() : string</pre>"
                },
                {
                    "name": "getTitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>titleMaxLines</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getTitleMaxLines\">titleMaxLines</a>.</p><p>Limits the number of lines for the title.</p><p>Default value is <code>3</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/getTitleMaxLines",
                    "code": "<pre>getTitleMaxLines() : int</pre>"
                },
                {
                    "name": "getTrend",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.DeviationIndicator",
                        "description": "<p>Value of property <code>trend</code></p>",
                        "types": [
                            {
                                "value": "sap.m.DeviationIndicator",
                                "href": "api/sap.m.DeviationIndicator",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getTrend\">trend</a>.</p><p>The direction of the trend arrow. Shows deviation for the value of the main number indicator.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getTrend",
                    "code": "<pre>getTrend() : sap.m.DeviationIndicator</pre>"
                },
                {
                    "name": "getUnitOfMeasurement",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>unitOfMeasurement</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getUnitOfMeasurement\">unitOfMeasurement</a>.</p><p>General unit of measurement for the header. Displayed as side information to the subtitle.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/getUnitOfMeasurement",
                    "code": "<pre>getUnitOfMeasurement() : string</pre>"
                },
                {
                    "name": "indexOfSideIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSideIndicator",
                            "optional": false,
                            "description": "<p>The sideIndicator whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.NumericSideIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.NumericSideIndicator"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.f.cards.NumericSideIndicator</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/indexOfSideIndicator",
                    "code": "<pre>indexOfSideIndicator(oSideIndicator) : int</pre>"
                },
                {
                    "name": "insertSideIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSideIndicator",
                            "optional": false,
                            "description": "<p>The sideIndicator to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.NumericSideIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.NumericSideIndicator"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the sideIndicator should be inserted at; for a negative value of <code>iIndex</code>, the sideIndicator is inserted at position 0; for a value greater than the current size of the aggregation, the sideIndicator is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a sideIndicator into the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/insertSideIndicator",
                    "code": "<pre>insertSideIndicator(oSideIndicator, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllSideIndicators",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.cards.NumericSideIndicator[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.f.cards.NumericSideIndicator[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/removeAllSideIndicators",
                    "code": "<pre>removeAllSideIndicators() : sap.f.cards.NumericSideIndicator[]</pre>"
                },
                {
                    "name": "removeSideIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.cards.NumericSideIndicator|null",
                        "description": "<p>The removed sideIndicator or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.f.cards.NumericSideIndicator",
                                "href": "api/sap.f.cards.NumericSideIndicator",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vSideIndicator",
                            "optional": false,
                            "description": "<p>The sideIndicator to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.f.cards.NumericSideIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.NumericSideIndicator"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a sideIndicator from the aggregation <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicators\">sideIndicators</a>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/removeSideIndicator",
                    "code": "<pre>removeSideIndicator(vSideIndicator) : sap.f.cards.NumericSideIndicator|null</pre>"
                },
                {
                    "name": "setDetails",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sDetails",
                            "optional": false,
                            "description": "<p>New value for property <code>details</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getDetails\">details</a>.</p><p>Additional text which adds more details to what is shown in the numeric header.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setDetails",
                    "code": "<pre>setDetails(sDetails) : this</pre>"
                },
                {
                    "name": "setDetailsMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iDetailsMaxLines",
                            "optional": true,
                            "defaultValue": 1,
                            "description": "<p>New value for property <code>detailsMaxLines</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getDetailsMaxLines\">detailsMaxLines</a>.</p><p>Limits the number of lines for the details.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>1</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setDetailsMaxLines",
                    "code": "<pre>setDetailsMaxLines(iDetailsMaxLines?) : this</pre>"
                },
                {
                    "name": "setDetailsState",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sDetailsState",
                            "optional": true,
                            "defaultValue": "None",
                            "description": "<p>New value for property <code>detailsState</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ValueState",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ValueState"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getDetailsState\">detailsState</a>.</p><p>The semantic color which represents the state of the details text.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>None</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setDetailsState",
                    "code": "<pre>setDetailsState(sDetailsState?) : this</pre>"
                },
                {
                    "name": "setIconAlt",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconAlt",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>iconAlt</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconAlt\">iconAlt</a>.</p><p>Defines an alt text for the avatar or icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconAlt",
                    "code": "<pre>setIconAlt(sIconAlt?) : this</pre>"
                },
                {
                    "name": "setIconBackgroundColor",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconBackgroundColor",
                            "optional": true,
                            "defaultValue": "Transparent",
                            "description": "<p>New value for property <code>iconBackgroundColor</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarColor",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarColor"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconBackgroundColor\">iconBackgroundColor</a>.</p><p>Defines a background color for the avatar or icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Transparent</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconBackgroundColor",
                    "code": "<pre>setIconBackgroundColor(sIconBackgroundColor?) : this</pre>"
                },
                {
                    "name": "setIconDisplayShape",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconDisplayShape",
                            "optional": true,
                            "defaultValue": "Circle",
                            "description": "<p>New value for property <code>iconDisplayShape</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarShape",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarShape"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconDisplayShape\">iconDisplayShape</a>.</p><p>Defines the shape of the icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Circle</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconDisplayShape",
                    "code": "<pre>setIconDisplayShape(sIconDisplayShape?) : this</pre>"
                },
                {
                    "name": "setIconInitials",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconInitials",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>iconInitials</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconInitials\">iconInitials</a>.</p><p>Defines the initials of the icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconInitials",
                    "code": "<pre>setIconInitials(sIconInitials?) : this</pre>"
                },
                {
                    "name": "setIconSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconSize",
                            "optional": true,
                            "defaultValue": "S",
                            "description": "<p>New value for property <code>iconSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.AvatarSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.AvatarSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconSize\">iconSize</a>.</p><p>Defines the size of the icon.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>S</code>.</p>",
                    "experimental": {
                        "since": "1.119",
                        "text": "this feature is experimental and the API may change."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconSize",
                    "code": "<pre>setIconSize(sIconSize?) : this</pre>"
                },
                {
                    "name": "setIconSrc",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIconSrc",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>iconSrc</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconSrc\">iconSrc</a>.</p><p>Defines the icon source.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconSrc",
                    "code": "<pre>setIconSrc(sIconSrc?) : this</pre>"
                },
                {
                    "name": "setIconVisible",
                    "visibility": "public",
                    "since": "1.118",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bIconVisible",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>iconVisible</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getIconVisible\">iconVisible</a>.</p><p>Defines whether the card icon is visible.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "experimental": {
                        "since": "1.118",
                        "text": "For usage only by Work Zone."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setIconVisible",
                    "code": "<pre>setIconVisible(bIconVisible?) : this</pre>"
                },
                {
                    "name": "setMicroChart",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMicroChart",
                            "optional": false,
                            "description": "<p>The microChart to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getMicroChart\">microChart</a>.</p>",
                    "experimental": {
                        "since": "1.124"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setMicroChart",
                    "code": "<pre>setMicroChart(oMicroChart) : this</pre>"
                },
                {
                    "name": "setNumber",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sNumber",
                            "optional": false,
                            "description": "<p>New value for property <code>number</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getNumber\">number</a>.</p><p>The numeric value of the main number indicator. If the value contains more than five characters, only the first five are displayed. Without rounding the number.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setNumber",
                    "code": "<pre>setNumber(sNumber) : this</pre>"
                },
                {
                    "name": "setNumberSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sNumberSize",
                            "optional": true,
                            "defaultValue": "\"L\"",
                            "description": "<p>New value for property <code>numberSize</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getNumberSize\">numberSize</a>.</p><p>The size of the of the main indicator. Possible values are \"S\" and \"L\".</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"L\"</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setNumberSize",
                    "code": "<pre>setNumberSize(sNumberSize?) : this</pre>"
                },
                {
                    "name": "setNumberVisible",
                    "visibility": "public",
                    "since": "1.109",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bNumberVisible",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>numberVisible</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getNumberVisible\">numberVisible</a>.</p><p>Whether the main numeric indicator is visible or not</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setNumberVisible",
                    "code": "<pre>setNumberVisible(bNumberVisible?) : this</pre>"
                },
                {
                    "name": "setScale",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sScale",
                            "optional": false,
                            "description": "<p>New value for property <code>scale</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getScale\">scale</a>.</p><p>Defines the unit of measurement (scaling prefix) for the main indicator. Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used. If the unit contains more than three characters, only the first three characters are displayed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setScale",
                    "code": "<pre>setScale(sScale) : this</pre>"
                },
                {
                    "name": "setSideIndicatorsAlignment",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSideIndicatorsAlignment",
                            "optional": true,
                            "defaultValue": "\"Begin\"",
                            "description": "<p>New value for property <code>sideIndicatorsAlignment</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.cards.NumericHeaderSideIndicatorsAlignment"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSideIndicatorsAlignment\">sideIndicatorsAlignment</a>.</p><p>The alignment of the side indicators.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"Begin\"</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setSideIndicatorsAlignment",
                    "code": "<pre>setSideIndicatorsAlignment(sSideIndicatorsAlignment?) : this</pre>"
                },
                {
                    "name": "setState",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sState",
                            "optional": true,
                            "defaultValue": "\"Neutral\"",
                            "description": "<p>New value for property <code>state</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.ValueColor",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.ValueColor"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getState\">state</a>.</p><p>The semantic color which represents the state of the main number indicator.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"Neutral\"</code>.</p>",
                    "experimental": {
                        "since": "1.64",
                        "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setState",
                    "code": "<pre>setState(sState?) : this</pre>"
                },
                {
                    "name": "setStatusText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sStatusText",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>statusText</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getStatusText\">statusText</a>.</p><p>Defines the status text.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setStatusText",
                    "code": "<pre>setStatusText(sStatusText?) : this</pre>"
                },
                {
                    "name": "setSubtitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSubtitle",
                            "optional": false,
                            "description": "<p>New value for property <code>subtitle</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSubtitle\">subtitle</a>.</p><p>The subtitle of the card</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setSubtitle",
                    "code": "<pre>setSubtitle(sSubtitle) : this</pre>"
                },
                {
                    "name": "setSubtitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iSubtitleMaxLines",
                            "optional": true,
                            "defaultValue": 2,
                            "description": "<p>New value for property <code>subtitleMaxLines</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getSubtitleMaxLines\">subtitleMaxLines</a>.</p><p>Limits the number of lines for the subtitle.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>2</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setSubtitleMaxLines",
                    "code": "<pre>setSubtitleMaxLines(iSubtitleMaxLines?) : this</pre>"
                },
                {
                    "name": "setTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTitle",
                            "optional": false,
                            "description": "<p>New value for property <code>title</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getTitle\">title</a>.</p><p>The title of the card</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setTitle",
                    "code": "<pre>setTitle(sTitle) : this</pre>"
                },
                {
                    "name": "setTitleMaxLines",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iTitleMaxLines",
                            "optional": true,
                            "defaultValue": 3,
                            "description": "<p>New value for property <code>titleMaxLines</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getTitleMaxLines\">titleMaxLines</a>.</p><p>Limits the number of lines for the title.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>3</code>.</p>",
                    "experimental": {
                        "since": "1.101"
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/setTitleMaxLines",
                    "code": "<pre>setTitleMaxLines(iTitleMaxLines?) : this</pre>"
                },
                {
                    "name": "setTrend",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTrend",
                            "optional": true,
                            "defaultValue": "\"None\"",
                            "description": "<p>New value for property <code>trend</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.DeviationIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.DeviationIndicator"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getTrend\">trend</a>.</p><p>The direction of the trend arrow. Shows deviation for the value of the main number indicator.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setTrend",
                    "code": "<pre>setTrend(sTrend?) : this</pre>"
                },
                {
                    "name": "setUnitOfMeasurement",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sUnitOfMeasurement",
                            "optional": false,
                            "description": "<p>New value for property <code>unitOfMeasurement</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader#methods/getUnitOfMeasurement\">unitOfMeasurement</a>.</p><p>General unit of measurement for the header. Displayed as side information to the subtitle.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.cards.NumericHeader#methods/setUnitOfMeasurement",
                    "code": "<pre>setUnitOfMeasurement(sUnitOfMeasurement) : this</pre>"
                },
                {
                    "name": "shouldShowIcon",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>If the icon should be shown.</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "href": "api/sap.f.cards.NumericHeader#methods/shouldShowIcon",
                    "code": "<pre>shouldShowIcon() : boolean</pre>"
                }
            ],
            "displayName": "sap.f.cards.NumericHeader",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.cards.NumericHeader",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
            "basename": "NumericHeaderSideIndicatorsAlignment",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "cards.NumericHeaderSideIndicatorsAlignment",
            "static": true,
            "visibility": "public",
            "since": "1.96",
            "description": "<p><p>Different options for the alignment of the side indicators in the numeric header.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'cards.NumericHeaderSideIndicatorsAlignment'.</p></p>",
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.cards.NumericHeaderSideIndicatorsAlignment.Begin",
                    "visibility": "public",
                    "description": "<p>Sets the alignment to the beginning (left or right depending on LTR/RTL).</p>"
                },
                {
                    "name": "sap.f.cards.NumericHeaderSideIndicatorsAlignment.End",
                    "visibility": "public",
                    "description": "<p>Explicitly sets the alignment to the end (left or right depending on LTR/RTL).</p>"
                }
            ],
            "displayName": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.cards.NumericHeaderSideIndicatorsAlignment",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.cards.NumericSideIndicator",
            "basename": "NumericSideIndicator",
            "resource": "sap/f/cards/NumericSideIndicator.js",
            "module": "sap/f/cards/NumericSideIndicator",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.64",
            "extends": "sap.ui.core.Control",
            "description": "<p>Holds a set of side indicator attributes used in the <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader\">sap.f.cards.NumericHeader</a> control.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "number",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>The numeric value</p>",
                        "methods": [
                            "getNumber",
                            "setNumber"
                        ]
                    },
                    {
                        "name": "state",
                        "type": "sap.m.ValueColor",
                        "defaultValue": "None",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The semantic color which represents the state of the side indicator.</p>",
                        "experimental": {
                            "since": "1.95",
                            "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
                        },
                        "methods": [
                            "getState",
                            "setState"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>The title of the indicator</p>",
                        "methods": [
                            "getTitle",
                            "setTitle"
                        ]
                    },
                    {
                        "name": "unit",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>Defines the unit of measurement (scaling prefix) for the numeric value</p>",
                        "methods": [
                            "getUnit",
                            "setUnit"
                        ]
                    },
                    {
                        "name": "useTooltips",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Misc",
                        "visibility": "hidden",
                        "description": "<p>Defines if tooltips should be shown for truncated texts.</p>",
                        "methods": [
                            "getUseTooltips",
                            "setUseTooltips"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_number",
                        "singularName": "_number",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Used to display the number part of the indicator</p>",
                        "methods": [
                            "get_number",
                            "destroy_number",
                            "set_number"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_title",
                        "singularName": "_title",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Used to display title</p>",
                        "methods": [
                            "get_title",
                            "destroy_title",
                            "set_title"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_unit",
                        "singularName": "_unit",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Used to display the unit of measurement for the number</p>",
                        "methods": [
                            "get_unit",
                            "destroy_unit",
                            "set_unit"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>NumericSideIndicator</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.cards.NumericSideIndicator(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.cards.NumericSideIndicator.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.cards.NumericSideIndicator with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/sap.f.cards.NumericSideIndicator.extend",
                    "code": "<pre>sap.f.cards.NumericSideIndicator.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.cards.NumericSideIndicator.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.cards.NumericSideIndicator.</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/sap.f.cards.NumericSideIndicator.getMetadata",
                    "code": "<pre>sap.f.cards.NumericSideIndicator.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getNumber",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>number</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericSideIndicator#methods/getNumber\">number</a>.</p><p>The numeric value</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/getNumber",
                    "code": "<pre>getNumber() : string</pre>"
                },
                {
                    "name": "getState",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.ValueColor",
                        "description": "<p>Value of property <code>state</code></p>",
                        "types": [
                            {
                                "value": "sap.m.ValueColor",
                                "href": "api/sap.m.ValueColor",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericSideIndicator#methods/getState\">state</a>.</p><p>The semantic color which represents the state of the side indicator.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "experimental": {
                        "since": "1.95",
                        "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
                    },
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/getState",
                    "code": "<pre>getState() : sap.m.ValueColor</pre>"
                },
                {
                    "name": "getTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>title</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericSideIndicator#methods/getTitle\">title</a>.</p><p>The title of the indicator</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/getTitle",
                    "code": "<pre>getTitle() : string</pre>"
                },
                {
                    "name": "getUnit",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>unit</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.cards.NumericSideIndicator#methods/getUnit\">unit</a>.</p><p>Defines the unit of measurement (scaling prefix) for the numeric value</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/getUnit",
                    "code": "<pre>getUnit() : string</pre>"
                },
                {
                    "name": "setNumber",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>this pointer for chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sValue",
                            "optional": false,
                            "description": "<p>The text of the title</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the numeric value.</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/setNumber",
                    "code": "<pre>setNumber(sValue) : this</pre>"
                },
                {
                    "name": "setState",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sState",
                            "optional": true,
                            "defaultValue": "\"None\"",
                            "description": "<p>New value for property <code>state</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.ValueColor",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.ValueColor"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.cards.NumericSideIndicator#methods/getState\">state</a>.</p><p>The semantic color which represents the state of the side indicator.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "experimental": {
                        "since": "1.95",
                        "text": "Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."
                    },
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/setState",
                    "code": "<pre>setState(sState?) : this</pre>"
                },
                {
                    "name": "setTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>this pointer for chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sValue",
                            "optional": false,
                            "description": "<p>The text of the title</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the title.</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/setTitle",
                    "code": "<pre>setTitle(sValue) : this</pre>"
                },
                {
                    "name": "setUnit",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>this pointer for chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sValue",
                            "optional": false,
                            "description": "<p>The text of the title</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the unit of measurement.</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator#methods/setUnit",
                    "code": "<pre>setUnit(sValue) : this</pre>"
                }
            ],
            "displayName": "sap.f.cards.NumericSideIndicator",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.cards.NumericSideIndicator",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.dnd.GridDropInfo",
            "basename": "GridDropInfo",
            "resource": "sap/f/dnd/GridDropInfo.js",
            "module": "sap/f/dnd/GridDropInfo",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.68",
            "extends": "sap.ui.core.dnd.DropInfo",
            "implements": [
                "sap.ui.core.dnd.IDropInfo"
            ],
            "description": "<p>Provides enhanced configuration for drop operations inside grid-based controls.</p><p>If drop position is <code>Between</code> and drop layout is <code>Horizontal</code>, this drop configuration will provide enhanced visualization and interaction, better suited for grid items. It will show a drop indicator which mimics the size of the dragged item and shows the potential drop position inside the grid. The indicator will push away other grid items, showing the correct arrangement calculated by the grid’s auto-placement algorithm.</p><p>When position is different than <code>Between</code> or layout is not <code>Horizontal</code>, the drag and drop will look and behave like the general <code><a target=\"_self\" href=\"api/sap.ui.core.dnd.DropInfo\">sap.ui.core.dnd.DropInfo</a></code>.</p><p><b>Note:</b> This configuration might be ignored due to control <a target=\"_self\" href=\"api/sap.ui.core.Element#methods/sap.ui.core.Element.extend\">metadata</a> restrictions.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "dropIndicatorSize",
                        "type": "function",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>A function which will define the desired drop indicator size. The drop indicator shows the user how the grid will rearrange after drop.</p><p>Use when custom size needs to be defined. For example when an item is dragged from outside a grid and is dropped over the grid.</p><p>If not specified or if the function returns <code>null</code>, the indicator size will be calculated automatically.</p><p>This callback will be called when the indicator is displayed, which happens during the drag over movement.</p><p>The callback receives <code>draggedControl</code> as parameter and must return an object of type <code>{rows: int, columns: int}</code> or <code>null</code>.</p>",
                        "methods": [
                            "getDropIndicatorSize",
                            "setDropIndicatorSize"
                        ]
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new DropInfo, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the GridDropInfo</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new GridDropInfo.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.dnd.GridDropInfo(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.dnd.GridDropInfo.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.dnd.GridDropInfo with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.dnd.DropInfo#methods/sap.ui.core.dnd.DropInfo.extend\">sap.ui.core.dnd.DropInfo.extend</a>.</p>",
                    "href": "api/sap.f.dnd.GridDropInfo#methods/sap.f.dnd.GridDropInfo.extend",
                    "code": "<pre>sap.f.dnd.GridDropInfo.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getDropIndicatorSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "function(sap.ui.core.Control) : ({rows:int,columns:int}|null)|undefined",
                        "description": "<p>Value of property <code>dropIndicatorSize</code></p>",
                        "types": [
                            {
                                "value": "function(sap.ui.core.Control) : ({rows:int,columns:int}"
                            },
                            {
                                "value": "null)"
                            },
                            {
                                "value": "undefined"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo#methods/getDropIndicatorSize\">dropIndicatorSize</a>.</p><p>A function which will define the desired drop indicator size. The drop indicator shows the user how the grid will rearrange after drop. Use when custom size needs to be defined. For example, when an item is dragged from outside a grid and is dropped over the grid.</p><p>If not specified or if the function returns <code>null</code>, the indicator size will be calculated automatically.</p><p>This callback will be called when the indicator is displayed, which happens during the drag over movement.</p><p>The callback receives <code>draggedControl</code> as parameter and must return an object of type <code>{rows: int, columns: int}</code> or <code>null</code>.</p>",
                    "href": "api/sap.f.dnd.GridDropInfo#methods/getDropIndicatorSize",
                    "code": "<pre>getDropIndicatorSize() : function(sap.ui.core.Control) : ({rows:int,columns:int}|null)|undefined</pre>"
                },
                {
                    "name": "sap.f.dnd.GridDropInfo.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.dnd.GridDropInfo.</p>",
                    "href": "api/sap.f.dnd.GridDropInfo#methods/sap.f.dnd.GridDropInfo.getMetadata",
                    "code": "<pre>sap.f.dnd.GridDropInfo.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "setDropIndicatorSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnDropIndicatorSize",
                            "optional": true,
                            "description": "<p>New value for property <code>dropIndicatorSize</code></p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.core.Control) : ({rows:int,columns:int}"
                                },
                                {
                                    "value": "null)"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo#methods/setDropIndicatorSize\">dropIndicatorSize</a>.</p><p>A function which will define the desired drop indicator size. The drop indicator shows the user how the grid will rearrange after drop. Use when custom size needs to be defined. For example when an item is dragged from outside a grid and is dropped over the grid.</p><p>If not specified or if the function returns <code>null</code>, the indicator size will be calculated automatically.</p><p>This callback will be called when the indicator is displayed, which happens during the drag over movement.</p><p>The callback receives <code>draggedControl</code> as parameter and must return an object of type <code>{rows: int, columns: int}</code> or <code>null</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.dnd.GridDropInfo#methods/setDropIndicatorSize",
                    "code": "<pre>setDropIndicatorSize(fnDropIndicatorSize?) : this</pre>"
                }
            ],
            "displayName": "sap.f.dnd.GridDropInfo",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.dnd.GridDropInfo",
            "subTitle": ""
        },
        {
            "kind": "interface",
            "name": "sap.f.dnd.IGridDroppable",
            "basename": "IGridDroppable",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.68",
            "description": "<p><p>Interface that should be implemented by grid controls, if they are working with the <code>sap.f.dnd.GridDropInfo</code>.</p><p>It is highly recommended that those grid controls have optimized <code>removeItem</code> and <code>insertItem</code> methods (if \"items\" is target drop aggregation). Meaning to override them in a way that they don't trigger invalidation.</p></p>",
            "displayName": "sap.f.dnd.IGridDroppable",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "interface sap.f.dnd.IGridDroppable",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.DynamicPage",
            "basename": "DynamicPage",
            "resource": "sap/f/DynamicPage.js",
            "module": "sap/f/DynamicPage",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.42",
            "extends": "sap.ui.core.Control",
            "description": "<p>A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.</p><h3>Overview</h3><p>The control consist of several components:</p><p><ul><li><a target=\"_self\" href=\"api/sap.f.DynamicPageTitle\">DynamicPageTitle</a> - consists of a heading on the left side, content in the middle, and actions on the right. The displayed content changes based on the current mode of the <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader\">DynamicPageHeader</a>.</li> <li><a target=\"_self\" href=\"api/sap.f.DynamicPageHeader\">DynamicPageHeader</a> - a generic container, which can contain a single layout control and does not care about the content alignment and responsiveness. The header works in two modes - expanded and snapped and its behavior can be adjusted with the help of different properties.</li> <li>Content area - a generic container, which can have a single UI5 layout control and does not care about the content alignment and responsiveness.</li> <li>Footer - positioned at the bottom with a small offset and used for additional actions, the footer floats above the content. It can be any <a target=\"_self\" href=\"api/sap.m.IBar\">sap.m.IBar</a> control.</li></ul></p><h3>Usage</h3><p>Use the <code>DynamicPage</code> if you need to have a title, that is always visible and a header, that has configurable Expanding/Snapping functionality. If you don't need the Expanding/Snapping functionality it is better to use the <a target=\"_self\" href=\"api/sap.m.Page\">sap.m.Page</a> as a lighter control.</p><p><ul><b>Notes:</b> <li>If you're displaying a <a target=\"_self\" href=\"api/sap.m.FlexBox\">sap.m.FlexBox</a> with non-adaptive content (doesn't stretch to fill the available space), it is recommended to set the <code>fitContainer</code> property of the <a target=\"_self\" href=\"api/sap.m.FlexBox\">FlexBox</a> to <code>false</code>.</li> <li>If you are displaying a <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a>, keep in mind that it is non-adaptive and may cause unpredicted behavior for the <code>DynamicPage</code> on smaller screen sizes, such as mobile.</li> <li>Snapping of the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle\">DynamicPageTitle</a> is not supported in the following case: When the <code>DynamicPage</code> has a scroll bar, the control usually scrolls to the snapping point - the point, where the <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader\">DynamicPageHeader</a> is scrolled out completely. However, when there is a scroll bar, but not enough content to reach the snapping point, the snapping is not possible using scrolling.</li> <li>When using <a target=\"_self\" href=\"api/sap.ui.layout.form.Form\">sap.ui.layout.form.Form</a>, <a target=\"_self\" href=\"api/sap.m.Panel\">sap.m.Panel</a>, <a target=\"_self\" href=\"api/sap.m.Table\">sap.m.Table</a> and <a target=\"_self\" href=\"api/sap.m.List\">sap.m.List</a> controls in the content of <code>DynamicPage</code>, you need to adjust their left text offset if you want to achieve vertical alignment between the <code>sap.f.DynamicPageHeader</code>`s content and <code>DynamicPage</code>`s content. For more information, see the documentation for the <code>content</code> aggregation.</li></ul></p><h3>Responsive Behavior</h3><p>The responsive behavior of the <code>DynamicPage</code> depends on the behavior of the content that is displayed. To adjust the <code>DynamicPage</code> content padding, the <code>sapUiContentPadding</code>, <code>sapUiNoContentPadding</code>, and <code>sapUiResponsiveContentPadding</code> CSS classes can be used.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "backgroundDesign",
                        "type": "sap.m.PageBackgroundDesign",
                        "defaultValue": "Standard",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.68",
                        "description": "<p>Determines the background color of <code>DynamicPage</code>.<br><br><i>Since: 1.68.</i></p>",
                        "methods": [
                            "getBackgroundDesign",
                            "setBackgroundDesign"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "fitContent",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Forces the content container of the <code>DynamicPage</code> to make room for stretchable controls in the <code>content</code> aggregation to fill exactly the visible space between the header and the footer.</p><p><b>Notes:</b> <ul> <li>Enable this property only if the control of the <code>content</code> aggregation is configured to automatically stretch to fill the available height, which means that the content would appear squashed in height when this property is disabled. Such stretchable controls may be <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a> and <a target=\"_self\" href=\"api/sap.ui.table.AnalyticalTable\">sap.ui.table.AnalyticalTable</a> depending on their settings.</li> <li>It is not recommended to enable this property for controls that do not stretch in height (and appear properly when this property is disabled).</li> </ul></p>",
                        "methods": [
                            "getFitContent",
                            "setFitContent"
                        ]
                    },
                    {
                        "name": "headerExpanded",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the header is expanded.</p><p>The header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.</p><p><b>Note:</b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false</code>.</p>",
                        "methods": [
                            "getHeaderExpanded",
                            "setHeaderExpanded"
                        ]
                    },
                    {
                        "name": "headerPinned",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "since": "1.93",
                        "description": "<p>Determines whether the <code>DynamicPageHeader</code> is pinned.</p><p>The property can be changed programmatically or in the occurrence of the following user interactions: <ul> <li>Toggling the pin/unpin button of <code>DynamicPageHeader</code></li> <li>Snapping the <code>DynamicPageHeader</code> by explicitly clicking on the <code>DynamicPageTitle</code></li> </ul></p><p><b>Note: </b> The property will only apply if the header is effectively pinnable, i.e. if the following conditions are met: <ul> <li><code>DynamicPageHeader</code> <code>pinnable</code> property is <code>true</code></li> <li><code>DynamicPageHeader</code> is expanded</li> <li><code>DynamicPage</code> <code>preserveHeaderStateOnScroll</code> property is effectively disabled</li> </ul><br><br><i>Since: 1.93.</i></p>",
                        "methods": [
                            "getHeaderPinned",
                            "setHeaderPinned"
                        ]
                    },
                    {
                        "name": "preserveHeaderStateOnScroll",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.</p><p><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example, when the control`s title and header are with height larger than the given threshold.</p>",
                        "methods": [
                            "getPreserveHeaderStateOnScroll",
                            "setPreserveHeaderStateOnScroll"
                        ]
                    },
                    {
                        "name": "showFooter",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the footer is visible.</p>",
                        "methods": [
                            "getShowFooter",
                            "setShowFooter"
                        ]
                    },
                    {
                        "name": "toggleHeaderOnTitleClick",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader</code> by clicking on the <code>DynamicPageTitle</code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle</code> and the <code>DynamicPageHeader</code>. If set to <code>false</code>, the <code>DynamicPageTitle</code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.</p><p><b>Note: </b> This property is taken into account only if a non-empty <code>header</code> aggregation is provided.</p>",
                        "methods": [
                            "getToggleHeaderOnTitleClick",
                            "setToggleHeaderOnTitleClick"
                        ]
                    }
                ],
                "dnd": {
                    "draggable": false,
                    "droppable": true
                },
                "aggregations": [
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p><code>DynamicPage</code> content.</p><p><b>Note: </b> You can change the default paddings by adding the following CSS classes: <ul> <li><code>sapUiContentPadding</code></li> <li><code>sapUiNoContentPadding</code></li> <li><code>sapUiResponsiveContentPadding</code></li> </ul> For more information, see <a target=\"_self\" href=\"topic/c71f6df62dae47ca8284310a6f5fc80a\">Using Container Content Padding CSS Classes</a>.</p><p><b>Note:</b> The SAP Fiori Design guidelines require that the <code>DynamicPageHeader</code>'s content and the <code>DynamicPage</code>'s content are aligned vertically. When using <a target=\"_self\" href=\"api/sap.ui.layout.form.Form\">sap.ui.layout.form.Form</a>, <a target=\"_self\" href=\"api/sap.m.Panel\">sap.m.Panel</a>, <a target=\"_self\" href=\"api/sap.m.Table\">sap.m.Table</a> and <a target=\"_self\" href=\"api/sap.m.List\">sap.m.List</a> in the content area of <code>DynamicPage</code>, if the content is not already aligned, you need to adjust their left text offset to achieve the vertical alignment. To do this, apply the <code>sapFDynamicPageAlignContent</code> CSS class to them and set their <code>width</code> property to <code>auto</code> (if not set by default).</p><p>Example:</p><p><pre>\n<code> &lt;Panel class=“sapFDynamicPageAlignContent” width=“auto”&gt;&lt;/Panel&gt; </code>\n</pre></p><p>Please keep in mind that the alignment is not possible in the following cases: <ul> <li> When the controls are placed in an <a target=\"_self\" href=\"api/sap.ui.layout.Grid\">sap.ui.layout.Grid</a> or other layout controls that use <code>overflow:hidden</code> CSS property</li> <li> In case any of the following CSS classes is applied to <code>DynamicPage</code>: <code>sapUiContentPadding</code>, <code>sapUiNoContentPadding</code> or <code>sapUiResponsiveContentPadding</code></li> </ul></p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "setContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "footer",
                        "singularName": "footer",
                        "type": "sap.m.IBar",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p><code>DynamicPage</code> floating footer.</p>",
                        "methods": [
                            "getFooter",
                            "destroyFooter",
                            "setFooter"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "header",
                        "singularName": "header",
                        "type": "sap.f.DynamicPageHeader",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p><code>DynamicPage</code> header.</p>",
                        "methods": [
                            "getHeader",
                            "destroyHeader",
                            "setHeader"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "landmarkInfo",
                        "singularName": "landmarkInfo",
                        "type": "sap.f.DynamicPageAccessibleLandmarkInfo",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.61",
                        "description": "<p>Accessible landmark settings to be applied on the containers of the <code>sap.f.DynamicPage</code> control.</p><p>If not set, no landmarks will be written.<br><br><i>Since: 1.61.</i></p>",
                        "methods": [
                            "getLandmarkInfo",
                            "destroyLandmarkInfo",
                            "setLandmarkInfo"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "title",
                        "singularName": "title",
                        "type": "sap.f.DynamicPageTitle",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p><code>DynamicPage</code> title.</p>",
                        "methods": [
                            "getTitle",
                            "destroyTitle",
                            "setTitle"
                        ],
                        "linkEnabled": true
                    }
                ],
                "associations": [
                    {
                        "name": "stickySubheaderProvider",
                        "singularName": "stickySubheaderProvider",
                        "type": "sap.f.IDynamicPageStickyContent",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.65",
                        "description": "<p>Association of Controls / IDs, that provide sticky subheader content. All controls that provide this content have to implement the <code>sap.f.IDynamicPageStickyContent</code> interface.<br><br><i>Since: 1.65.</i></p>",
                        "methods": [
                            "getStickySubheaderProvider",
                            "setStickySubheaderProvider"
                        ],
                        "linkEnabled": true
                    }
                ],
                "designtime": "sap/f/designtime/DynamicPage.designtime"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>DynamicPage</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.DynamicPage(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "pinnedStateChange",
                    "visibility": "public",
                    "since": "1.93",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "pinned",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>False or True values indicate the new pinned property value.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.pinned"
                        }
                    ],
                    "description": "<p>The event is fired when the <code>headerPinned</code> property is changed via user interaction.<br><br><i>Since: 1.93.</i></p>"
                }
            ],
            "methods": [
                {
                    "name": "attachPinnedStateChange",
                    "visibility": "public",
                    "since": "1.93",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.DynamicPage</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.DynamicPage#events/pinnedStateChange\">pinnedStateChange</a> event of this <code>sap.f.DynamicPage</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.DynamicPage</code> itself.</p><p>The event is fired when the <code>headerPinned</code> property is changed via user interaction.</p>",
                    "href": "api/sap.f.DynamicPage#methods/attachPinnedStateChange",
                    "code": "<pre>attachPinnedStateChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the content in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "destroyFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the footer in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getFooter\">footer</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/destroyFooter",
                    "code": "<pre>destroyFooter() : this</pre>"
                },
                {
                    "name": "destroyHeader",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the header in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeader\">header</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/destroyHeader",
                    "code": "<pre>destroyHeader() : this</pre>"
                },
                {
                    "name": "destroyLandmarkInfo",
                    "visibility": "public",
                    "since": "1.61",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the landmarkInfo in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getLandmarkInfo\">landmarkInfo</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/destroyLandmarkInfo",
                    "code": "<pre>destroyLandmarkInfo() : this</pre>"
                },
                {
                    "name": "destroyTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the title in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getTitle\">title</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/destroyTitle",
                    "code": "<pre>destroyTitle() : this</pre>"
                },
                {
                    "name": "detachPinnedStateChange",
                    "visibility": "public",
                    "since": "1.93",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.DynamicPage#events/pinnedStateChange\">pinnedStateChange</a> event of this <code>sap.f.DynamicPage</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.DynamicPage#methods/detachPinnedStateChange",
                    "code": "<pre>detachPinnedStateChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.DynamicPage.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/sap.f.DynamicPage.extend",
                    "code": "<pre>sap.f.DynamicPage.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "firePinnedStateChange",
                    "visibility": "protected",
                    "since": "1.93",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "pinned",
                            "optional": true,
                            "description": "<p>False or True values indicate the new pinned property value.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.pinned",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.DynamicPage#events/pinnedStateChange\">pinnedStateChange</a> to attached listeners.</p>",
                    "href": "api/sap.f.DynamicPage#methods/firePinnedStateChange",
                    "code": "<pre>firePinnedStateChange(mParameters?) : this</pre>"
                },
                {
                    "name": "getBackgroundDesign",
                    "visibility": "public",
                    "since": "1.68",
                    "returnValue": {
                        "type": "sap.m.PageBackgroundDesign",
                        "description": "<p>Value of property <code>backgroundDesign</code></p>",
                        "types": [
                            {
                                "value": "sap.m.PageBackgroundDesign",
                                "href": "api/sap.m.PageBackgroundDesign",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Determines the background color of <code>DynamicPage</code>.</p><p>Default value is <code>Standard</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getBackgroundDesign",
                    "code": "<pre>getBackgroundDesign() : sap.m.PageBackgroundDesign</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getContent\">content</a>.</p><p><code>DynamicPage</code> content.</p><p><b>Note: </b> You can change the default paddings by adding the following CSS classes: <ul> <li><code>sapUiContentPadding</code></li> <li><code>sapUiNoContentPadding</code></li> <li><code>sapUiResponsiveContentPadding</code></li> </ul> For more information, see <a target=\"_self\" href=\"topic/c71f6df62dae47ca8284310a6f5fc80a\">Using Container Content Padding CSS Classes</a>.</p><p><b>Note:</b> The SAP Fiori Design guidelines require that the <code>DynamicPageHeader</code>'s content and the <code>DynamicPage</code>'s content are aligned vertically. When using <a target=\"_self\" href=\"api/sap.ui.layout.form.Form\">sap.ui.layout.form.Form</a>, <a target=\"_self\" href=\"api/sap.m.Panel\">sap.m.Panel</a>, <a target=\"_self\" href=\"api/sap.m.Table\">sap.m.Table</a> and <a target=\"_self\" href=\"api/sap.m.List\">sap.m.List</a> in the content area of <code>DynamicPage</code>, if the content is not already aligned, you need to adjust their left text offset to achieve the vertical alignment. To do this, apply the <code>sapFDynamicPageAlignContent</code> CSS class to them and set their <code>width</code> property to <code>auto</code> (if not set by default).</p><p>Example:</p><p><pre>\n<code> &lt;Panel class=“sapFDynamicPageAlignContent” width=“auto”&gt;&lt;/Panel&gt; </code>\n</pre></p><p>Please keep in mind that the alignment is not possible in the following cases: <ul> <li> When the controls are placed in an <a target=\"_self\" href=\"api/sap.ui.layout.Grid\">sap.ui.layout.Grid</a> or other layout controls that use <code>overflow:hidden</code> CSS property</li> <li> In case any of the following CSS classes is applied to <code>DynamicPage</code>: <code>sapUiContentPadding</code>, <code>sapUiNoContentPadding</code> or <code>sapUiResponsiveContentPadding</code></li> </ul></p>",
                    "href": "api/sap.f.DynamicPage#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getFitContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>fitContent</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getFitContent\">fitContent</a>.</p><p>Forces the content container of the <code>DynamicPage</code> to make room for stretchable controls in the <code>content</code> aggregation to fill exactly the visible space between the header and the footer.</p><p><b>Notes:</b> <ul> <li>Enable this property only if the control of the <code>content</code> aggregation is configured to automatically stretch to fill the available height, which means that the content would appear squashed in height when this property is disabled. Such stretchable controls may be <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a> and <a target=\"_self\" href=\"api/sap.ui.table.AnalyticalTable\">sap.ui.table.AnalyticalTable</a> depending on their settings.</li> <li>It is not recommended to enable this property for controls that do not stretch in height (and appear properly when this property is disabled).</li> </ul></p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getFitContent",
                    "code": "<pre>getFitContent() : boolean</pre>"
                },
                {
                    "name": "getFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.IBar",
                        "types": [
                            {
                                "value": "sap.m.IBar",
                                "href": "api/sap.m.IBar",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getFooter\">footer</a>.</p><p><code>DynamicPage</code> floating footer.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getFooter",
                    "code": "<pre>getFooter() : sap.m.IBar</pre>"
                },
                {
                    "name": "getHeader",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.DynamicPageHeader",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageHeader",
                                "href": "api/sap.f.DynamicPageHeader",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeader\">header</a>.</p><p><code>DynamicPage</code> header.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getHeader",
                    "code": "<pre>getHeader() : sap.f.DynamicPageHeader</pre>"
                },
                {
                    "name": "getHeaderExpanded",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>headerExpanded</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeaderExpanded\">headerExpanded</a>.</p><p>Determines whether the header is expanded.</p><p>The header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.</p><p><b>Note:</b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false</code>.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getHeaderExpanded",
                    "code": "<pre>getHeaderExpanded() : boolean</pre>"
                },
                {
                    "name": "getHeaderPinned",
                    "visibility": "public",
                    "since": "1.93",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>headerPinned</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeaderPinned\">headerPinned</a>.</p><p>Determines whether the <code>DynamicPageHeader</code> is pinned.</p><p>The property can be changed programmatically or in the occurrence of the following user interactions: <ul> <li>Toggling the pin/unpin button of <code>DynamicPageHeader</code></li> <li>Snapping the <code>DynamicPageHeader</code> by explicitly clicking on the <code>DynamicPageTitle</code></li> </ul></p><p><b>Note: </b> The property will only apply if the header is effectively pinnable, i.e. if the following conditions are met: <ul> <li><code>DynamicPageHeader</code> <code>pinnable</code> property is <code>true</code></li> <li><code>DynamicPageHeader</code> is expanded</li> <li><code>DynamicPage</code> <code>preserveHeaderStateOnScroll</code> property is effectively disabled</li> </ul></p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getHeaderPinned",
                    "code": "<pre>getHeaderPinned() : boolean</pre>"
                },
                {
                    "name": "getLandmarkInfo",
                    "visibility": "public",
                    "since": "1.61",
                    "returnValue": {
                        "type": "sap.f.DynamicPageAccessibleLandmarkInfo",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageAccessibleLandmarkInfo",
                                "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getLandmarkInfo\">landmarkInfo</a>.</p><p>Accessible landmark settings to be applied on the containers of the <code>sap.f.DynamicPage</code> control.</p><p>If not set, no landmarks will be written.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getLandmarkInfo",
                    "code": "<pre>getLandmarkInfo() : sap.f.DynamicPageAccessibleLandmarkInfo</pre>"
                },
                {
                    "name": "sap.f.DynamicPage.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.DynamicPage.</p>",
                    "href": "api/sap.f.DynamicPage#methods/sap.f.DynamicPage.getMetadata",
                    "code": "<pre>sap.f.DynamicPage.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getPreserveHeaderStateOnScroll",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>preserveHeaderStateOnScroll</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getPreserveHeaderStateOnScroll\">preserveHeaderStateOnScroll</a>.</p><p>Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.</p><p><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example, when the control`s title and header are with height larger than the given threshold.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getPreserveHeaderStateOnScroll",
                    "code": "<pre>getPreserveHeaderStateOnScroll() : boolean</pre>"
                },
                {
                    "name": "getScrollDelegate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.delegate.ScrollEnablement",
                        "description": "<p>The scroll delegate instance</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.delegate.ScrollEnablement",
                                "href": "api/sap.ui.core.delegate.ScrollEnablement",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns the <code>sap.ui.core.delegate.ScrollEnablement</code> delegate which is used with this control.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getScrollDelegate",
                    "code": "<pre>getScrollDelegate() : sap.ui.core.delegate.ScrollEnablement</pre>"
                },
                {
                    "name": "getShowFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showFooter</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getShowFooter\">showFooter</a>.</p><p>Determines whether the footer is visible.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getShowFooter",
                    "code": "<pre>getShowFooter() : boolean</pre>"
                },
                {
                    "name": "getStickySubheaderProvider",
                    "visibility": "public",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>ID of the element which is the current target of the association <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getStickySubheaderProvider\">stickySubheaderProvider</a>, or <code>null</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getStickySubheaderProvider",
                    "code": "<pre>getStickySubheaderProvider() : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "getTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.DynamicPageTitle",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageTitle",
                                "href": "api/sap.f.DynamicPageTitle",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getTitle\">title</a>.</p><p><code>DynamicPage</code> title.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getTitle",
                    "code": "<pre>getTitle() : sap.f.DynamicPageTitle</pre>"
                },
                {
                    "name": "getToggleHeaderOnTitleClick",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>toggleHeaderOnTitleClick</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getToggleHeaderOnTitleClick\">toggleHeaderOnTitleClick</a>.</p><p>Determines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader</code> by clicking on the <code>DynamicPageTitle</code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle</code> and the <code>DynamicPageHeader</code>. If set to <code>false</code>, the <code>DynamicPageTitle</code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.</p><p><b>Note: </b> This property is taken into account only if a non-empty <code>header</code> aggregation is provided.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/getToggleHeaderOnTitleClick",
                    "code": "<pre>getToggleHeaderOnTitleClick() : boolean</pre>"
                },
                {
                    "name": "setBackgroundDesign",
                    "visibility": "public",
                    "since": "1.68",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sBackgroundDesign",
                            "optional": true,
                            "defaultValue": "Standard",
                            "description": "<p>New value for property <code>backgroundDesign</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.PageBackgroundDesign",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.PageBackgroundDesign"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Determines the background color of <code>DynamicPage</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Standard</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setBackgroundDesign",
                    "code": "<pre>setBackgroundDesign(sBackgroundDesign?) : this</pre>"
                },
                {
                    "name": "setContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setContent",
                    "code": "<pre>setContent(oContent) : this</pre>"
                },
                {
                    "name": "setFitContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bFitContent",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>fitContent</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getFitContent\">fitContent</a>.</p><p>Forces the content container of the <code>DynamicPage</code> to make room for stretchable controls in the <code>content</code> aggregation to fill exactly the visible space between the header and the footer.</p><p><b>Notes:</b> <ul> <li>Enable this property only if the control of the <code>content</code> aggregation is configured to automatically stretch to fill the available height, which means that the content would appear squashed in height when this property is disabled. Such stretchable controls may be <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a> and <a target=\"_self\" href=\"api/sap.ui.table.AnalyticalTable\">sap.ui.table.AnalyticalTable</a> depending on their settings.</li> <li>It is not recommended to enable this property for controls that do not stretch in height (and appear properly when this property is disabled).</li> </ul></p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setFitContent",
                    "code": "<pre>setFitContent(bFitContent?) : this</pre>"
                },
                {
                    "name": "setFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFooter",
                            "optional": false,
                            "description": "<p>The footer to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.IBar",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.IBar"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getFooter\">footer</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setFooter",
                    "code": "<pre>setFooter(oFooter) : this</pre>"
                },
                {
                    "name": "setHeader",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oHeader",
                            "optional": false,
                            "description": "<p>The header to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageHeader",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageHeader"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeader\">header</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setHeader",
                    "code": "<pre>setHeader(oHeader) : this</pre>"
                },
                {
                    "name": "setHeaderExpanded",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bHeaderExpanded",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>headerExpanded</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeaderExpanded\">headerExpanded</a>.</p><p>Determines whether the header is expanded.</p><p>The header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.</p><p><b>Note:</b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setHeaderExpanded",
                    "code": "<pre>setHeaderExpanded(bHeaderExpanded?) : this</pre>"
                },
                {
                    "name": "setHeaderPinned",
                    "visibility": "public",
                    "since": "1.93",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bHeaderPinned",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>headerPinned</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getHeaderPinned\">headerPinned</a>.</p><p>Determines whether the <code>DynamicPageHeader</code> is pinned.</p><p>The property can be changed programmatically or in the occurrence of the following user interactions: <ul> <li>Toggling the pin/unpin button of <code>DynamicPageHeader</code></li> <li>Snapping the <code>DynamicPageHeader</code> by explicitly clicking on the <code>DynamicPageTitle</code></li> </ul></p><p><b>Note: </b> The property will only apply if the header is effectively pinnable, i.e. if the following conditions are met: <ul> <li><code>DynamicPageHeader</code> <code>pinnable</code> property is <code>true</code></li> <li><code>DynamicPageHeader</code> is expanded</li> <li><code>DynamicPage</code> <code>preserveHeaderStateOnScroll</code> property is effectively disabled</li> </ul></p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setHeaderPinned",
                    "code": "<pre>setHeaderPinned(bHeaderPinned?) : this</pre>"
                },
                {
                    "name": "setLandmarkInfo",
                    "visibility": "public",
                    "since": "1.61",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLandmarkInfo",
                            "optional": false,
                            "description": "<p>The landmarkInfo to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageAccessibleLandmarkInfo",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getLandmarkInfo\">landmarkInfo</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setLandmarkInfo",
                    "code": "<pre>setLandmarkInfo(oLandmarkInfo) : this</pre>"
                },
                {
                    "name": "setPreserveHeaderStateOnScroll",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bPreserveHeaderStateOnScroll",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>preserveHeaderStateOnScroll</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getPreserveHeaderStateOnScroll\">preserveHeaderStateOnScroll</a>.</p><p>Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.</p><p><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example, when the control`s title and header are with height larger than the given threshold.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setPreserveHeaderStateOnScroll",
                    "code": "<pre>setPreserveHeaderStateOnScroll(bPreserveHeaderStateOnScroll?) : this</pre>"
                },
                {
                    "name": "setShowFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowFooter",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showFooter</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getShowFooter\">showFooter</a>.</p><p>Determines whether the footer is visible.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setShowFooter",
                    "code": "<pre>setShowFooter(bShowFooter?) : this</pre>"
                },
                {
                    "name": "setStickySubheaderProvider",
                    "visibility": "public",
                    "since": "1.65",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oStickySubheaderProvider",
                            "optional": false,
                            "description": "<p>ID of an element which becomes the new target of this stickySubheaderProvider association; alternatively, an element instance may be given</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.f.IDynamicPageStickyContent",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.IDynamicPageStickyContent"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the associated <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getStickySubheaderProvider\">stickySubheaderProvider</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setStickySubheaderProvider",
                    "code": "<pre>setStickySubheaderProvider(oStickySubheaderProvider) : this</pre>"
                },
                {
                    "name": "setTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitle",
                            "optional": false,
                            "description": "<p>The title to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageTitle",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageTitle"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getTitle\">title</a>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setTitle",
                    "code": "<pre>setTitle(oTitle) : this</pre>"
                },
                {
                    "name": "setToggleHeaderOnTitleClick",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bToggleHeaderOnTitleClick",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>toggleHeaderOnTitleClick</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPage#methods/getToggleHeaderOnTitleClick\">toggleHeaderOnTitleClick</a>.</p><p>Determines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader</code> by clicking on the <code>DynamicPageTitle</code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle</code> and the <code>DynamicPageHeader</code>. If set to <code>false</code>, the <code>DynamicPageTitle</code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.</p><p><b>Note: </b> This property is taken into account only if a non-empty <code>header</code> aggregation is provided.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.DynamicPage#methods/setToggleHeaderOnTitleClick",
                    "code": "<pre>setToggleHeaderOnTitleClick(bToggleHeaderOnTitleClick?) : this</pre>"
                }
            ],
            "displayName": "sap.f.DynamicPage",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.DynamicPage",
            "subTitle": "",
            "uxGuidelinesLink": "https://experience.sap.com/fiori-design-web/dynamic-page-layout",
            "uxGuidelinesLinkText": "Dynamic Page"
        },
        {
            "kind": "class",
            "name": "sap.f.DynamicPageAccessibleLandmarkInfo",
            "basename": "DynamicPageAccessibleLandmarkInfo",
            "resource": "sap/f/DynamicPageAccessibleLandmarkInfo.js",
            "module": "sap/f/DynamicPageAccessibleLandmarkInfo",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.61",
            "extends": "sap.ui.core.Element",
            "description": "<p>Settings for accessible landmarks which can be applied to the container elements of a <code>sap.f.DynamicPage</code> control.</p><p>These landmarks are used by assistive technologies (such as screen readers) to provide a meaningful page overview.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "contentLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Texts which describe the landmark of the content container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                        "methods": [
                            "getContentLabel",
                            "setContentLabel"
                        ]
                    },
                    {
                        "name": "contentRole",
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "defaultValue": "None",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Landmark role of the content container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p>",
                        "methods": [
                            "getContentRole",
                            "setContentRole"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "footerLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                        "methods": [
                            "getFooterLabel",
                            "setFooterLabel"
                        ]
                    },
                    {
                        "name": "footerRole",
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "defaultValue": "None",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Landmark role of the footer container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p>",
                        "methods": [
                            "getFooterRole",
                            "setFooterRole"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "headerLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                        "methods": [
                            "getHeaderLabel",
                            "setHeaderLabel"
                        ]
                    },
                    {
                        "name": "headerRole",
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "defaultValue": "None",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Landmark role of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p>",
                        "methods": [
                            "getHeaderRole",
                            "setHeaderRole"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "rootLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Texts which describe the landmark of the root container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                        "methods": [
                            "getRootLabel",
                            "setRootLabel"
                        ]
                    },
                    {
                        "name": "rootRole",
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "defaultValue": "None",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Landmark role of the root container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p>",
                        "methods": [
                            "getRootRole",
                            "setRootRole"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new element, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new element</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.DynamicPageAccessibleLandmarkInfo</code> element.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.DynamicPageAccessibleLandmarkInfo(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.DynamicPageAccessibleLandmarkInfo.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.DynamicPageAccessibleLandmarkInfo with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Element#methods/sap.ui.core.Element.extend\">sap.ui.core.Element.extend</a>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/sap.f.DynamicPageAccessibleLandmarkInfo.extend",
                    "code": "<pre>sap.f.DynamicPageAccessibleLandmarkInfo.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getContentLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>contentLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getContentLabel\">contentLabel</a>.</p><p>Texts which describe the landmark of the content container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getContentLabel",
                    "code": "<pre>getContentLabel() : string</pre>"
                },
                {
                    "name": "getContentRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "description": "<p>Value of property <code>contentRole</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.AccessibleLandmarkRole",
                                "href": "api/sap.ui.core.AccessibleLandmarkRole",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getContentRole\">contentRole</a>.</p><p>Landmark role of the content container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getContentRole",
                    "code": "<pre>getContentRole() : sap.ui.core.AccessibleLandmarkRole</pre>"
                },
                {
                    "name": "getFooterLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>footerLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getFooterLabel\">footerLabel</a>.</p><p>Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getFooterLabel",
                    "code": "<pre>getFooterLabel() : string</pre>"
                },
                {
                    "name": "getFooterRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "description": "<p>Value of property <code>footerRole</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.AccessibleLandmarkRole",
                                "href": "api/sap.ui.core.AccessibleLandmarkRole",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getFooterRole\">footerRole</a>.</p><p>Landmark role of the footer container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getFooterRole",
                    "code": "<pre>getFooterRole() : sap.ui.core.AccessibleLandmarkRole</pre>"
                },
                {
                    "name": "getHeaderLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>headerLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getHeaderLabel\">headerLabel</a>.</p><p>Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getHeaderLabel",
                    "code": "<pre>getHeaderLabel() : string</pre>"
                },
                {
                    "name": "getHeaderRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "description": "<p>Value of property <code>headerRole</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.AccessibleLandmarkRole",
                                "href": "api/sap.ui.core.AccessibleLandmarkRole",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getHeaderRole\">headerRole</a>.</p><p>Landmark role of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getHeaderRole",
                    "code": "<pre>getHeaderRole() : sap.ui.core.AccessibleLandmarkRole</pre>"
                },
                {
                    "name": "sap.f.DynamicPageAccessibleLandmarkInfo.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.DynamicPageAccessibleLandmarkInfo.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/sap.f.DynamicPageAccessibleLandmarkInfo.getMetadata",
                    "code": "<pre>sap.f.DynamicPageAccessibleLandmarkInfo.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getRootLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>rootLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getRootLabel\">rootLabel</a>.</p><p>Texts which describe the landmark of the root container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getRootLabel",
                    "code": "<pre>getRootLabel() : string</pre>"
                },
                {
                    "name": "getRootRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.AccessibleLandmarkRole",
                        "description": "<p>Value of property <code>rootRole</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.AccessibleLandmarkRole",
                                "href": "api/sap.ui.core.AccessibleLandmarkRole",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getRootRole\">rootRole</a>.</p><p>Landmark role of the root container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getRootRole",
                    "code": "<pre>getRootRole() : sap.ui.core.AccessibleLandmarkRole</pre>"
                },
                {
                    "name": "setContentLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sContentLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>contentLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getContentLabel\">contentLabel</a>.</p><p>Texts which describe the landmark of the content container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setContentLabel",
                    "code": "<pre>setContentLabel(sContentLabel?) : this</pre>"
                },
                {
                    "name": "setContentRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sContentRole",
                            "optional": true,
                            "defaultValue": "\"None\"",
                            "description": "<p>New value for property <code>contentRole</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.AccessibleLandmarkRole",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.AccessibleLandmarkRole"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getContentRole\">contentRole</a>.</p><p>Landmark role of the content container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setContentRole",
                    "code": "<pre>setContentRole(sContentRole?) : this</pre>"
                },
                {
                    "name": "setFooterLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sFooterLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>footerLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getFooterLabel\">footerLabel</a>.</p><p>Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setFooterLabel",
                    "code": "<pre>setFooterLabel(sFooterLabel?) : this</pre>"
                },
                {
                    "name": "setFooterRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sFooterRole",
                            "optional": true,
                            "defaultValue": "\"None\"",
                            "description": "<p>New value for property <code>footerRole</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.AccessibleLandmarkRole",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.AccessibleLandmarkRole"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getFooterRole\">footerRole</a>.</p><p>Landmark role of the footer container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setFooterRole",
                    "code": "<pre>setFooterRole(sFooterRole?) : this</pre>"
                },
                {
                    "name": "setHeaderLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHeaderLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>headerLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getHeaderLabel\">headerLabel</a>.</p><p>Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setHeaderLabel",
                    "code": "<pre>setHeaderLabel(sHeaderLabel?) : this</pre>"
                },
                {
                    "name": "setHeaderRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHeaderRole",
                            "optional": true,
                            "defaultValue": "\"None\"",
                            "description": "<p>New value for property <code>headerRole</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.AccessibleLandmarkRole",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.AccessibleLandmarkRole"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getHeaderRole\">headerRole</a>.</p><p>Landmark role of the header container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setHeaderRole",
                    "code": "<pre>setHeaderRole(sHeaderRole?) : this</pre>"
                },
                {
                    "name": "setRootLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sRootLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>rootLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getRootLabel\">rootLabel</a>.</p><p>Texts which describe the landmark of the root container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None</code> is defined), no label is set.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setRootLabel",
                    "code": "<pre>setRootLabel(sRootLabel?) : this</pre>"
                },
                {
                    "name": "setRootRole",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sRootRole",
                            "optional": true,
                            "defaultValue": "\"None\"",
                            "description": "<p>New value for property <code>rootRole</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.AccessibleLandmarkRole",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.AccessibleLandmarkRole"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/getRootRole\">rootRole</a>.</p><p>Landmark role of the root container of the corresponding <code>sap.f.DynamicPage</code> control.</p><p>If set to <code>sap.ui.core.AccessibleLandmarkRole.None</code>, no landmark will be added to the container.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"None\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo#methods/setRootRole",
                    "code": "<pre>setRootRole(sRootRole?) : this</pre>"
                }
            ],
            "displayName": "sap.f.DynamicPageAccessibleLandmarkInfo",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.DynamicPageAccessibleLandmarkInfo",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.DynamicPageHeader",
            "basename": "DynamicPageHeader",
            "resource": "sap/f/DynamicPageHeader.js",
            "module": "sap/f/DynamicPageHeader",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.42",
            "extends": "sap.ui.core.Control",
            "description": "<p>Header of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a>.</p><h3>Overview</h3><p>The <code>DynamicPageHeader</code> control is part of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a> family and is used to serve as header of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">DynamicPage</a>.</p><h3>Usage</h3><p>The <code>DynamicPageHeader</code> can hold any layout control and has two states - expanded and collapsed (snapped). The switching between these states happens when:</p><p><ul><li>the user scrolls below its bottom margin</li> <li>the user clicks on the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle\">DynamicPageTitle</a></li> <li>through the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">DynamicPage</a> property <code>headerExpanded</code></li></ul></p><h3>Responsive Behavior</h3><p>The responsive behavior of the <code>DynamicPageHeader</code> depends on the behavior of the content that is displayed.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "backgroundDesign",
                        "type": "sap.m.BackgroundDesign",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.58",
                        "description": "<p>Determines the background color of the <code>DynamicPageHeader</code>.</p><p><b>Note:</b> The default value of <code>backgroundDesign</code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground</code>, which depends on the specific theme.<br><br><i>Since: 1.58.</i></p>",
                        "methods": [
                            "getBackgroundDesign",
                            "setBackgroundDesign"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "pinnable",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the header is pinnable.</p>",
                        "methods": [
                            "getPinnable",
                            "setPinnable"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_collapseButton",
                        "singularName": "_collapseButton",
                        "type": "sap.m.Button",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Visual indication for expanding/collapsing.</p>",
                        "methods": [
                            "get_collapseButton",
                            "destroy_collapseButton",
                            "set_collapseButton"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_pinButton",
                        "singularName": "_pinButton",
                        "type": "sap.m.Button",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>The pin/unpin button in the header.</p>",
                        "methods": [
                            "get_pinButton",
                            "destroy_pinButton",
                            "set_pinButton"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content of the header.</p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "insertContent",
                            "addContent",
                            "removeContent",
                            "indexOfContent",
                            "removeAllContent"
                        ],
                        "linkEnabled": true
                    }
                ],
                "defaultAggregation": "content",
                "designtime": "sap/f/designtime/DynamicPageHeader.designtime"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>DynamicPageHeader</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.DynamicPageHeader(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "addContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some content to the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/addContent",
                    "code": "<pre>addContent(oContent) : this</pre>"
                },
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the content in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "sap.f.DynamicPageHeader.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/sap.f.DynamicPageHeader.extend",
                    "code": "<pre>sap.f.DynamicPageHeader.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getBackgroundDesign",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "sap.m.BackgroundDesign",
                        "description": "<p>Value of property <code>backgroundDesign</code></p>",
                        "types": [
                            {
                                "value": "sap.m.BackgroundDesign",
                                "href": "api/sap.m.BackgroundDesign",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Determines the background color of the <code>DynamicPageHeader</code>.</p><p><b>Note:</b> The default value of <code>backgroundDesign</code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground</code>, which depends on the specific theme.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/getBackgroundDesign",
                    "code": "<pre>getBackgroundDesign() : sap.m.BackgroundDesign</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>.</p><p>The content of the header.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "sap.f.DynamicPageHeader.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.DynamicPageHeader.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/sap.f.DynamicPageHeader.getMetadata",
                    "code": "<pre>sap.f.DynamicPageHeader.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getPinnable",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>pinnable</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getPinnable\">pinnable</a>.</p><p>Determines whether the header is pinnable.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/getPinnable",
                    "code": "<pre>getPinnable() : boolean</pre>"
                },
                {
                    "name": "indexOfContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/indexOfContent",
                    "code": "<pre>indexOfContent(oContent) : int</pre>"
                },
                {
                    "name": "insertContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a content into the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/insertContent",
                    "code": "<pre>insertContent(oContent, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/removeAllContent",
                    "code": "<pre>removeAllContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed content or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vContent",
                            "optional": false,
                            "description": "<p>The content to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a content from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/removeContent",
                    "code": "<pre>removeContent(vContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setBackgroundDesign",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sBackgroundDesign",
                            "optional": false,
                            "description": "<p>New value for property <code>backgroundDesign</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.BackgroundDesign",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.BackgroundDesign"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Determines the background color of the <code>DynamicPageHeader</code>.</p><p><b>Note:</b> The default value of <code>backgroundDesign</code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground</code>, which depends on the specific theme.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/setBackgroundDesign",
                    "code": "<pre>setBackgroundDesign(sBackgroundDesign) : this</pre>"
                },
                {
                    "name": "setPinnable",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bPinnable",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>pinnable</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader#methods/getPinnable\">pinnable</a>.</p><p>Determines whether the header is pinnable.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.DynamicPageHeader#methods/setPinnable",
                    "code": "<pre>setPinnable(bPinnable?) : this</pre>"
                }
            ],
            "displayName": "sap.f.DynamicPageHeader",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.DynamicPageHeader",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.DynamicPageTitle",
            "basename": "DynamicPageTitle",
            "resource": "sap/f/DynamicPageTitle.js",
            "module": "sap/f/DynamicPageTitle",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.42",
            "extends": "sap.ui.core.Control",
            "description": "<p>Title of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a>.</p><h3>Overview</h3><p>The <code>DynamicPageTitle</code> control is part of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a> family and is used to serve as title of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">DynamicPage</a>.</p><h3>Usage</h3><p>The <code>DynamicPageTitle</code> can hold any control and displays the most important information regarding the object that will always remain visible while scrolling.</p><p><b>Note:</b> The <code>actions</code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for <a target=\"_self\" href=\"api/sap.m.Toolbar\">sap.m.Toolbar</a> and <a target=\"_self\" href=\"api/sap.m.OverflowToolbar\">sap.m.OverflowToolbar</a>.</p><p>If the <code>toggleHeaderOnTitleClick</code> property of the <a target=\"_self\" href=\"api/sap.f.DynamicPage\">DynamicPage</a> is set to <code>true</code>, the user can switch between the expanded/collapsed states of the <a target=\"_self\" href=\"api/sap.f.DynamicPageHeader\">DynamicPageHeader</a> by clicking on the <code>DynamicPageTitle</code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle</code> and the <code>DynamicPageHeader</code>.</p><p>If set to <code>false</code>, the <code>DynamicPageTitle</code> is not clickable, the visual indicators are not available, and the app must provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.</p><h3>Responsive Behavior</h3><p>The responsive behavior of the <code>DynamicPageTitle</code> depends on the behavior of the content that is displayed.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "areaShrinkRatio",
                        "type": "sap.f.DynamicPageTitleShrinkRatio",
                        "defaultValue": "1:1.6:1.6",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.54",
                        "description": "<p>Assigns shrinking ratio to the <code>DynamicPageTitle</code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.</p><p>The value must be set in <code>Heading:Content:Actions</code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.</p><p>For example, if <code>2:7:1</code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.</p><p>If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8</code> is equal to <code>1:2:4</code>.</p><p><Note:> When this property is set the <code>primaryArea</code> property has no effect.<br><br><i>Since: 1.54.</i></p>",
                        "methods": [
                            "getAreaShrinkRatio",
                            "setAreaShrinkRatio"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "backgroundDesign",
                        "type": "sap.m.BackgroundDesign",
                        "defaultValue": "",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.58",
                        "description": "<p>Determines the background color of the <code>DynamicPageTitle</code>.</p><p><b>Note:</b> The default value of <code>backgroundDesign</code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground</code>, which depends on the specific theme.<br><br><i>Since: 1.58.</i></p>",
                        "methods": [
                            "getBackgroundDesign",
                            "setBackgroundDesign"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "primaryArea",
                        "type": "sap.f.DynamicPageTitleArea",
                        "defaultValue": "Begin",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.50",
                        "description": "<p>Determines which of the <code>DynamicPageTitle</code> areas (Begin, Middle) is primary.</p><p><b>Note:</b> The primary area is shrinking at lower rate, remaining visible as much as it can.<br><br><i>Since: 1.50.</i></p>",
                        "methods": [
                            "getPrimaryArea",
                            "setPrimaryArea"
                        ],
                        "linkEnabled": true,
                        "deprecatedText": "Deprecated as of version 1.54. Please use the <em>areaShrinkRatio</em> property instead. The value of <em>areaShrinkRatio</em> must be set in <em>Heading:Content:Actions</em> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.<em>primaryArea=Begin</em> can be achieved by setting a low number for the Heading area to <em>areaShrinkRatio</em>, for example <em>1:1.6:1.6</em>.<em>primaryArea=Middle</em> can be achieved by setting a low number for the Content area to <em>areaShrinkRatio</em>, for example <em>1.6:1:1.6</em>."
                    }
                ],
                "aggregations": [
                    {
                        "name": "_actionsToolbar",
                        "singularName": "_actionsToolbar",
                        "type": "sap.m.OverflowToolbar",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Internal <code>OverflowToolbar</code> for the <code>DynamicPageTitle</code> actions.</p>",
                        "methods": [
                            "get_actionsToolbar",
                            "destroy_actionsToolbar",
                            "set_actionsToolbar"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_expandButton",
                        "singularName": "_expandButton",
                        "type": "sap.m.Button",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "since": "1.52",
                        "description": "<p>Visual indication for expanding.<br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "get_expandButton",
                            "destroy_expandButton",
                            "set_expandButton"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_navActionsToolbar",
                        "singularName": "_navActionsToolbar",
                        "type": "sap.m.Toolbar",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "since": "1.52",
                        "description": "<p>Internal <code>Toolbar</code> for the <code>DynamicPageTitle</code> navigation actions.<br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "get_navActionsToolbar",
                            "destroy_navActionsToolbar",
                            "set_navActionsToolbar"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_navActionsToolbarSeparator",
                        "singularName": "_navActionsToolbarSeparator",
                        "type": "sap.m.ToolbarSeparator",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "since": "1.52",
                        "description": "<p>Internal <code>ToolbarSeparator</code> to separate the <code>actions</code> and <code>navigationActions</code>.<br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "get_navActionsToolbarSeparator",
                            "destroy_navActionsToolbarSeparator",
                            "set_navActionsToolbarSeparator"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_snappedTitleOnMobileIcon",
                        "singularName": "_snappedTitleOnMobileIcon",
                        "type": "sap.ui.core.Icon",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "since": "1.63",
                        "description": "<p>Visual indication for expanding while using SnappedTitleOnMobile.<br><br><i>Since: 1.63.</i></p>",
                        "methods": [
                            "get_snappedTitleOnMobileIcon",
                            "destroy_snappedTitleOnMobileIcon",
                            "set_snappedTitleOnMobileIcon"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "actions",
                        "singularName": "action",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The <code>DynamicPageTitle</code> actions. <br><b>Note:</b> The <code>actions</code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for <a target=\"_self\" href=\"api/sap.m.Toolbar\">sap.m.Toolbar</a> and <a target=\"_self\" href=\"api/sap.m.OverflowToolbar\">sap.m.OverflowToolbar</a>.</p><p><b>Note:</b> If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getActions",
                            "destroyActions",
                            "insertAction",
                            "addAction",
                            "removeAction",
                            "indexOfAction",
                            "removeAllActions"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "breadcrumbs",
                        "singularName": "breadcrumb",
                        "type": "sap.m.IBreadcrumbs",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>The breadcrumbs displayed in the <code>DynamicPageTitle</code> top-left area.<br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getBreadcrumbs",
                            "destroyBreadcrumbs",
                            "setBreadcrumbs"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "since": "1.50",
                        "description": "<p>The content is positioned in the <code>DynamicPageTitle</code> middle area and displayed in both expanded and collapsed (snapped) states.</p><p><b>Note:</b> If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.<br><br><i>Since: 1.50.</i></p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "insertContent",
                            "addContent",
                            "removeContent",
                            "indexOfContent",
                            "removeAllContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "expandedContent",
                        "singularName": "expandedContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content that is displayed in the <code>DynamicPageTitle</code> in expanded state.</p>",
                        "methods": [
                            "getExpandedContent",
                            "destroyExpandedContent",
                            "insertExpandedContent",
                            "addExpandedContent",
                            "removeExpandedContent",
                            "indexOfExpandedContent",
                            "removeAllExpandedContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "expandedHeading",
                        "singularName": "expandedHeading",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>The <code>expandedHeading</code> is positioned in the <code>DynamicPageTitle</code> left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.</p><p><b>Note:</b> In order for <code>expandedHeading</code> to be taken into account, <code>heading</code> has to be empty. Combine <code>expandedHeading</code> with <code>snappedHeading</code> to switch content when the header switches state.<br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getExpandedHeading",
                            "destroyExpandedHeading",
                            "setExpandedHeading"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "heading",
                        "singularName": "heading",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The <code>heading</code> is positioned in the <code>DynamicPageTitle</code> left area and is displayed in both expanded and collapsed (snapped) states of the header. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in both expanded and collapsed states of the header.</p><p><b>Notes:</b> <ul> <li><code>heading</code> is mutually exclusive with <code>snappedHeading</code> and <code>expandedHeading</code>. If <code>heading</code> is provided, both <code>snappedHeading</code> and <code>expandedHeading</code> are ignored. <code>heading</code> is useful when the content of <code>snappedHeading</code> and <code>expandedHeading</code> needs to be the same as it replaces them both.</li> <li>If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</li> </ul></p>",
                        "methods": [
                            "getHeading",
                            "destroyHeading",
                            "setHeading"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "navigationActions",
                        "singularName": "navigationAction",
                        "type": "sap.m.Button",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>The <code>DynamicPageTitle</code> navigation actions.</p><p><b>Notes:</b> <ul> <li>The <code>navigationActions</code> position depends on the control size. If the control size is 1280px or bigger, they are rendered right next to the <code>actions</code>. Otherwise, they are rendered in the top-right area, above the <code>actions</code>. If a large number of elements(buttons) are used, there could be visual degradations as the space for the <code>navigationActions</code> is limited.</li> <li>If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</li> </ul><br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getNavigationActions",
                            "destroyNavigationActions",
                            "insertNavigationAction",
                            "addNavigationAction",
                            "removeNavigationAction",
                            "indexOfNavigationAction",
                            "removeAllNavigationActions"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "snappedContent",
                        "singularName": "snappedContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content that is displayed in the <code>DynamicPageTitle</code> in collapsed (snapped) state.</p><p><b>Note:</b> If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getSnappedContent",
                            "destroySnappedContent",
                            "insertSnappedContent",
                            "addSnappedContent",
                            "removeSnappedContent",
                            "indexOfSnappedContent",
                            "removeAllSnappedContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "snappedHeading",
                        "singularName": "snappedHeading",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>The <code>snappedHeading</code> is positioned in the <code>DynamicPageTitle</code> left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.</p><p><b>Notes:</b> <ul> <li>In order for <code>snappedHeading</code> to be taken into account, <code>heading</code> has to be empty. Combine <code>snappedHeading</code> with <code>expandedHeading</code> to switch content when the header switches state.</li> <li>If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</li> </ul><br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getSnappedHeading",
                            "destroySnappedHeading",
                            "setSnappedHeading"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "snappedTitleOnMobile",
                        "singularName": "snappedTitleOnMobile",
                        "type": "sap.m.Title",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.63",
                        "description": "<p>The only content that is displayed in the <code>DynamicPageTitle</code> when it is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in collapsed (snapped) state.</p><p>Using this aggregation enables you to provide a simple, single-line title that takes less space on the smaller phone screens when the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p><p><b>Note:</b> The content set in this aggregation overrides all the other <code>DynamicPageTitle</code> aggregations and is only visible on phone mobile devices in collapsed (snapped) state of the <code>DynamicPageHeader</code>.<br><br><i>Since: 1.63.</i></p>",
                        "methods": [
                            "getSnappedTitleOnMobile",
                            "destroySnappedTitleOnMobile",
                            "setSnappedTitleOnMobile"
                        ],
                        "linkEnabled": true
                    }
                ],
                "associations": [
                    {
                        "name": "ariaDescribedBy",
                        "singularName": "ariaDescribedBy",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "since": "1.78",
                        "description": "<p>Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).<br><br><i>Since: 1.78.</i></p>",
                        "methods": [
                            "getAriaDescribedBy",
                            "addAriaDescribedBy",
                            "removeAriaDescribedBy",
                            "removeAllAriaDescribedBy"
                        ],
                        "linkEnabled": true
                    }
                ],
                "designtime": "sap/f/designtime/DynamicPageTitle.designtime"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>DynamicPageTitle</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.DynamicPageTitle(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "stateChange",
                    "visibility": "public",
                    "since": "1.54",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "isExpanded",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Whether the title was expanded (true) or collapsed (false).</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isExpanded"
                        }
                    ],
                    "description": "<p>Fired when the title state (expanded/collapsed) is toggled by user interaction. For example, scrolling, title clicking/tapping, using expand/collapse button.</p><p>Also fired when the developer toggles the title state by programmatically changing the scroll position of the scrollbar of <code>DynamicPage</code>.<br><br><i>Since: 1.54.</i></p>"
                }
            ],
            "methods": [
                {
                    "name": "addAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAction",
                            "optional": false,
                            "description": "<p>The action to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some action to the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/addAction",
                    "code": "<pre>addAction(oAction) : this</pre>"
                },
                {
                    "name": "addAriaDescribedBy",
                    "visibility": "public",
                    "since": "1.78",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAriaDescribedBy",
                            "optional": false,
                            "description": "<p>The ariaDescribedBy to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some ariaDescribedBy into the association <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/addAriaDescribedBy",
                    "code": "<pre>addAriaDescribedBy(vAriaDescribedBy) : this</pre>"
                },
                {
                    "name": "addContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some content to the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/addContent",
                    "code": "<pre>addContent(oContent) : this</pre>"
                },
                {
                    "name": "addExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oExpandedContent",
                            "optional": false,
                            "description": "<p>The expandedContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some expandedContent to the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/addExpandedContent",
                    "code": "<pre>addExpandedContent(oExpandedContent) : this</pre>"
                },
                {
                    "name": "addNavigationAction",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oNavigationAction",
                            "optional": false,
                            "description": "<p>The navigationAction to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some navigationAction to the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/addNavigationAction",
                    "code": "<pre>addNavigationAction(oNavigationAction) : this</pre>"
                },
                {
                    "name": "addSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSnappedContent",
                            "optional": false,
                            "description": "<p>The snappedContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some snappedContent to the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/addSnappedContent",
                    "code": "<pre>addSnappedContent(oSnappedContent) : this</pre>"
                },
                {
                    "name": "attachStateChange",
                    "visibility": "public",
                    "since": "1.54",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.DynamicPageTitle</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#events/stateChange\">stateChange</a> event of this <code>sap.f.DynamicPageTitle</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.DynamicPageTitle</code> itself.</p><p>Fired when the title state (expanded/collapsed) is toggled by user interaction. For example, scrolling, title clicking/tapping, using expand/collapse button.</p><p>Also fired when the developer toggles the title state by programmatically changing the scroll position of the scrollbar of <code>DynamicPage</code>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/attachStateChange",
                    "code": "<pre>attachStateChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the actions in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyActions",
                    "code": "<pre>destroyActions() : this</pre>"
                },
                {
                    "name": "destroyBreadcrumbs",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the breadcrumbs in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getBreadcrumbs\">breadcrumbs</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyBreadcrumbs",
                    "code": "<pre>destroyBreadcrumbs() : this</pre>"
                },
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the content in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "destroyExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the expandedContent in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyExpandedContent",
                    "code": "<pre>destroyExpandedContent() : this</pre>"
                },
                {
                    "name": "destroyExpandedHeading",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the expandedHeading in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedHeading\">expandedHeading</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyExpandedHeading",
                    "code": "<pre>destroyExpandedHeading() : this</pre>"
                },
                {
                    "name": "destroyHeading",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the heading in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getHeading\">heading</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyHeading",
                    "code": "<pre>destroyHeading() : this</pre>"
                },
                {
                    "name": "destroyNavigationActions",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the navigationActions in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroyNavigationActions",
                    "code": "<pre>destroyNavigationActions() : this</pre>"
                },
                {
                    "name": "destroySnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the snappedContent in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroySnappedContent",
                    "code": "<pre>destroySnappedContent() : this</pre>"
                },
                {
                    "name": "destroySnappedHeading",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the snappedHeading in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedHeading\">snappedHeading</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroySnappedHeading",
                    "code": "<pre>destroySnappedHeading() : this</pre>"
                },
                {
                    "name": "destroySnappedTitleOnMobile",
                    "visibility": "public",
                    "since": "1.63",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the snappedTitleOnMobile in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedTitleOnMobile\">snappedTitleOnMobile</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/destroySnappedTitleOnMobile",
                    "code": "<pre>destroySnappedTitleOnMobile() : this</pre>"
                },
                {
                    "name": "detachStateChange",
                    "visibility": "public",
                    "since": "1.54",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#events/stateChange\">stateChange</a> event of this <code>sap.f.DynamicPageTitle</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/detachStateChange",
                    "code": "<pre>detachStateChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.DynamicPageTitle.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/sap.f.DynamicPageTitle.extend",
                    "code": "<pre>sap.f.DynamicPageTitle.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireStateChange",
                    "visibility": "protected",
                    "since": "1.54",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "isExpanded",
                            "optional": true,
                            "description": "<p>Whether the title was expanded (true) or collapsed (false).</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isExpanded",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#events/stateChange\">stateChange</a> to attached listeners.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/fireStateChange",
                    "code": "<pre>fireStateChange(mParameters?) : this</pre>"
                },
                {
                    "name": "getActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>.</p><p>The <code>DynamicPageTitle</code> actions. <br><b>Note:</b> The <code>actions</code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for <a target=\"_self\" href=\"api/sap.m.Toolbar\">sap.m.Toolbar</a> and <a target=\"_self\" href=\"api/sap.m.OverflowToolbar\">sap.m.OverflowToolbar</a>.</p><p><b>Note:</b> If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getActions",
                    "code": "<pre>getActions() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getAreaShrinkRatio",
                    "visibility": "public",
                    "since": "1.54",
                    "returnValue": {
                        "type": "sap.f.DynamicPageTitleShrinkRatio",
                        "description": "<p>Value of property <code>areaShrinkRatio</code></p>",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageTitleShrinkRatio",
                                "href": "api/sap.f.DynamicPageTitleShrinkRatio",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getAreaShrinkRatio\">areaShrinkRatio</a>.</p><p>Assigns shrinking ratio to the <code>DynamicPageTitle</code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.</p><p>The value must be set in <code>Heading:Content:Actions</code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.</p><p>For example, if <code>2:7:1</code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.</p><p>If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8</code> is equal to <code>1:2:4</code>.</p><p><Note:> When this property is set the <code>primaryArea</code> property has no effect.</p><p>Default value is <code>\"1:1.6:1.6\"</code>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getAreaShrinkRatio",
                    "code": "<pre>getAreaShrinkRatio() : sap.f.DynamicPageTitleShrinkRatio</pre>"
                },
                {
                    "name": "getAriaDescribedBy",
                    "visibility": "public",
                    "since": "1.78",
                    "returnValue": {
                        "type": "sap.ui.core.ID[]",
                        "types": [
                            {
                                "value": "sap.ui.core.ID[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Returns array of IDs of the elements which are the current targets of the association <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getAriaDescribedBy",
                    "code": "<pre>getAriaDescribedBy() : sap.ui.core.ID[]</pre>"
                },
                {
                    "name": "getBackgroundDesign",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "sap.m.BackgroundDesign",
                        "description": "<p>Value of property <code>backgroundDesign</code></p>",
                        "types": [
                            {
                                "value": "sap.m.BackgroundDesign",
                                "href": "api/sap.m.BackgroundDesign",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Determines the background color of the <code>DynamicPageTitle</code>.</p><p><b>Note:</b> The default value of <code>backgroundDesign</code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground</code>, which depends on the specific theme.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getBackgroundDesign",
                    "code": "<pre>getBackgroundDesign() : sap.m.BackgroundDesign</pre>"
                },
                {
                    "name": "getBreadcrumbs",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.m.IBreadcrumbs",
                        "types": [
                            {
                                "value": "sap.m.IBreadcrumbs",
                                "href": "api/sap.m.IBreadcrumbs",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getBreadcrumbs\">breadcrumbs</a>.</p><p>The breadcrumbs displayed in the <code>DynamicPageTitle</code> top-left area.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getBreadcrumbs",
                    "code": "<pre>getBreadcrumbs() : sap.m.IBreadcrumbs</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>.</p><p>The content is positioned in the <code>DynamicPageTitle</code> middle area and displayed in both expanded and collapsed (snapped) states.</p><p><b>Note:</b> If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>.</p><p>The content that is displayed in the <code>DynamicPageTitle</code> in expanded state.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getExpandedContent",
                    "code": "<pre>getExpandedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getExpandedHeading",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedHeading\">expandedHeading</a>.</p><p>The <code>expandedHeading</code> is positioned in the <code>DynamicPageTitle</code> left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.</p><p><b>Note:</b> In order for <code>expandedHeading</code> to be taken into account, <code>heading</code> has to be empty. Combine <code>expandedHeading</code> with <code>snappedHeading</code> to switch content when the header switches state.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getExpandedHeading",
                    "code": "<pre>getExpandedHeading() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getHeading",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getHeading\">heading</a>.</p><p>The <code>heading</code> is positioned in the <code>DynamicPageTitle</code> left area and is displayed in both expanded and collapsed (snapped) states of the header. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in both expanded and collapsed states of the header.</p><p><b>Notes:</b> <ul> <li><code>heading</code> is mutually exclusive with <code>snappedHeading</code> and <code>expandedHeading</code>. If <code>heading</code> is provided, both <code>snappedHeading</code> and <code>expandedHeading</code> are ignored. <code>heading</code> is useful when the content of <code>snappedHeading</code> and <code>expandedHeading</code> needs to be the same as it replaces them both.</li> <li>If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getHeading",
                    "code": "<pre>getHeading() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "sap.f.DynamicPageTitle.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.DynamicPageTitle.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/sap.f.DynamicPageTitle.getMetadata",
                    "code": "<pre>sap.f.DynamicPageTitle.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getNavigationActions",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>.</p><p>The <code>DynamicPageTitle</code> navigation actions.</p><p><b>Notes:</b> <ul> <li>The <code>navigationActions</code> position depends on the control size. If the control size is 1280px or bigger, they are rendered right next to the <code>actions</code>. Otherwise, they are rendered in the top-right area, above the <code>actions</code>. If a large number of elements(buttons) are used, there could be visual degradations as the space for the <code>navigationActions</code> is limited.</li> <li>If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getNavigationActions",
                    "code": "<pre>getNavigationActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "getPrimaryArea",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "sap.f.DynamicPageTitleArea",
                        "description": "<p>Value of property <code>primaryArea</code></p>",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageTitleArea",
                                "href": "api/sap.f.DynamicPageTitleArea",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getPrimaryArea\">primaryArea</a>.</p><p>Determines which of the <code>DynamicPageTitle</code> areas (Begin, Middle) is primary.</p><p><b>Note:</b> The primary area is shrinking at lower rate, remaining visible as much as it can.</p><p>Default value is <code>Begin</code>.</p>",
                    "deprecated": {
                        "since": "1.54",
                        "text": "Please use the <code>areaShrinkRatio</code> property instead. The value of <code>areaShrinkRatio</code> must be set in <code>Heading:Content:Actions</code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin</code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio</code>, for example <code>1:1.6:1.6</code>.\n\n<code>primaryArea=Middle</code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio</code>, for example <code>1.6:1:1.6</code>."
                    },
                    "href": "api/sap.f.DynamicPageTitle#methods/getPrimaryArea",
                    "deprecatedText": "Deprecated as of version 1.54. Please use the <em>areaShrinkRatio</em> property instead. The value of <em>areaShrinkRatio</em> must be set in <em>Heading:Content:Actions</em> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.<em>primaryArea=Begin</em> can be achieved by setting a low number for the Heading area to <em>areaShrinkRatio</em>, for example <em>1:1.6:1.6</em>.<em>primaryArea=Middle</em> can be achieved by setting a low number for the Content area to <em>areaShrinkRatio</em>, for example <em>1.6:1:1.6</em>.",
                    "code": "<pre>getPrimaryArea() : sap.f.DynamicPageTitleArea</pre>"
                },
                {
                    "name": "getSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>.</p><p>The content that is displayed in the <code>DynamicPageTitle</code> in collapsed (snapped) state.</p><p><b>Note:</b> If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getSnappedContent",
                    "code": "<pre>getSnappedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getSnappedHeading",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedHeading\">snappedHeading</a>.</p><p>The <code>snappedHeading</code> is positioned in the <code>DynamicPageTitle</code> left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.</p><p><b>Notes:</b> <ul> <li>In order for <code>snappedHeading</code> to be taken into account, <code>heading</code> has to be empty. Combine <code>snappedHeading</code> with <code>expandedHeading</code> to switch content when the header switches state.</li> <li>If the <code>snappedTitleOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getSnappedHeading",
                    "code": "<pre>getSnappedHeading() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getSnappedTitleOnMobile",
                    "visibility": "public",
                    "since": "1.63",
                    "returnValue": {
                        "type": "sap.m.Title",
                        "types": [
                            {
                                "value": "sap.m.Title",
                                "href": "api/sap.m.Title",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedTitleOnMobile\">snappedTitleOnMobile</a>.</p><p>The only content that is displayed in the <code>DynamicPageTitle</code> when it is viewed on a phone mobile device and the <code>DynamicPageHeader</code> is in collapsed (snapped) state.</p><p>Using this aggregation enables you to provide a simple, single-line title that takes less space on the smaller phone screens when the <code>DynamicPageHeader</code> is in its collapsed (snapped) state.</p><p><b>Note:</b> The content set in this aggregation overrides all the other <code>DynamicPageTitle</code> aggregations and is only visible on phone mobile devices in collapsed (snapped) state of the <code>DynamicPageHeader</code>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/getSnappedTitleOnMobile",
                    "code": "<pre>getSnappedTitleOnMobile() : sap.m.Title</pre>"
                },
                {
                    "name": "indexOfAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAction",
                            "optional": false,
                            "description": "<p>The action whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/indexOfAction",
                    "code": "<pre>indexOfAction(oAction) : int</pre>"
                },
                {
                    "name": "indexOfContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/indexOfContent",
                    "code": "<pre>indexOfContent(oContent) : int</pre>"
                },
                {
                    "name": "indexOfExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oExpandedContent",
                            "optional": false,
                            "description": "<p>The expandedContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/indexOfExpandedContent",
                    "code": "<pre>indexOfExpandedContent(oExpandedContent) : int</pre>"
                },
                {
                    "name": "indexOfNavigationAction",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oNavigationAction",
                            "optional": false,
                            "description": "<p>The navigationAction whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.Button</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/indexOfNavigationAction",
                    "code": "<pre>indexOfNavigationAction(oNavigationAction) : int</pre>"
                },
                {
                    "name": "indexOfSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSnappedContent",
                            "optional": false,
                            "description": "<p>The snappedContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/indexOfSnappedContent",
                    "code": "<pre>indexOfSnappedContent(oSnappedContent) : int</pre>"
                },
                {
                    "name": "insertAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAction",
                            "optional": false,
                            "description": "<p>The action to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the action should be inserted at; for a negative value of <code>iIndex</code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a action into the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/insertAction",
                    "code": "<pre>insertAction(oAction, iIndex) : this</pre>"
                },
                {
                    "name": "insertContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a content into the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/insertContent",
                    "code": "<pre>insertContent(oContent, iIndex) : this</pre>"
                },
                {
                    "name": "insertExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oExpandedContent",
                            "optional": false,
                            "description": "<p>The expandedContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the expandedContent should be inserted at; for a negative value of <code>iIndex</code>, the expandedContent is inserted at position 0; for a value greater than the current size of the aggregation, the expandedContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a expandedContent into the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/insertExpandedContent",
                    "code": "<pre>insertExpandedContent(oExpandedContent, iIndex) : this</pre>"
                },
                {
                    "name": "insertNavigationAction",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oNavigationAction",
                            "optional": false,
                            "description": "<p>The navigationAction to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the navigationAction should be inserted at; for a negative value of <code>iIndex</code>, the navigationAction is inserted at position 0; for a value greater than the current size of the aggregation, the navigationAction is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a navigationAction into the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/insertNavigationAction",
                    "code": "<pre>insertNavigationAction(oNavigationAction, iIndex) : this</pre>"
                },
                {
                    "name": "insertSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSnappedContent",
                            "optional": false,
                            "description": "<p>The snappedContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the snappedContent should be inserted at; for a negative value of <code>iIndex</code>, the snappedContent is inserted at position 0; for a value greater than the current size of the aggregation, the snappedContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a snappedContent into the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/insertSnappedContent",
                    "code": "<pre>insertSnappedContent(oSnappedContent, iIndex) : this</pre>"
                },
                {
                    "name": "removeAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed action or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAction",
                            "optional": false,
                            "description": "<p>The action to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a action from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAction",
                    "code": "<pre>removeAction(vAction) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeAllActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getActions\">actions</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAllActions",
                    "code": "<pre>removeAllActions() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllAriaDescribedBy",
                    "visibility": "public",
                    "since": "1.78",
                    "returnValue": {
                        "type": "sap.ui.core.ID[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ID[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls in the association named <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAllAriaDescribedBy",
                    "code": "<pre>removeAllAriaDescribedBy() : sap.ui.core.ID[]</pre>"
                },
                {
                    "name": "removeAllContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAllContent",
                    "code": "<pre>removeAllContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAllExpandedContent",
                    "code": "<pre>removeAllExpandedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllNavigationActions",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAllNavigationActions",
                    "code": "<pre>removeAllNavigationActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "removeAllSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAllSnappedContent",
                    "code": "<pre>removeAllSnappedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAriaDescribedBy",
                    "visibility": "public",
                    "since": "1.78",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "description": "<p>The removed ariaDescribedBy or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAriaDescribedBy",
                            "optional": false,
                            "description": "<p>The ariaDescribedBy to be removed or its index or ID</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes an ariaDescribedBy from the association named <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeAriaDescribedBy",
                    "code": "<pre>removeAriaDescribedBy(vAriaDescribedBy) : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "removeContent",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed content or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vContent",
                            "optional": false,
                            "description": "<p>The content to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a content from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeContent",
                    "code": "<pre>removeContent(vContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed expandedContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vExpandedContent",
                            "optional": false,
                            "description": "<p>The expandedContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a expandedContent from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedContent\">expandedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeExpandedContent",
                    "code": "<pre>removeExpandedContent(vExpandedContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeNavigationAction",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.m.Button|null",
                        "description": "<p>The removed navigationAction or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.Button",
                                "href": "api/sap.m.Button",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vNavigationAction",
                            "optional": false,
                            "description": "<p>The navigationAction to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a navigationAction from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getNavigationActions\">navigationActions</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeNavigationAction",
                    "code": "<pre>removeNavigationAction(vNavigationAction) : sap.m.Button|null</pre>"
                },
                {
                    "name": "removeSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed snappedContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vSnappedContent",
                            "optional": false,
                            "description": "<p>The snappedContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a snappedContent from the aggregation <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedContent\">snappedContent</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/removeSnappedContent",
                    "code": "<pre>removeSnappedContent(vSnappedContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setAreaShrinkRatio",
                    "visibility": "public",
                    "since": "1.54",
                    "returnValue": {
                        "type": "this",
                        "description": "<p><code>this</code> to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sAreaShrinkRatio",
                            "optional": false,
                            "description": "<p>new value of the <code>areaShrinkRatio</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageTitleShrinkRatio",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageTitleShrinkRatio"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the value of the <code>areaShrinkRatio</code> property.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setAreaShrinkRatio",
                    "code": "<pre>setAreaShrinkRatio(sAreaShrinkRatio) : this</pre>"
                },
                {
                    "name": "setBackgroundDesign",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sBackgroundDesign",
                            "optional": false,
                            "description": "<p>New value for property <code>backgroundDesign</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.BackgroundDesign",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.BackgroundDesign"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Determines the background color of the <code>DynamicPageTitle</code>.</p><p><b>Note:</b> The default value of <code>backgroundDesign</code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground</code>, which depends on the specific theme.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setBackgroundDesign",
                    "code": "<pre>setBackgroundDesign(sBackgroundDesign) : this</pre>"
                },
                {
                    "name": "setBreadcrumbs",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBreadcrumbs",
                            "optional": false,
                            "description": "<p>The breadcrumbs to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.IBreadcrumbs",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.IBreadcrumbs"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getBreadcrumbs\">breadcrumbs</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setBreadcrumbs",
                    "code": "<pre>setBreadcrumbs(oBreadcrumbs) : this</pre>"
                },
                {
                    "name": "setExpandedHeading",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oExpandedHeading",
                            "optional": false,
                            "description": "<p>The expandedHeading to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getExpandedHeading\">expandedHeading</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setExpandedHeading",
                    "code": "<pre>setExpandedHeading(oExpandedHeading) : this</pre>"
                },
                {
                    "name": "setHeading",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oHeading",
                            "optional": false,
                            "description": "<p>The heading to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getHeading\">heading</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setHeading",
                    "code": "<pre>setHeading(oHeading) : this</pre>"
                },
                {
                    "name": "setPrimaryArea",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPrimaryArea",
                            "optional": true,
                            "defaultValue": "Begin",
                            "description": "<p>New value for property <code>primaryArea</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageTitleArea",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageTitleArea"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getPrimaryArea\">primaryArea</a>.</p><p>Determines which of the <code>DynamicPageTitle</code> areas (Begin, Middle) is primary.</p><p><b>Note:</b> The primary area is shrinking at lower rate, remaining visible as much as it can.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Begin</code>.</p>",
                    "deprecated": {
                        "since": "1.54",
                        "text": "Please use the <code>areaShrinkRatio</code> property instead. The value of <code>areaShrinkRatio</code> must be set in <code>Heading:Content:Actions</code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin</code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio</code>, for example <code>1:1.6:1.6</code>.\n\n<code>primaryArea=Middle</code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio</code>, for example <code>1.6:1:1.6</code>."
                    },
                    "href": "api/sap.f.DynamicPageTitle#methods/setPrimaryArea",
                    "deprecatedText": "Deprecated as of version 1.54. Please use the <em>areaShrinkRatio</em> property instead. The value of <em>areaShrinkRatio</em> must be set in <em>Heading:Content:Actions</em> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.<em>primaryArea=Begin</em> can be achieved by setting a low number for the Heading area to <em>areaShrinkRatio</em>, for example <em>1:1.6:1.6</em>.<em>primaryArea=Middle</em> can be achieved by setting a low number for the Content area to <em>areaShrinkRatio</em>, for example <em>1.6:1:1.6</em>.",
                    "code": "<pre>setPrimaryArea(sPrimaryArea?) : this</pre>"
                },
                {
                    "name": "setSnappedHeading",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSnappedHeading",
                            "optional": false,
                            "description": "<p>The snappedHeading to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedHeading\">snappedHeading</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setSnappedHeading",
                    "code": "<pre>setSnappedHeading(oSnappedHeading) : this</pre>"
                },
                {
                    "name": "setSnappedTitleOnMobile",
                    "visibility": "public",
                    "since": "1.63",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSnappedTitleOnMobile",
                            "optional": false,
                            "description": "<p>The snappedTitleOnMobile to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.Title",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Title"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle#methods/getSnappedTitleOnMobile\">snappedTitleOnMobile</a>.</p>",
                    "href": "api/sap.f.DynamicPageTitle#methods/setSnappedTitleOnMobile",
                    "code": "<pre>setSnappedTitleOnMobile(oSnappedTitleOnMobile) : this</pre>"
                }
            ],
            "displayName": "sap.f.DynamicPageTitle",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.DynamicPageTitle",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.DynamicPageTitleArea",
            "basename": "DynamicPageTitleArea",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "DynamicPageTitleArea",
            "static": true,
            "visibility": "public",
            "since": "1.50",
            "description": "<p><p>Defines the areas within the <code>sap.f.DynamicPageTitle</code> control.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'DynamicPageTitleArea'.</p></p>",
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.DynamicPageTitleArea.Begin",
                    "visibility": "public",
                    "description": "<p>The area includes the <code>heading</code>, <code>expandedContent</code> and <code>snappedContent</code> aggregations, positioned in the beginning area of the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle\">sap.f.DynamicPageTitle</a>.</p>"
                },
                {
                    "name": "sap.f.DynamicPageTitleArea.Middle",
                    "visibility": "public",
                    "description": "<p>The area includes the <code>content</code> aggregation, positioned in the middle part of the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle\">sap.f.DynamicPageTitle</a>.</p>"
                }
            ],
            "displayName": "sap.f.DynamicPageTitleArea",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.DynamicPageTitleArea",
            "subTitle": "Deprecated in version: 1.54",
            "deprecatedText": "Deprecated as of version 1.54. Consumers of the <a target=\"_self\" href=\"api/sap.f.DynamicPageTitle\">sap.f.DynamicPageTitle</a> control should now use the <em>areaShrinkRatio</em> property instead of the <em>primaryArea</em> property."
        },
        {
            "kind": "namespace",
            "name": "sap.f.DynamicPageTitleShrinkRatio",
            "basename": "DynamicPageTitleShrinkRatio",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "DynamicPageTitleShrinkRatio",
            "static": true,
            "visibility": "public",
            "since": "1.54",
            "description": "<p><p>A string type that represents the shrink ratios of the areas within the <code>sap.f.DynamicPageTitle</code>.</p></p>",
            "ui5-metadata": {
                "stereotype": "datatype",
                "basetype": "string",
                "pattern": "^(([0-9]\\d*)(\\.\\d)?:([0-9]\\d*)(\\.\\d)?:([0-9]\\d*)(\\.\\d)?)$"
            },
            "displayName": "sap.f.DynamicPageTitleShrinkRatio",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.DynamicPageTitleShrinkRatio",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.FlexibleColumnLayout",
            "basename": "FlexibleColumnLayout",
            "resource": "sap/f/FlexibleColumnLayout.js",
            "module": "sap/f/FlexibleColumnLayout",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "extends": "sap.ui.core.Control",
            "implements": [
                "sap.ui.core.IPlaceholderSupport"
            ],
            "description": "<p>Implements the list-detail-detail paradigm by displaying up to three pages in separate columns.</p><h3>Overview</h3><p>The control is logically similar to <a target=\"_self\" href=\"api/sap.m.SplitContainer\">sap.m.SplitContainer</a> with the difference that it capable of handling three columns (referred to as <code>Begin</code>, <code>Mid</code> and <code>End</code>) rather than two (<code>Master</code>, <code>Detail</code>). The width of the three columns is variable.</p><p>There are several possible layouts that can be changed either with the control's API, or by the user with the help of the draggable column separators. The draggable column separators allow the user to customize the column widths for the current layout, or to switch to a new layout (if the user drags the column separator past a breakpoint that delimits two different layouts). After the user customized the column widths for a given layout, these user preferences are internally saved and automatically re-applied whenever the user re-visits the same layout.</p><p>Internally the control makes use of three instances of <a target=\"_self\" href=\"api/sap.m.NavContainer\">sap.m.NavContainer</a>, thus forming the three columns.</p><h3>Usage</h3><p>Use this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.</p><p>The columns are accessible with the <code>beginColumnPages</code>, <code>midColumnPages</code> and <code>endColumnPages</code> aggregations.</p><p>The relative sizes and the visibility of the three columns are determined based on the value of the <a target=\"_self\" href=\"api/sap.f.LayoutType\">layout</a> property.</p><p>Changes to the layout due to user interaction are communicated to the app with the <code>stateChange</code> event.</p><p><ul><b>Notes:</b> <li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout</code>-based app, you can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> class.</li> <li>To facilitate the navigation and view loading, you can use the <a target=\"_self\" href=\"api/sap.f.routing.Router\">sap.f.routing.Router</a> </li></ul></p><h3>Responsive Behavior</h3><p>The control automatically displays the maximum possible number of columns based on the device size and current <code>layout</code>. The app does not need to take into consideration the current device/screen size, but only to add content to the columns and change the value of the <code>layout</code> property.</p><p>For detailed information, see <a target=\"_self\" href=\"api/sap.f.LayoutType\">LayoutType</a> enumeration.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "autoFocus",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "since": "1.76",
                        "description": "<p>Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.</p><p>For more information, see <a target=\"_self\" href=\"api/sap.m.NavContainer#methods/autoFocus\">sap.m.NavContainer#autoFocus</a>.<br><br><i>Since: 1.76.</i></p>",
                        "methods": [
                            "getAutoFocus",
                            "setAutoFocus"
                        ]
                    },
                    {
                        "name": "backgroundDesign",
                        "type": "sap.m.BackgroundDesign",
                        "defaultValue": "Transparent",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.54",
                        "description": "<p>Specifies the background color of the content. The visualization of the different options depends on the used theme.<br><br><i>Since: 1.54.</i></p>",
                        "methods": [
                            "getBackgroundDesign",
                            "setBackgroundDesign"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "defaultTransitionNameBeginColumn",
                        "type": "string",
                        "defaultValue": "slide",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines the type of the transition/animation to apply for the <code>Begin</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p>",
                        "methods": [
                            "getDefaultTransitionNameBeginColumn",
                            "setDefaultTransitionNameBeginColumn"
                        ]
                    },
                    {
                        "name": "defaultTransitionNameEndColumn",
                        "type": "string",
                        "defaultValue": "slide",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines the type of the transition/animation to apply for the <code>End</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p>",
                        "methods": [
                            "getDefaultTransitionNameEndColumn",
                            "setDefaultTransitionNameEndColumn"
                        ]
                    },
                    {
                        "name": "defaultTransitionNameMidColumn",
                        "type": "string",
                        "defaultValue": "slide",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines the type of the transition/animation to apply for the <code>Mid</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p>",
                        "methods": [
                            "getDefaultTransitionNameMidColumn",
                            "setDefaultTransitionNameMidColumn"
                        ]
                    },
                    {
                        "name": "layout",
                        "type": "sap.f.LayoutType",
                        "defaultValue": "OneColumn",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Determines the layout of the control - number of visible columns and their relative sizes.</p><p>For more details, see <a target=\"_self\" href=\"topic/3b9f760da5b64adf8db7f95247879086\">Types of Layout</a> in the documentation.</p>",
                        "methods": [
                            "getLayout",
                            "setLayout"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "restoreFocusOnBackNavigation",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "since": "1.77",
                        "description": "<p>Determines whether the focus is restored to the last known when navigating back to a prevously opened column, for example, upon closing of the end column and being transfered back to the mid column.<br><br><i>Since: 1.77.</i></p>",
                        "methods": [
                            "getRestoreFocusOnBackNavigation",
                            "setRestoreFocusOnBackNavigation"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_beginColumnNav",
                        "singularName": "_beginColumnNav",
                        "type": "sap.m.NavContainer",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "methods": [
                            "get_beginColumnNav",
                            "destroy_beginColumnNav",
                            "set_beginColumnNav"
                        ],
                        "linkEnabled": true,
                        "description": ""
                    },
                    {
                        "name": "_endColumnNav",
                        "singularName": "_endColumnNav",
                        "type": "sap.m.NavContainer",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "methods": [
                            "get_endColumnNav",
                            "destroy_endColumnNav",
                            "set_endColumnNav"
                        ],
                        "linkEnabled": true,
                        "description": ""
                    },
                    {
                        "name": "_midColumnNav",
                        "singularName": "_midColumnNav",
                        "type": "sap.m.NavContainer",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "methods": [
                            "get_midColumnNav",
                            "destroy_midColumnNav",
                            "set_midColumnNav"
                        ],
                        "linkEnabled": true,
                        "description": ""
                    },
                    {
                        "name": "beginColumnPages",
                        "singularName": "beginColumnPage",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Begin</code> column.</p><p>These should be any control with page semantics. These aggregated controls will receive navigation events like <a target=\"_self\" href=\"api/sap.m.NavContainerChild#events/BeforeShow\">BeforeShow</a>, they are documented in the pseudo interface <a target=\"_self\" href=\"api/sap.m.NavContainerChild\">sap.m.NavContainerChild</a>.</p>",
                        "methods": [
                            "getBeginColumnPages",
                            "destroyBeginColumnPages",
                            "insertBeginColumnPage",
                            "addBeginColumnPage",
                            "removeBeginColumnPage",
                            "indexOfBeginColumnPage",
                            "removeAllBeginColumnPages"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "endColumnPages",
                        "singularName": "endColumnPage",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>End</code> column.</p><p>These should be any control with page semantics. These aggregated controls will receive navigation events like <a target=\"_self\" href=\"api/sap.m.NavContainerChild#events/BeforeShow\">BeforeShow</a>, they are documented in the pseudo interface <a target=\"_self\" href=\"api/sap.m.NavContainerChild\">sap.m.NavContainerChild</a>.</p>",
                        "methods": [
                            "getEndColumnPages",
                            "destroyEndColumnPages",
                            "insertEndColumnPage",
                            "addEndColumnPage",
                            "removeEndColumnPage",
                            "indexOfEndColumnPage",
                            "removeAllEndColumnPages"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "landmarkInfo",
                        "singularName": "landmarkInfo",
                        "type": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.95",
                        "description": "<p>Accessible landmark settings to be applied on the containers of the <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, no landmarks will be written.<br><br><i>Since: 1.95.</i></p>",
                        "methods": [
                            "getLandmarkInfo",
                            "destroyLandmarkInfo",
                            "setLandmarkInfo"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "midColumnPages",
                        "singularName": "midColumnPage",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Mid</code> column.</p><p>These should be any control with page semantics. These aggregated controls will receive navigation events like <a target=\"_self\" href=\"api/sap.m.NavContainerChild#events/BeforeShow\">BeforeShow</a>, they are documented in the pseudo interface <a target=\"_self\" href=\"api/sap.m.NavContainerChild\">sap.m.NavContainerChild</a>.</p>",
                        "methods": [
                            "getMidColumnPages",
                            "destroyMidColumnPages",
                            "insertMidColumnPage",
                            "addMidColumnPage",
                            "removeMidColumnPage",
                            "indexOfMidColumnPage",
                            "removeAllMidColumnPages"
                        ],
                        "linkEnabled": true
                    }
                ],
                "associations": [
                    {
                        "name": "initialBeginColumnPage",
                        "singularName": "initialBeginColumnPage",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Sets the initial <code>Begin</code> column page, which is displayed on application launch.</p>",
                        "methods": [
                            "getInitialBeginColumnPage",
                            "setInitialBeginColumnPage"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "initialEndColumnPage",
                        "singularName": "initialEndColumnPage",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Sets the initial <code>End</code> column page, which is displayed on application launch.</p>",
                        "methods": [
                            "getInitialEndColumnPage",
                            "setInitialEndColumnPage"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "initialMidColumnPage",
                        "singularName": "initialMidColumnPage",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Sets the initial <code>Mid</code> column page, which is displayed on application launch.</p>",
                        "methods": [
                            "getInitialMidColumnPage",
                            "setInitialMidColumnPage"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.FlexibleColumnLayout</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.FlexibleColumnLayout(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "afterBeginColumnNavigate",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "from",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which had been displayed before navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.from",
                            "linkEnabled": true
                        },
                        {
                            "name": "fromId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which had been displayed before navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.fromId"
                        },
                        {
                            "name": "to",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which is now displayed after navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.to",
                            "linkEnabled": true
                        },
                        {
                            "name": "toId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which is now displayed after navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.toId"
                        },
                        {
                            "name": "firstTime",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.firstTime"
                        },
                        {
                            "name": "isTo",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether was a forward navigation, triggered by to().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isTo"
                        },
                        {
                            "name": "isBack",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a back navigation, triggered by back().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBack"
                        },
                        {
                            "name": "isBackToTop",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToTop"
                        },
                        {
                            "name": "isBackToPage",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToPage"
                        },
                        {
                            "name": "direction",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction"
                        }
                    ],
                    "description": "<p>Fires when navigation between two pages in the <code>Begin</code> column has completed.</p><p>NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</p>"
                },
                {
                    "name": "afterEndColumnNavigate",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "from",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which had been displayed before navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.from",
                            "linkEnabled": true
                        },
                        {
                            "name": "fromId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which had been displayed before navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.fromId"
                        },
                        {
                            "name": "to",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which is now displayed after navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.to",
                            "linkEnabled": true
                        },
                        {
                            "name": "toId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which is now displayed after navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.toId"
                        },
                        {
                            "name": "firstTime",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.firstTime"
                        },
                        {
                            "name": "isTo",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether was a forward navigation, triggered by to().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isTo"
                        },
                        {
                            "name": "isBack",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a back navigation, triggered by back().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBack"
                        },
                        {
                            "name": "isBackToTop",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToTop"
                        },
                        {
                            "name": "isBackToPage",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToPage"
                        },
                        {
                            "name": "direction",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction"
                        }
                    ],
                    "description": "<p>Fires when navigation between two pages in the <code>End</code> column has completed.</p><p>NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</p>"
                },
                {
                    "name": "afterMidColumnNavigate",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "from",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which had been displayed before navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.from",
                            "linkEnabled": true
                        },
                        {
                            "name": "fromId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which had been displayed before navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.fromId"
                        },
                        {
                            "name": "to",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which is now displayed after navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.to",
                            "linkEnabled": true
                        },
                        {
                            "name": "toId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which is now displayed after navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.toId"
                        },
                        {
                            "name": "firstTime",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.firstTime"
                        },
                        {
                            "name": "isTo",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether was a forward navigation, triggered by to().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isTo"
                        },
                        {
                            "name": "isBack",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a back navigation, triggered by back().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBack"
                        },
                        {
                            "name": "isBackToTop",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToTop"
                        },
                        {
                            "name": "isBackToPage",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToPage"
                        },
                        {
                            "name": "direction",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction"
                        }
                    ],
                    "description": "<p>Fires when navigation between two pages in the <code>Mid</code> column has completed.</p><p>NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</p>"
                },
                {
                    "name": "beginColumnNavigate",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "from",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which was displayed before the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.from",
                            "linkEnabled": true
                        },
                        {
                            "name": "fromId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which was displayed before the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.fromId"
                        },
                        {
                            "name": "to",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which will be displayed after the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.to",
                            "linkEnabled": true
                        },
                        {
                            "name": "toId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which will be displayed after the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.toId"
                        },
                        {
                            "name": "firstTime",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether the \"to\" page (more precisely: a control with the ID of the page, which is currently being navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.firstTime"
                        },
                        {
                            "name": "isTo",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a forward navigation, triggered by to().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isTo"
                        },
                        {
                            "name": "isBack",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a back navigation, triggered by back().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBack"
                        },
                        {
                            "name": "isBackToTop",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToTop"
                        },
                        {
                            "name": "isBackToPage",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToPage"
                        },
                        {
                            "name": "direction",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction"
                        }
                    ],
                    "description": "<p>Fires when navigation between two pages in the <code>Begin</code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.</p>"
                },
                {
                    "name": "columnResize",
                    "visibility": "public",
                    "since": "1.76",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "beginColumn",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether <code>beginColumn</code> resize has completed.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.beginColumn"
                        },
                        {
                            "name": "midColumn",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether <code>midColumn</code> resize has completed.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.midColumn"
                        },
                        {
                            "name": "endColumn",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether <code>endColumn</code> resize has completed.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.endColumn"
                        }
                    ],
                    "description": "<p>Fired when resize of each column has completed.<br><br><i>Since: 1.76.</i></p>"
                },
                {
                    "name": "endColumnNavigate",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "from",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which was displayed before the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.from",
                            "linkEnabled": true
                        },
                        {
                            "name": "fromId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which was displayed before the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.fromId"
                        },
                        {
                            "name": "to",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which will be displayed after the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.to",
                            "linkEnabled": true
                        },
                        {
                            "name": "toId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which will be displayed after the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.toId"
                        },
                        {
                            "name": "firstTime",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether the \"to\" page (more precisely: a control with the ID of the page, which is currently being navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.firstTime"
                        },
                        {
                            "name": "isTo",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a forward navigation, triggered by to().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isTo"
                        },
                        {
                            "name": "isBack",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a back navigation, triggered by back().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBack"
                        },
                        {
                            "name": "isBackToTop",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToTop"
                        },
                        {
                            "name": "isBackToPage",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToPage"
                        },
                        {
                            "name": "direction",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction"
                        }
                    ],
                    "description": "<p>Fires when navigation between two pages in the <code>End</code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.</p>"
                },
                {
                    "name": "midColumnNavigate",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "from",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which was displayed before the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.from",
                            "linkEnabled": true
                        },
                        {
                            "name": "fromId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which was displayed before the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.fromId"
                        },
                        {
                            "name": "to",
                            "type": "sap.ui.core.Control",
                            "optional": false,
                            "description": "<p>The page, which will be displayed after the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.to",
                            "linkEnabled": true
                        },
                        {
                            "name": "toId",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The ID of the page, which will be displayed after the current navigation.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.toId"
                        },
                        {
                            "name": "firstTime",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether the \"to\" page (more precisely: a control with the ID of the page, which is currently being navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.firstTime"
                        },
                        {
                            "name": "isTo",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a forward navigation, triggered by to().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isTo"
                        },
                        {
                            "name": "isBack",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a back navigation, triggered by back().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBack"
                        },
                        {
                            "name": "isBackToTop",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this is a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToTop"
                        },
                        {
                            "name": "isBackToPage",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isBackToPage"
                        },
                        {
                            "name": "direction",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction"
                        }
                    ],
                    "description": "<p>Fires when navigation between two pages in the <code>Mid</code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.</p>"
                },
                {
                    "name": "stateChange",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "layout",
                            "type": "sap.f.LayoutType",
                            "optional": false,
                            "description": "<p>The value of the <code>layout</code> property</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.layout",
                            "linkEnabled": true
                        },
                        {
                            "name": "maxColumnsCount",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The maximum number of columns that can be displayed at once based on the available screen size and control settings.</p><p><ul>Possible values are: <li>3 for browser size of 1280px or more</li> <li>2 for browser size between 960px and 1280px</li> <li>1 for browser size less than 960px</li></ul></p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.maxColumnsCount"
                        },
                        {
                            "name": "isNavigationArrow",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Indicates whether the layout changed as a result of the user clicking a column separator's arrow or dragging the column separators</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isNavigationArrow"
                        },
                        {
                            "name": "isResize",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Indicates whether the maximum number of columns that can be displayed at once changed due to resize of the entire browser window</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.isResize"
                        }
                    ],
                    "description": "<p>Fired when there is a change in the <code>layout</code> property or in the maximum number of columns that can be displayed at once. <br/></br> <ul>The interactions that may lead to a state change are: <li>The property <code>layout</code> was changed indirectly by the user dragging the column separator or clicking on its arrow (where arrow is available).</li> <li>The user resized the browser window beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.</li></ul> <br/><br/> <b>Note: </b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width</p>"
                }
            ],
            "methods": [
                {
                    "name": "_getColumnWidthDistributionForLayout",
                    "visibility": "restricted",
                    "allowedFor": [
                        "sap.f.FlexibleColumnLayoutSemanticHelper"
                    ],
                    "returnValue": {
                        "type": "string|array",
                        "types": [
                            {
                                "value": "string"
                            },
                            {
                                "value": "array"
                            }
                        ],
                        "description": ""
                    },
                    "parameters": [
                        {
                            "name": "sLayout",
                            "optional": false,
                            "description": "<p>the layout</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "bAsIntArray",
                            "optional": false,
                            "description": "<p>return an array in the format [33, 67, 0] instead of a string \"33/67/0\"</p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iMaxColumnsCount",
                            "optional": true,
                            "description": "<p>the maximun number of columns. If not provided, the result of <code>getMaxColumnsCount</code> will be taken</p>",
                            "types": [
                                {
                                    "value": "number"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Returns a string, representing the relative percentage sizes of the columns for the given layout in the format \"begin/mid/end\" (f.e. \"33/67/0\")</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/_getColumnWidthDistributionForLayout",
                    "code": "<pre>_getColumnWidthDistributionForLayout(sLayout, bAsIntArray, iMaxColumnsCount?) : string|array</pre>"
                },
                {
                    "name": "_getLayoutHistory",
                    "visibility": "restricted",
                    "allowedFor": [
                        "sap.f.FlexibleColumnLayoutSemanticHelper"
                    ],
                    "returnValue": {
                        "type": "sap.f.FlexibleColumnLayout.LayoutHistory",
                        "types": [
                            {
                                "value": "sap.f.FlexibleColumnLayout.LayoutHistory",
                                "href": "api/sap.f.FlexibleColumnLayout.LayoutHistory",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Returns the layout history object</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/_getLayoutHistory",
                    "code": "<pre>_getLayoutHistory() : sap.f.FlexibleColumnLayout.LayoutHistory</pre>"
                },
                {
                    "name": "addBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBeginColumnPage",
                            "optional": false,
                            "description": "<p>The beginColumnPage to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some beginColumnPage to the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/addBeginColumnPage",
                    "code": "<pre>addBeginColumnPage(oBeginColumnPage) : this</pre>"
                },
                {
                    "name": "addEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oEndColumnPage",
                            "optional": false,
                            "description": "<p>The endColumnPage to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some endColumnPage to the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/addEndColumnPage",
                    "code": "<pre>addEndColumnPage(oEndColumnPage) : this</pre>"
                },
                {
                    "name": "addMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMidColumnPage",
                            "optional": false,
                            "description": "<p>The midColumnPage to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some midColumnPage to the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/addMidColumnPage",
                    "code": "<pre>addMidColumnPage(oMidColumnPage) : this</pre>"
                },
                {
                    "name": "attachAfterBeginColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterBeginColumnNavigate\">afterBeginColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fires when navigation between two pages in the <code>Begin</code> column has completed.</p><p>NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachAfterBeginColumnNavigate",
                    "code": "<pre>attachAfterBeginColumnNavigate(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachAfterEndColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterEndColumnNavigate\">afterEndColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fires when navigation between two pages in the <code>End</code> column has completed.</p><p>NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachAfterEndColumnNavigate",
                    "code": "<pre>attachAfterEndColumnNavigate(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachAfterMidColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterMidColumnNavigate\">afterMidColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fires when navigation between two pages in the <code>Mid</code> column has completed.</p><p>NOTE: In case of animated transitions this event is fired with some delay after the navigate event.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachAfterMidColumnNavigate",
                    "code": "<pre>attachAfterMidColumnNavigate(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachBeginColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/beginColumnNavigate\">beginColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fires when navigation between two pages in the <code>Begin</code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachBeginColumnNavigate",
                    "code": "<pre>attachBeginColumnNavigate(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachColumnResize",
                    "visibility": "public",
                    "since": "1.76",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/columnResize\">columnResize</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fired when resize of each column has completed.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachColumnResize",
                    "code": "<pre>attachColumnResize(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachEndColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/endColumnNavigate\">endColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fires when navigation between two pages in the <code>End</code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachEndColumnNavigate",
                    "code": "<pre>attachEndColumnNavigate(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachMidColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/midColumnNavigate\">midColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fires when navigation between two pages in the <code>Mid</code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachMidColumnNavigate",
                    "code": "<pre>attachMidColumnNavigate(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachStateChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/stateChange\">stateChange</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.</p><p>Fired when there is a change in the <code>layout</code> property or in the maximum number of columns that can be displayed at once. <br/></br> <ul>The interactions that may lead to a state change are: <li>The property <code>layout</code> was changed indirectly by the user dragging the column separator or clicking on its arrow (where arrow is available).</li> <li>The user resized the browser window beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.</li></ul> <br/><br/> <b>Note: </b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/attachStateChange",
                    "code": "<pre>attachStateChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "backToPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPageId",
                            "optional": false,
                            "description": "<p>The screen to which is being navigated to. The ID or the control itself can be given.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oBackData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as backData property. (the original data from the to() navigation will still be available as data property).</p><p>In scenarios, where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.</p><p>When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.</p><p>In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates back to a page in the <code>FlexibleColumnLayout</code>. Columns are scanned for the page in the following order: <code>Begin</code>, <code>Mid</code>, <code>End</code>.</p><p>Calling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer, then the BeforeHide pseudo event on the source page, BeforeFirstShow (if applicable), and BeforeShow on the target page. Later, after the transition has completed, the AfterShow pseudo event is triggered on the target page and AfterHide - on the page, which has been left. The given backData object is available in the BeforeFirstShow, BeforeShow, and AfterShow event objects as data property. The original \"data\" object from the \"to\" navigation is also available in these event objects.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/backToPage",
                    "code": "<pre>backToPage(sPageId, oBackData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "backToTopBeginColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBackData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)</p><p>In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.</p><p>When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.</p><p>In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates back to the initial/top level of Begin column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/backToTopBeginColumn",
                    "code": "<pre>backToTopBeginColumn(oBackData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "backToTopEndColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBackData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)</p><p>In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.</p><p>When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.</p><p>In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates back to the initial/top level of End column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/backToTopEndColumn",
                    "code": "<pre>backToTopEndColumn(oBackData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "backToTopMidColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBackData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)</p><p>In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.</p><p>When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.</p><p>In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates back to the initial/top level of Mid column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/backToTopMidColumn",
                    "code": "<pre>backToTopMidColumn(oBackData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "destroyBeginColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the beginColumnPages in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/destroyBeginColumnPages",
                    "code": "<pre>destroyBeginColumnPages() : this</pre>"
                },
                {
                    "name": "destroyEndColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the endColumnPages in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/destroyEndColumnPages",
                    "code": "<pre>destroyEndColumnPages() : this</pre>"
                },
                {
                    "name": "destroyLandmarkInfo",
                    "visibility": "public",
                    "since": "1.95",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the landmarkInfo in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLandmarkInfo\">landmarkInfo</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/destroyLandmarkInfo",
                    "code": "<pre>destroyLandmarkInfo() : this</pre>"
                },
                {
                    "name": "destroyMidColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the midColumnPages in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/destroyMidColumnPages",
                    "code": "<pre>destroyMidColumnPages() : this</pre>"
                },
                {
                    "name": "detachAfterBeginColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterBeginColumnNavigate\">afterBeginColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachAfterBeginColumnNavigate",
                    "code": "<pre>detachAfterBeginColumnNavigate(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachAfterEndColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterEndColumnNavigate\">afterEndColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachAfterEndColumnNavigate",
                    "code": "<pre>detachAfterEndColumnNavigate(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachAfterMidColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterMidColumnNavigate\">afterMidColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachAfterMidColumnNavigate",
                    "code": "<pre>detachAfterMidColumnNavigate(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachBeginColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/beginColumnNavigate\">beginColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachBeginColumnNavigate",
                    "code": "<pre>detachBeginColumnNavigate(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachColumnResize",
                    "visibility": "public",
                    "since": "1.76",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/columnResize\">columnResize</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachColumnResize",
                    "code": "<pre>detachColumnResize(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachEndColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/endColumnNavigate\">endColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachEndColumnNavigate",
                    "code": "<pre>detachEndColumnNavigate(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachMidColumnNavigate",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/midColumnNavigate\">midColumnNavigate</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachMidColumnNavigate",
                    "code": "<pre>detachMidColumnNavigate(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachStateChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/stateChange\">stateChange</a> event of this <code>sap.f.FlexibleColumnLayout</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/detachStateChange",
                    "code": "<pre>detachStateChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.FlexibleColumnLayout.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/sap.f.FlexibleColumnLayout.extend",
                    "code": "<pre>sap.f.FlexibleColumnLayout.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireAfterBeginColumnNavigate",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "from",
                            "optional": true,
                            "description": "<p>The page, which had been displayed before navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.from",
                            "defaultValue": ""
                        },
                        {
                            "name": "fromId",
                            "optional": true,
                            "description": "<p>The ID of the page, which had been displayed before navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.fromId",
                            "defaultValue": ""
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "description": "<p>The page, which is now displayed after navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.to",
                            "defaultValue": ""
                        },
                        {
                            "name": "toId",
                            "optional": true,
                            "description": "<p>The ID of the page, which is now displayed after navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.toId",
                            "defaultValue": ""
                        },
                        {
                            "name": "firstTime",
                            "optional": true,
                            "description": "<p>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.firstTime",
                            "defaultValue": ""
                        },
                        {
                            "name": "isTo",
                            "optional": true,
                            "description": "<p>Determines whether was a forward navigation, triggered by to().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isTo",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBack",
                            "optional": true,
                            "description": "<p>Determines whether this was a back navigation, triggered by back().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBack",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToTop",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToTop",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToPage",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToPage",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterBeginColumnNavigate\">afterBeginColumnNavigate</a> to attached listeners.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireAfterBeginColumnNavigate",
                    "code": "<pre>fireAfterBeginColumnNavigate(mParameters?) : this</pre>"
                },
                {
                    "name": "fireAfterEndColumnNavigate",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "from",
                            "optional": true,
                            "description": "<p>The page, which had been displayed before navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.from",
                            "defaultValue": ""
                        },
                        {
                            "name": "fromId",
                            "optional": true,
                            "description": "<p>The ID of the page, which had been displayed before navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.fromId",
                            "defaultValue": ""
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "description": "<p>The page, which is now displayed after navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.to",
                            "defaultValue": ""
                        },
                        {
                            "name": "toId",
                            "optional": true,
                            "description": "<p>The ID of the page, which is now displayed after navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.toId",
                            "defaultValue": ""
                        },
                        {
                            "name": "firstTime",
                            "optional": true,
                            "description": "<p>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.firstTime",
                            "defaultValue": ""
                        },
                        {
                            "name": "isTo",
                            "optional": true,
                            "description": "<p>Determines whether was a forward navigation, triggered by to().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isTo",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBack",
                            "optional": true,
                            "description": "<p>Determines whether this was a back navigation, triggered by back().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBack",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToTop",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToTop",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToPage",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToPage",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterEndColumnNavigate\">afterEndColumnNavigate</a> to attached listeners.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireAfterEndColumnNavigate",
                    "code": "<pre>fireAfterEndColumnNavigate(mParameters?) : this</pre>"
                },
                {
                    "name": "fireAfterMidColumnNavigate",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "from",
                            "optional": true,
                            "description": "<p>The page, which had been displayed before navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.from",
                            "defaultValue": ""
                        },
                        {
                            "name": "fromId",
                            "optional": true,
                            "description": "<p>The ID of the page, which had been displayed before navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.fromId",
                            "defaultValue": ""
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "description": "<p>The page, which is now displayed after navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.to",
                            "defaultValue": ""
                        },
                        {
                            "name": "toId",
                            "optional": true,
                            "description": "<p>The ID of the page, which is now displayed after navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.toId",
                            "defaultValue": ""
                        },
                        {
                            "name": "firstTime",
                            "optional": true,
                            "description": "<p>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.firstTime",
                            "defaultValue": ""
                        },
                        {
                            "name": "isTo",
                            "optional": true,
                            "description": "<p>Determines whether was a forward navigation, triggered by to().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isTo",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBack",
                            "optional": true,
                            "description": "<p>Determines whether this was a back navigation, triggered by back().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBack",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToTop",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToTop",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToPage",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToPage",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/afterMidColumnNavigate\">afterMidColumnNavigate</a> to attached listeners.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireAfterMidColumnNavigate",
                    "code": "<pre>fireAfterMidColumnNavigate(mParameters?) : this</pre>"
                },
                {
                    "name": "fireBeginColumnNavigate",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Whether or not to prevent the default action</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "from",
                            "optional": true,
                            "description": "<p>The page, which was displayed before the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.from",
                            "defaultValue": ""
                        },
                        {
                            "name": "fromId",
                            "optional": true,
                            "description": "<p>The ID of the page, which was displayed before the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.fromId",
                            "defaultValue": ""
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "description": "<p>The page, which will be displayed after the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.to",
                            "defaultValue": ""
                        },
                        {
                            "name": "toId",
                            "optional": true,
                            "description": "<p>The ID of the page, which will be displayed after the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.toId",
                            "defaultValue": ""
                        },
                        {
                            "name": "firstTime",
                            "optional": true,
                            "description": "<p>Determines whether the \"to\" page (more precisely: a control with the ID of the page, which is currently being navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.firstTime",
                            "defaultValue": ""
                        },
                        {
                            "name": "isTo",
                            "optional": true,
                            "description": "<p>Determines whether this is a forward navigation, triggered by to().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isTo",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBack",
                            "optional": true,
                            "description": "<p>Determines whether this is a back navigation, triggered by back().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBack",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToTop",
                            "optional": true,
                            "description": "<p>Determines whether this is a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToTop",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToPage",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToPage",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/beginColumnNavigate\">beginColumnNavigate</a> to attached listeners.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireBeginColumnNavigate",
                    "code": "<pre>fireBeginColumnNavigate(mParameters?) : boolean</pre>"
                },
                {
                    "name": "fireColumnResize",
                    "visibility": "protected",
                    "since": "1.76",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "beginColumn",
                            "optional": true,
                            "description": "<p>Determines whether <code>beginColumn</code> resize has completed.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.beginColumn",
                            "defaultValue": ""
                        },
                        {
                            "name": "midColumn",
                            "optional": true,
                            "description": "<p>Determines whether <code>midColumn</code> resize has completed.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.midColumn",
                            "defaultValue": ""
                        },
                        {
                            "name": "endColumn",
                            "optional": true,
                            "description": "<p>Determines whether <code>endColumn</code> resize has completed.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.endColumn",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/columnResize\">columnResize</a> to attached listeners.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireColumnResize",
                    "code": "<pre>fireColumnResize(mParameters?) : this</pre>"
                },
                {
                    "name": "fireEndColumnNavigate",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Whether or not to prevent the default action</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "from",
                            "optional": true,
                            "description": "<p>The page, which was displayed before the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.from",
                            "defaultValue": ""
                        },
                        {
                            "name": "fromId",
                            "optional": true,
                            "description": "<p>The ID of the page, which was displayed before the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.fromId",
                            "defaultValue": ""
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "description": "<p>The page, which will be displayed after the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.to",
                            "defaultValue": ""
                        },
                        {
                            "name": "toId",
                            "optional": true,
                            "description": "<p>The ID of the page, which will be displayed after the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.toId",
                            "defaultValue": ""
                        },
                        {
                            "name": "firstTime",
                            "optional": true,
                            "description": "<p>Determines whether the \"to\" page (more precisely: a control with the ID of the page, which is currently being navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.firstTime",
                            "defaultValue": ""
                        },
                        {
                            "name": "isTo",
                            "optional": true,
                            "description": "<p>Determines whether this is a forward navigation, triggered by to().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isTo",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBack",
                            "optional": true,
                            "description": "<p>Determines whether this is a back navigation, triggered by back().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBack",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToTop",
                            "optional": true,
                            "description": "<p>Determines whether this is a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToTop",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToPage",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToPage",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/endColumnNavigate\">endColumnNavigate</a> to attached listeners.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireEndColumnNavigate",
                    "code": "<pre>fireEndColumnNavigate(mParameters?) : boolean</pre>"
                },
                {
                    "name": "fireMidColumnNavigate",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Whether or not to prevent the default action</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "from",
                            "optional": true,
                            "description": "<p>The page, which was displayed before the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.from",
                            "defaultValue": ""
                        },
                        {
                            "name": "fromId",
                            "optional": true,
                            "description": "<p>The ID of the page, which was displayed before the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.fromId",
                            "defaultValue": ""
                        },
                        {
                            "name": "to",
                            "optional": true,
                            "description": "<p>The page, which will be displayed after the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mParameters.to",
                            "defaultValue": ""
                        },
                        {
                            "name": "toId",
                            "optional": true,
                            "description": "<p>The ID of the page, which will be displayed after the current navigation.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.toId",
                            "defaultValue": ""
                        },
                        {
                            "name": "firstTime",
                            "optional": true,
                            "description": "<p>Determines whether the \"to\" page (more precisely: a control with the ID of the page, which is currently being navigated to) has not been displayed/navigated to before.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.firstTime",
                            "defaultValue": ""
                        },
                        {
                            "name": "isTo",
                            "optional": true,
                            "description": "<p>Determines whether this is a forward navigation, triggered by to().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isTo",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBack",
                            "optional": true,
                            "description": "<p>Determines whether this is a back navigation, triggered by back().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBack",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToTop",
                            "optional": true,
                            "description": "<p>Determines whether this is a navigation to the root page, triggered by backToTop().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToTop",
                            "defaultValue": ""
                        },
                        {
                            "name": "isBackToPage",
                            "optional": true,
                            "description": "<p>Determines whether this was a navigation to a specific page, triggered by backToPage().</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isBackToPage",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/midColumnNavigate\">midColumnNavigate</a> to attached listeners.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireMidColumnNavigate",
                    "code": "<pre>fireMidColumnNavigate(mParameters?) : boolean</pre>"
                },
                {
                    "name": "fireStateChange",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "layout",
                            "optional": true,
                            "description": "<p>The value of the <code>layout</code> property</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.f.LayoutType",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.LayoutType"
                                }
                            ],
                            "phoneName": "mParameters.layout",
                            "defaultValue": ""
                        },
                        {
                            "name": "maxColumnsCount",
                            "optional": true,
                            "description": "<p>The maximum number of columns that can be displayed at once based on the available screen size and control settings.</p><p><ul>Possible values are: <li>3 for browser size of 1280px or more</li> <li>2 for browser size between 960px and 1280px</li> <li>1 for browser size less than 960px</li></ul></p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.maxColumnsCount",
                            "defaultValue": ""
                        },
                        {
                            "name": "isNavigationArrow",
                            "optional": true,
                            "description": "<p>Indicates whether the layout changed as a result of the user clicking a column separator's arrow or dragging the column separators</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isNavigationArrow",
                            "defaultValue": ""
                        },
                        {
                            "name": "isResize",
                            "optional": true,
                            "description": "<p>Indicates whether the maximum number of columns that can be displayed at once changed due to resize of the entire browser window</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.isResize",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#events/stateChange\">stateChange</a> to attached listeners.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/fireStateChange",
                    "code": "<pre>fireStateChange(mParameters?) : this</pre>"
                },
                {
                    "name": "getAutoFocus",
                    "visibility": "public",
                    "since": "1.76",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>autoFocus</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getAutoFocus\">autoFocus</a>.</p><p>Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.</p><p>For more information, see <a target=\"_self\" href=\"api/sap.m.NavContainer#methods/autoFocus\">sap.m.NavContainer#autoFocus</a>.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getAutoFocus",
                    "code": "<pre>getAutoFocus() : boolean</pre>"
                },
                {
                    "name": "getBackgroundDesign",
                    "visibility": "public",
                    "since": "1.54",
                    "returnValue": {
                        "type": "sap.m.BackgroundDesign",
                        "description": "<p>Value of property <code>backgroundDesign</code></p>",
                        "types": [
                            {
                                "value": "sap.m.BackgroundDesign",
                                "href": "api/sap.m.BackgroundDesign",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Specifies the background color of the content. The visualization of the different options depends on the used theme.</p><p>Default value is <code>Transparent</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getBackgroundDesign",
                    "code": "<pre>getBackgroundDesign() : sap.m.BackgroundDesign</pre>"
                },
                {
                    "name": "getBeginColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>.</p><p>The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Begin</code> column.</p><p>These should be any control with page semantics. These aggregated controls will receive navigation events like <a target=\"_self\" href=\"api/sap.m.NavContainerChild#events/BeforeShow\">BeforeShow</a>, they are documented in the pseudo interface <a target=\"_self\" href=\"api/sap.m.NavContainerChild\">sap.m.NavContainerChild</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages",
                    "code": "<pre>getBeginColumnPages() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getCurrentBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "description": "<p>The UI5 control in the Begin column</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns the currently displayed Begin column page.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getCurrentBeginColumnPage",
                    "code": "<pre>getCurrentBeginColumnPage() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getCurrentEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "description": "<p>The UI5 control in the End column</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns the currently displayed End column page.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getCurrentEndColumnPage",
                    "code": "<pre>getCurrentEndColumnPage() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getCurrentMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "description": "<p>The UI5 control in the Mid column</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns the currently displayed Mid column page.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getCurrentMidColumnPage",
                    "code": "<pre>getCurrentMidColumnPage() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getDefaultTransitionNameBeginColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>defaultTransitionNameBeginColumn</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameBeginColumn\">defaultTransitionNameBeginColumn</a>.</p><p>Determines the type of the transition/animation to apply for the <code>Begin</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p><p>Default value is <code>\"slide\"</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameBeginColumn",
                    "code": "<pre>getDefaultTransitionNameBeginColumn() : string</pre>"
                },
                {
                    "name": "getDefaultTransitionNameEndColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>defaultTransitionNameEndColumn</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameEndColumn\">defaultTransitionNameEndColumn</a>.</p><p>Determines the type of the transition/animation to apply for the <code>End</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p><p>Default value is <code>\"slide\"</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameEndColumn",
                    "code": "<pre>getDefaultTransitionNameEndColumn() : string</pre>"
                },
                {
                    "name": "getDefaultTransitionNameMidColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>defaultTransitionNameMidColumn</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameMidColumn\">defaultTransitionNameMidColumn</a>.</p><p>Determines the type of the transition/animation to apply for the <code>Mid</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p><p>Default value is <code>\"slide\"</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameMidColumn",
                    "code": "<pre>getDefaultTransitionNameMidColumn() : string</pre>"
                },
                {
                    "name": "getEndColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>.</p><p>The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>End</code> column.</p><p>These should be any control with page semantics. These aggregated controls will receive navigation events like <a target=\"_self\" href=\"api/sap.m.NavContainerChild#events/BeforeShow\">BeforeShow</a>, they are documented in the pseudo interface <a target=\"_self\" href=\"api/sap.m.NavContainerChild\">sap.m.NavContainerChild</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages",
                    "code": "<pre>getEndColumnPages() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getInitialBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>ID of the element which is the current target of the association <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getInitialBeginColumnPage\">initialBeginColumnPage</a>, or <code>null</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getInitialBeginColumnPage",
                    "code": "<pre>getInitialBeginColumnPage() : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "getInitialEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>ID of the element which is the current target of the association <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getInitialEndColumnPage\">initialEndColumnPage</a>, or <code>null</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getInitialEndColumnPage",
                    "code": "<pre>getInitialEndColumnPage() : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "getInitialMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>ID of the element which is the current target of the association <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getInitialMidColumnPage\">initialMidColumnPage</a>, or <code>null</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getInitialMidColumnPage",
                    "code": "<pre>getInitialMidColumnPage() : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "getLandmarkInfo",
                    "visibility": "public",
                    "since": "1.95",
                    "returnValue": {
                        "type": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
                        "types": [
                            {
                                "value": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
                                "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLandmarkInfo\">landmarkInfo</a>.</p><p>Accessible landmark settings to be applied on the containers of the <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, no landmarks will be written.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getLandmarkInfo",
                    "code": "<pre>getLandmarkInfo() : sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo</pre>"
                },
                {
                    "name": "getLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.LayoutType",
                        "description": "<p>Value of property <code>layout</code></p>",
                        "types": [
                            {
                                "value": "sap.f.LayoutType",
                                "href": "api/sap.f.LayoutType",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLayout\">layout</a>.</p><p>Determines the layout of the control - number of visible columns and their relative sizes.</p><p>For more details, see <a target=\"_self\" href=\"topic/3b9f760da5b64adf8db7f95247879086\">Types of Layout</a> in the documentation.</p><p>Default value is <code>OneColumn</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getLayout",
                    "code": "<pre>getLayout() : sap.f.LayoutType</pre>"
                },
                {
                    "name": "getMaxColumnsCount",
                    "visibility": "public",
                    "returnValue": {
                        "type": "number",
                        "description": "<p>The maximum number of columns</p>",
                        "types": [
                            {
                                "value": "number"
                            }
                        ]
                    },
                    "description": "<p>Returns the maximum number of columns that can be displayed at once based on the control width</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getMaxColumnsCount",
                    "code": "<pre>getMaxColumnsCount() : number</pre>"
                },
                {
                    "name": "sap.f.FlexibleColumnLayout.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.FlexibleColumnLayout.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/sap.f.FlexibleColumnLayout.getMetadata",
                    "code": "<pre>sap.f.FlexibleColumnLayout.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getMidColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>.</p><p>The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Mid</code> column.</p><p>These should be any control with page semantics. These aggregated controls will receive navigation events like <a target=\"_self\" href=\"api/sap.m.NavContainerChild#events/BeforeShow\">BeforeShow</a>, they are documented in the pseudo interface <a target=\"_self\" href=\"api/sap.m.NavContainerChild\">sap.m.NavContainerChild</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages",
                    "code": "<pre>getMidColumnPages() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getRestoreFocusOnBackNavigation",
                    "visibility": "public",
                    "since": "1.77",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>restoreFocusOnBackNavigation</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getRestoreFocusOnBackNavigation\">restoreFocusOnBackNavigation</a>.</p><p>Determines whether the focus is restored to the last known when navigating back to a prevously opened column, for example, upon closing of the end column and being transfered back to the mid column.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/getRestoreFocusOnBackNavigation",
                    "code": "<pre>getRestoreFocusOnBackNavigation() : boolean</pre>"
                },
                {
                    "name": "hidePlaceholder",
                    "visibility": "restricted",
                    "allowedFor": [
                        "SAP internal apps"
                    ],
                    "since": "1.91",
                    "parameters": [
                        {
                            "name": "mSettings",
                            "optional": false,
                            "description": "<p>Object containing the aggregation name</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "aggregation",
                            "optional": false,
                            "description": "<p>The aggregation name to decide on which column/container the placeholder should be hidden</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mSettings.aggregation",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Hides the placeholder on the corresponding column for the provided aggregation name.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/hidePlaceholder",
                    "code": "<pre>hidePlaceholder(mSettings) : void</pre>"
                },
                {
                    "name": "indexOfBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBeginColumnPage",
                            "optional": false,
                            "description": "<p>The beginColumnPage whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/indexOfBeginColumnPage",
                    "code": "<pre>indexOfBeginColumnPage(oBeginColumnPage) : int</pre>"
                },
                {
                    "name": "indexOfEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oEndColumnPage",
                            "optional": false,
                            "description": "<p>The endColumnPage whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/indexOfEndColumnPage",
                    "code": "<pre>indexOfEndColumnPage(oEndColumnPage) : int</pre>"
                },
                {
                    "name": "indexOfMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMidColumnPage",
                            "optional": false,
                            "description": "<p>The midColumnPage whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/indexOfMidColumnPage",
                    "code": "<pre>indexOfMidColumnPage(oMidColumnPage) : int</pre>"
                },
                {
                    "name": "insertBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBeginColumnPage",
                            "optional": false,
                            "description": "<p>The beginColumnPage to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the beginColumnPage should be inserted at; for a negative value of <code>iIndex</code>, the beginColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the beginColumnPage is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a beginColumnPage into the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/insertBeginColumnPage",
                    "code": "<pre>insertBeginColumnPage(oBeginColumnPage, iIndex) : this</pre>"
                },
                {
                    "name": "insertEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oEndColumnPage",
                            "optional": false,
                            "description": "<p>The endColumnPage to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the endColumnPage should be inserted at; for a negative value of <code>iIndex</code>, the endColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the endColumnPage is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a endColumnPage into the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/insertEndColumnPage",
                    "code": "<pre>insertEndColumnPage(oEndColumnPage, iIndex) : this</pre>"
                },
                {
                    "name": "insertMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMidColumnPage",
                            "optional": false,
                            "description": "<p>The midColumnPage to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the midColumnPage should be inserted at; for a negative value of <code>iIndex</code>, the midColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the midColumnPage is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a midColumnPage into the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/insertMidColumnPage",
                    "code": "<pre>insertMidColumnPage(oMidColumnPage, iIndex) : this</pre>"
                },
                {
                    "name": "needPlaceholder",
                    "visibility": "restricted",
                    "allowedFor": [
                        "sap.ui.core.routing"
                    ],
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Whether placeholder is needed or not</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sAggregationName",
                            "optional": false,
                            "description": "<p>The aggregation name for the corresponding column</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oObject",
                            "optional": false,
                            "description": "<p>The page object to be displayed</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks whether a placeholder is needed by comparing the currently displayed page with the page object that is going to be displayed. If they are the same, no placeholder needs to be shown.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/needPlaceholder",
                    "code": "<pre>needPlaceholder(sAggregationName, oObject) : boolean</pre>"
                },
                {
                    "name": "removeAllBeginColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/removeAllBeginColumnPages",
                    "code": "<pre>removeAllBeginColumnPages() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllEndColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/removeAllEndColumnPages",
                    "code": "<pre>removeAllEndColumnPages() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllMidColumnPages",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/removeAllMidColumnPages",
                    "code": "<pre>removeAllMidColumnPages() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed beginColumnPage or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vBeginColumnPage",
                            "optional": false,
                            "description": "<p>The beginColumnPage to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a beginColumnPage from the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBeginColumnPages\">beginColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/removeBeginColumnPage",
                    "code": "<pre>removeBeginColumnPage(vBeginColumnPage) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed endColumnPage or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vEndColumnPage",
                            "optional": false,
                            "description": "<p>The endColumnPage to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a endColumnPage from the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getEndColumnPages\">endColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/removeEndColumnPage",
                    "code": "<pre>removeEndColumnPage(vEndColumnPage) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed midColumnPage or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vMidColumnPage",
                            "optional": false,
                            "description": "<p>The midColumnPage to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a midColumnPage from the aggregation <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMidColumnPages\">midColumnPages</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/removeMidColumnPage",
                    "code": "<pre>removeMidColumnPage(vMidColumnPage) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setAutoFocus",
                    "visibility": "public",
                    "since": "1.76",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bAutoFocus",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>autoFocus</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getAutoFocus\">autoFocus</a>.</p><p>Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.</p><p>For more information, see <a target=\"_self\" href=\"api/sap.m.NavContainer#methods/autoFocus\">sap.m.NavContainer#autoFocus</a>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setAutoFocus",
                    "code": "<pre>setAutoFocus(bAutoFocus?) : this</pre>"
                },
                {
                    "name": "setBackgroundDesign",
                    "visibility": "public",
                    "since": "1.54",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sBackgroundDesign",
                            "optional": true,
                            "defaultValue": "Transparent",
                            "description": "<p>New value for property <code>backgroundDesign</code></p>",
                            "types": [
                                {
                                    "value": "sap.m.BackgroundDesign",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.BackgroundDesign"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getBackgroundDesign\">backgroundDesign</a>.</p><p>Specifies the background color of the content. The visualization of the different options depends on the used theme.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Transparent</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setBackgroundDesign",
                    "code": "<pre>setBackgroundDesign(sBackgroundDesign?) : this</pre>"
                },
                {
                    "name": "setDefaultTransitionNameBeginColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sDefaultTransitionNameBeginColumn",
                            "optional": true,
                            "defaultValue": "\"slide\"",
                            "description": "<p>New value for property <code>defaultTransitionNameBeginColumn</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameBeginColumn\">defaultTransitionNameBeginColumn</a>.</p><p>Determines the type of the transition/animation to apply for the <code>Begin</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"slide\"</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setDefaultTransitionNameBeginColumn",
                    "code": "<pre>setDefaultTransitionNameBeginColumn(sDefaultTransitionNameBeginColumn?) : this</pre>"
                },
                {
                    "name": "setDefaultTransitionNameEndColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sDefaultTransitionNameEndColumn",
                            "optional": true,
                            "defaultValue": "\"slide\"",
                            "description": "<p>New value for property <code>defaultTransitionNameEndColumn</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameEndColumn\">defaultTransitionNameEndColumn</a>.</p><p>Determines the type of the transition/animation to apply for the <code>End</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"slide\"</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setDefaultTransitionNameEndColumn",
                    "code": "<pre>setDefaultTransitionNameEndColumn(sDefaultTransitionNameEndColumn?) : this</pre>"
                },
                {
                    "name": "setDefaultTransitionNameMidColumn",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sDefaultTransitionNameMidColumn",
                            "optional": true,
                            "defaultValue": "\"slide\"",
                            "description": "<p>New value for property <code>defaultTransitionNameMidColumn</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getDefaultTransitionNameMidColumn\">defaultTransitionNameMidColumn</a>.</p><p>Determines the type of the transition/animation to apply for the <code>Mid</code> column when <code>to()</code> is called without defining the transition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>flip</code>, <code>show</code>, and the names of any registered custom transitions.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"slide\"</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setDefaultTransitionNameMidColumn",
                    "code": "<pre>setDefaultTransitionNameMidColumn(sDefaultTransitionNameMidColumn?) : this</pre>"
                },
                {
                    "name": "setInitialBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oInitialBeginColumnPage",
                            "optional": false,
                            "description": "<p>ID of an element which becomes the new target of this initialBeginColumnPage association; alternatively, an element instance may be given</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the associated <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getInitialBeginColumnPage\">initialBeginColumnPage</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setInitialBeginColumnPage",
                    "code": "<pre>setInitialBeginColumnPage(oInitialBeginColumnPage) : this</pre>"
                },
                {
                    "name": "setInitialEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oInitialEndColumnPage",
                            "optional": false,
                            "description": "<p>ID of an element which becomes the new target of this initialEndColumnPage association; alternatively, an element instance may be given</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the associated <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getInitialEndColumnPage\">initialEndColumnPage</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setInitialEndColumnPage",
                    "code": "<pre>setInitialEndColumnPage(oInitialEndColumnPage) : this</pre>"
                },
                {
                    "name": "setInitialMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oInitialMidColumnPage",
                            "optional": false,
                            "description": "<p>ID of an element which becomes the new target of this initialMidColumnPage association; alternatively, an element instance may be given</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the associated <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getInitialMidColumnPage\">initialMidColumnPage</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setInitialMidColumnPage",
                    "code": "<pre>setInitialMidColumnPage(oInitialMidColumnPage) : this</pre>"
                },
                {
                    "name": "setLandmarkInfo",
                    "visibility": "public",
                    "since": "1.95",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLandmarkInfo",
                            "optional": false,
                            "description": "<p>The landmarkInfo to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLandmarkInfo\">landmarkInfo</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setLandmarkInfo",
                    "code": "<pre>setLandmarkInfo(oLandmarkInfo) : this</pre>"
                },
                {
                    "name": "setLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sLayout",
                            "optional": true,
                            "defaultValue": "OneColumn",
                            "description": "<p>New value for property <code>layout</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.LayoutType",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.LayoutType"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLayout\">layout</a>.</p><p>Determines the layout of the control - number of visible columns and their relative sizes.</p><p>For more details, see <a target=\"_self\" href=\"topic/3b9f760da5b64adf8db7f95247879086\">Types of Layout</a> in the documentation.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>OneColumn</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setLayout",
                    "code": "<pre>setLayout(sLayout?) : this</pre>"
                },
                {
                    "name": "setRestoreFocusOnBackNavigation",
                    "visibility": "public",
                    "since": "1.77",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bRestoreFocusOnBackNavigation",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>restoreFocusOnBackNavigation</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getRestoreFocusOnBackNavigation\">restoreFocusOnBackNavigation</a>.</p><p>Determines whether the focus is restored to the last known when navigating back to a prevously opened column, for example, upon closing of the end column and being transfered back to the mid column.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/setRestoreFocusOnBackNavigation",
                    "code": "<pre>setRestoreFocusOnBackNavigation(bRestoreFocusOnBackNavigation?) : this</pre>"
                },
                {
                    "name": "showPlaceholder",
                    "visibility": "restricted",
                    "allowedFor": [
                        "SAPUI5 Distribution Layer Libraries"
                    ],
                    "since": "1.91",
                    "parameters": [
                        {
                            "name": "mSettings",
                            "optional": false,
                            "description": "<p>Object containing the aggregation name</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "aggregation",
                            "optional": false,
                            "description": "<p>The aggregation name to decide on which column/container the placeholder should be shown</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mSettings.aggregation",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Shows the placeholder on the corresponding column for the provided aggregation name.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/showPlaceholder",
                    "code": "<pre>showPlaceholder(mSettings) : void</pre>"
                },
                {
                    "name": "to",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPageId",
                            "optional": false,
                            "description": "<p>The screen to which we are navigating to. The ID or the control itself can be given.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "sTransitionName",
                            "optional": true,
                            "defaultValue": "slide",
                            "description": "<p>The type of the transition/animation to apply. Options are: \"slide\" (horizontal movement from the right), \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.</p><p>None of the standard transitions is currently making use of any given transition parameters.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        },
                        {
                            "name": "oData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page. The BeforeShow event on the target page will contain this data object as data property.</p><p>Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.</p><p>When the transitionParameters object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.</p><p>For a proper parameter order, the \"data\" parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").</p><p>NOTE: It depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates to the given page inside the FlexibleColumnLayout. Columns are scanned for the page in the following order: <code>Begin</code>, <code>Mid</code>, <code>End</code>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/to",
                    "code": "<pre>to(sPageId, sTransitionName?, oData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "toBeginColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPageId",
                            "optional": false,
                            "description": "<p>The screen to which drilldown should happen. The ID or the control itself can be given.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "sTransitionName",
                            "optional": true,
                            "defaultValue": "slide",
                            "description": "<p>The type of the transition/animation to apply. Options are: \"slide\" (horizontal movement from the right), \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.</p><p>None of the standard transitions is currently making use of any given transition parameters.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        },
                        {
                            "name": "oData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page. The BeforeShow event on the target page will contain this data object as data property.</p><p>Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.</p><p>When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.</p><p>For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates to a given Begin column page.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/toBeginColumnPage",
                    "code": "<pre>toBeginColumnPage(sPageId, sTransitionName?, oData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "toEndColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPageId",
                            "optional": false,
                            "description": "<p>The screen to which drilldown should happen. The ID or the control itself can be given.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "sTransitionName",
                            "optional": true,
                            "defaultValue": "slide",
                            "description": "<p>The type of the transition/animation to apply. Options are: \"slide\" (horizontal movement from the right), \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.</p><p>None of the standard transitions is currently making use of any given transition parameters.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        },
                        {
                            "name": "oData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page. The BeforeShow event on the target page will contain this data object as data property.</p><p>Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.</p><p>When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.</p><p>For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates to a given End column page.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/toEndColumnPage",
                    "code": "<pre>toEndColumnPage(sPageId, sTransitionName?, oData, oTransitionParameters) : this</pre>"
                },
                {
                    "name": "toMidColumnPage",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> instance</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPageId",
                            "optional": false,
                            "description": "<p>The screen to which drilldown should happen. The ID or the control itself can be given.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "sTransitionName",
                            "optional": true,
                            "defaultValue": "slide",
                            "description": "<p>The type of the transition/animation to apply. Options are: \"slide\" (horizontal movement from the right), \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.</p><p>None of the standard transitions is currently making use of any given transition parameters.</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        },
                        {
                            "name": "oData",
                            "optional": false,
                            "description": "<p>This optional object can carry any payload data which should be made available to the target page. The BeforeShow event on the target page will contain this data object as data property.</p><p>Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.</p><p>When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oTransitionParameters",
                            "optional": false,
                            "description": "<p>This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.</p><p>For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").</p><p>NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Navigates to a given Mid column page.</p>",
                    "href": "api/sap.f.FlexibleColumnLayout#methods/toMidColumnPage",
                    "code": "<pre>toMidColumnPage(sPageId, sTransitionName?, oData, oTransitionParameters) : this</pre>"
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayout",
            "nodes": [
                {
                    "name": "sap.f.FlexibleColumnLayout.LayoutHistory",
                    "description": "",
                    "href": "api/sap.f.FlexibleColumnLayout.LayoutHistory"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.FlexibleColumnLayout",
            "subTitle": "",
            "docuLink": "59a0e11712e84a648bb990a1dba76bc7",
            "docuLinkText": " Flexible Column Layout",
            "uxGuidelinesLink": "https://experience.sap.com/fiori-design-web/flexible-column-layout",
            "uxGuidelinesLinkText": "Flexible Column Layout"
        },
        {
            "kind": "class",
            "name": "sap.f.FlexibleColumnLayout.LayoutHistory",
            "basename": "LayoutHistory",
            "resource": "sap/f/FlexibleColumnLayout.js",
            "module": "sap/f/FlexibleColumnLayout",
            "export": "LayoutHistory",
            "static": true,
            "visibility": "restricted",
            "allowedFor": [
                "sap.f.FlexibleColumnLayoutSemanticHelper"
            ],
            "constructor": {
                "visibility": "restricted",
                "allowedFor": [
                    "sap.f.FlexibleColumnLayoutSemanticHelper"
                ],
                "description": "<p>Layout history helper class.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.FlexibleColumnLayout.LayoutHistory()</pre>"
            },
            "displayName": "sap.f.FlexibleColumnLayout.LayoutHistory",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.FlexibleColumnLayout.LayoutHistory",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
            "basename": "FlexibleColumnLayoutAccessibleLandmarkInfo",
            "resource": "sap/f/FlexibleColumnLayoutAccessibleLandmarkInfo.js",
            "module": "sap/f/FlexibleColumnLayoutAccessibleLandmarkInfo",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.95",
            "extends": "sap.ui.core.Element",
            "description": "<p>Settings for accessible landmarks which can be applied to the container elements of a <code>sap.f.FlexibleColumnLayout</code> control. For example, these landmarks are used by assistive technologies (such as screen readers) to provide a meaningful columns overview.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "firstColumnBackArrowLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of the back arrow of the first column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getFirstColumnBackArrowLabel",
                            "setFirstColumnBackArrowLabel"
                        ]
                    },
                    {
                        "name": "firstColumnLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of the first column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getFirstColumnLabel",
                            "setFirstColumnLabel"
                        ]
                    },
                    {
                        "name": "lastColumnForwardArrowLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of forward arrow of the last column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getLastColumnForwardArrowLabel",
                            "setLastColumnForwardArrowLabel"
                        ]
                    },
                    {
                        "name": "lastColumnLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of the last column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getLastColumnLabel",
                            "setLastColumnLabel"
                        ]
                    },
                    {
                        "name": "middleColumnBackArrowLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of back arrow of the middle column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getMiddleColumnBackArrowLabel",
                            "setMiddleColumnBackArrowLabel"
                        ]
                    },
                    {
                        "name": "middleColumnForwardArrowLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of forward arrow of the middle column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getMiddleColumnForwardArrowLabel",
                            "setMiddleColumnForwardArrowLabel"
                        ]
                    },
                    {
                        "name": "middleColumnLabel",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Text that describes the landmark of the middle column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                        "methods": [
                            "getMiddleColumnLabel",
                            "setMiddleColumnLabel"
                        ]
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new element, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new element</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo</code> element.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Element#methods/sap.ui.core.Element.extend\">sap.ui.core.Element.extend</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.extend",
                    "code": "<pre>sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getFirstColumnBackArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>firstColumnBackArrowLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getFirstColumnBackArrowLabel\">firstColumnBackArrowLabel</a>.</p><p>Text that describes the landmark of the back arrow of the first column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getFirstColumnBackArrowLabel",
                    "code": "<pre>getFirstColumnBackArrowLabel() : string</pre>"
                },
                {
                    "name": "getFirstColumnLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>firstColumnLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getFirstColumnLabel\">firstColumnLabel</a>.</p><p>Text that describes the landmark of the first column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getFirstColumnLabel",
                    "code": "<pre>getFirstColumnLabel() : string</pre>"
                },
                {
                    "name": "getLastColumnForwardArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>lastColumnForwardArrowLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getLastColumnForwardArrowLabel\">lastColumnForwardArrowLabel</a>.</p><p>Text that describes the landmark of forward arrow of the last column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getLastColumnForwardArrowLabel",
                    "code": "<pre>getLastColumnForwardArrowLabel() : string</pre>"
                },
                {
                    "name": "getLastColumnLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>lastColumnLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getLastColumnLabel\">lastColumnLabel</a>.</p><p>Text that describes the landmark of the last column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getLastColumnLabel",
                    "code": "<pre>getLastColumnLabel() : string</pre>"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.getMetadata",
                    "code": "<pre>sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getMiddleColumnBackArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>middleColumnBackArrowLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnBackArrowLabel\">middleColumnBackArrowLabel</a>.</p><p>Text that describes the landmark of back arrow of the middle column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnBackArrowLabel",
                    "code": "<pre>getMiddleColumnBackArrowLabel() : string</pre>"
                },
                {
                    "name": "getMiddleColumnForwardArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>middleColumnForwardArrowLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnForwardArrowLabel\">middleColumnForwardArrowLabel</a>.</p><p>Text that describes the landmark of forward arrow of the middle column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnForwardArrowLabel",
                    "code": "<pre>getMiddleColumnForwardArrowLabel() : string</pre>"
                },
                {
                    "name": "getMiddleColumnLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>middleColumnLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnLabel\">middleColumnLabel</a>.</p><p>Text that describes the landmark of the middle column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnLabel",
                    "code": "<pre>getMiddleColumnLabel() : string</pre>"
                },
                {
                    "name": "setFirstColumnBackArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sFirstColumnBackArrowLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>firstColumnBackArrowLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getFirstColumnBackArrowLabel\">firstColumnBackArrowLabel</a>.</p><p>Text that describes the landmark of the back arrow of the first column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setFirstColumnBackArrowLabel",
                    "code": "<pre>setFirstColumnBackArrowLabel(sFirstColumnBackArrowLabel?) : this</pre>"
                },
                {
                    "name": "setFirstColumnLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sFirstColumnLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>firstColumnLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getFirstColumnLabel\">firstColumnLabel</a>.</p><p>Text that describes the landmark of the first column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setFirstColumnLabel",
                    "code": "<pre>setFirstColumnLabel(sFirstColumnLabel?) : this</pre>"
                },
                {
                    "name": "setLastColumnForwardArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sLastColumnForwardArrowLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>lastColumnForwardArrowLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getLastColumnForwardArrowLabel\">lastColumnForwardArrowLabel</a>.</p><p>Text that describes the landmark of forward arrow of the last column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setLastColumnForwardArrowLabel",
                    "code": "<pre>setLastColumnForwardArrowLabel(sLastColumnForwardArrowLabel?) : this</pre>"
                },
                {
                    "name": "setLastColumnLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sLastColumnLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>lastColumnLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getLastColumnLabel\">lastColumnLabel</a>.</p><p>Text that describes the landmark of the last column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setLastColumnLabel",
                    "code": "<pre>setLastColumnLabel(sLastColumnLabel?) : this</pre>"
                },
                {
                    "name": "setMiddleColumnBackArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sMiddleColumnBackArrowLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>middleColumnBackArrowLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnBackArrowLabel\">middleColumnBackArrowLabel</a>.</p><p>Text that describes the landmark of back arrow of the middle column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setMiddleColumnBackArrowLabel",
                    "code": "<pre>setMiddleColumnBackArrowLabel(sMiddleColumnBackArrowLabel?) : this</pre>"
                },
                {
                    "name": "setMiddleColumnForwardArrowLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sMiddleColumnForwardArrowLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>middleColumnForwardArrowLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnForwardArrowLabel\">middleColumnForwardArrowLabel</a>.</p><p>Text that describes the landmark of forward arrow of the middle column in the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setMiddleColumnForwardArrowLabel",
                    "code": "<pre>setMiddleColumnForwardArrowLabel(sMiddleColumnForwardArrowLabel?) : this</pre>"
                },
                {
                    "name": "setMiddleColumnLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sMiddleColumnLabel",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>middleColumnLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/getMiddleColumnLabel\">middleColumnLabel</a>.</p><p>Text that describes the landmark of the middle column of the corresponding <code>sap.f.FlexibleColumnLayout</code> control.</p><p>If not set, a predefined text is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo#methods/setMiddleColumnLabel",
                    "code": "<pre>setMiddleColumnLabel(sMiddleColumnLabel?) : this</pre>"
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.FlexibleColumnLayoutAccessibleLandmarkInfo",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.FlexibleColumnLayoutSemanticHelper",
            "basename": "FlexibleColumnLayoutSemanticHelper",
            "resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
            "module": "sap/f/FlexibleColumnLayoutSemanticHelper",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "description": "<p>Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout</code>-based app.</p><p><b>Note:</b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout</code>, but exists for convenience only.</p><p><ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> revolves around two main methods: <li><code>getCurrentUIState</code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout</code> column, based on the current control state (number and visibility of columns, layout, etc..)</li> <li><code>getNextUIState</code>Suggests which <code>layout</code> to use when navigating to another view level (e.g. from one view to two views).</li></ul></p><p>Sample usage of the class:</p><p><pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n</code>\n</pre></p><p>Calling <code>getCurrentUIState()</code> will return information which action buttons (Close, FullScreen, ExitFullScreen) must be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.</p><p>Calling <code>getNextUIState(2)</code> will return information about the expected layout and action buttons if the application should display three views (list-detail-detail), based on the current state.</p><p>Similarly, calling <code>getNextUIState(0)</code> will return information about the expected layout and action buttons if the application should display the initial view only (list), based on the current state.</p><p>For more information, see <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/getCurrentUIState\">sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState</a> and <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/getNextUIState\">sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState</a></p>",
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "oFlexibleColumnLayout",
                        "optional": false,
                        "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> object whose state will be manipulated.</p>",
                        "phoneName": "oFlexibleColumnLayout",
                        "depth": 0,
                        "types": [
                            {
                                "name": "sap.f.FlexibleColumnLayout",
                                "linkEnabled": true
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "oSettings",
                        "optional": false,
                        "description": "<p>Determines the rules that will be used by the helper.</p>",
                        "phoneName": "oSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "defaultTwoColumnLayoutType",
                        "optional": true,
                        "defaultValue": "sap.f.LayoutType.TwoColumnsBeginExpanded",
                        "description": "<p>Determines what two-column layout type will be suggested by default: <code>sap.f.LayoutType.TwoColumnsBeginExpanded</code> or <code>sap.f.LayoutType.TwoColumnsMidExpanded</code>.</p>",
                        "phoneName": "oSettings.defaultTwoColumnLayoutType",
                        "depth": 1,
                        "types": [
                            {
                                "name": "sap.f.LayoutType",
                                "linkEnabled": true
                            }
                        ]
                    },
                    {
                        "name": "defaultThreeColumnLayoutType",
                        "optional": true,
                        "defaultValue": "sap.f.LayoutType.ThreeColumnsMidExpanded",
                        "description": "<p>Determines what three-column layout type will be suggested by default: <code>sap.f.LayoutType.ThreeColumnsMidExpanded</code> or <code>sap.f.LayoutType.ThreeColumnsEndExpanded</code>.</p>",
                        "phoneName": "oSettings.defaultThreeColumnLayoutType",
                        "depth": 1,
                        "types": [
                            {
                                "name": "sap.f.LayoutType",
                                "linkEnabled": true
                            }
                        ]
                    },
                    {
                        "name": "maxColumnsCount",
                        "optional": false,
                        "description": "<p>Determines the maximum number of columns that will be displayed side by side.</p><p><ul>Possible values:</p><p><li>Value of <code>1</code> only single-column layouts will be suggested.</li></p><p><li>Value of <code>2</code> Up to 2-column layouts will be suggested.</li></p><p><li>Value of <code>3</code> (default) - Up to 3-column layouts will be suggested.</li></ul></p>",
                        "phoneName": "oSettings.maxColumnsCount",
                        "depth": 1,
                        "types": [
                            {
                                "name": "int",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "initialColumnsCount",
                        "optional": false,
                        "description": "<p>Determines whether a single-column or a 2-column layout will be suggested for logical level 0.</p><p><ul>Possible values:</p><p><li>Value of <code>1</code> (default) - A single-column layout will be suggested for logical level 0.</li></p><p><li>Value of <code>2</code> - A 2-column layout will be suggested for logical level 0.</li></ul></p>",
                        "phoneName": "oSettings.initialColumnsCount",
                        "depth": 1,
                        "types": [
                            {
                                "name": "int",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mode",
                        "optional": true,
                        "description": "<p><b>Deprecated as of version 1.50</b>, use <code>maxColumnsCount</code> param instead.</p><p>Determines the suggested layout types: <code>Normal</code> (3-column layouts), <code>MasterDetail</code> (2-column layouts for the first two pages, all other pages will open in fullscreen), and <code>SingleColumn</code> (one page at a time only).</p>",
                        "phoneName": "oSettings.mode",
                        "depth": 1,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for an sap.f.FlexibleColumnLayoutSemanticHelper.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.FlexibleColumnLayoutSemanticHelper(oFlexibleColumnLayout, oSettings)</pre>"
            },
            "methods": [
                {
                    "name": "getCurrentUIState",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                        "description": "<p>The object describing the current UI state</p>",
                        "types": [
                            {
                                "value": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                                "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns an object describing the current state of the control and the expected action buttons for each column.</p><p><b>Note:</b> This method relies on the internal <code>FlexibleColumnLayout</code> reference to be rendered in the DOM tree. For convenience, use methods <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/isDOMReady\">sap.f.FlexibleColumnLayoutSemanticHelper#isDOMReady</a> and <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/whenDOMReady\">sap.f.FlexibleColumnLayoutSemanticHelper#whenDOMReady</a>.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/getCurrentUIState",
                    "code": "<pre>getCurrentUIState() : sap.f.FlexibleColumnLayoutSemanticHelper.UIState</pre>"
                },
                {
                    "name": "getDefaultLayouts",
                    "visibility": "public",
                    "returnValue": {
                        "type": "object",
                        "description": "<p>The object describing the default layout types for the different numbers of columns</p>",
                        "types": [
                            {
                                "value": "object"
                            }
                        ]
                    },
                    "description": "<p>Returns the default layout types for the different numbers of columns.</p><p><ul>The returned object has the following fields: <li>defaultLayoutType - the layout that will be suggested by default when only 1 column needs to be shown</li> <li>defaultTwoColumnLayoutType - the layout that will be suggested by default when 2 columns have to be shown side by side</li> <li>defaultThreeColumnLayoutType - the layout that will be suggested by default when 3 columns have to be shown side by side</li></ul></p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/getDefaultLayouts",
                    "code": "<pre>getDefaultLayouts() : object</pre>"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.f.FlexibleColumnLayoutSemanticHelper",
                        "description": "<p>The <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> instance</p>",
                        "types": [
                            {
                                "value": "sap.f.FlexibleColumnLayoutSemanticHelper",
                                "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFlexibleColumnLayout",
                            "optional": false,
                            "description": "<p>The <code>sap.f.FlexibleColumnLayout</code> object to get a semantic helper instance for</p>",
                            "types": [
                                {
                                    "value": "sap.f.FlexibleColumnLayout",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.FlexibleColumnLayout"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oSettings",
                            "optional": true,
                            "description": "<p>An optional settings object to be used when creating the instance. <b>Note:</b> will be considered only for the first <code>getInstanceFor</code> call for the given <code>sap.f.FlexibleColumnLayout</code> object.</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Returns an instance of the <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> class for a given <code>sap.f.FlexibleColumnLayout</code> object.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor",
                    "code": "<pre>sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(oFlexibleColumnLayout, oSettings?) : sap.f.FlexibleColumnLayoutSemanticHelper</pre>"
                },
                {
                    "name": "getNextUIState",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                        "description": "<p>The object describing the next UI state</p>",
                        "types": [
                            {
                                "value": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                                "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iNextLevel",
                            "optional": false,
                            "description": "<p>the view level that should be represented. 0 means initial (list only), 1 - list-detail, 2 - list-detail-detail, 3 and above - subsequent views</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Returns an object, describing the state that the control will have after navigating to a different view level.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/getNextUIState",
                    "code": "<pre>getNextUIState(iNextLevel) : sap.f.FlexibleColumnLayoutSemanticHelper.UIState</pre>"
                },
                {
                    "name": "isDOMReady",
                    "visibility": "public",
                    "since": "1.72",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>true if the associated <code>FlexibleColumnLayout</code> is rendered</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Returns <code>true</code> if internal <code>FlexibleColumnLayout</code> reference is rendered in the DOM tree.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/isDOMReady",
                    "code": "<pre>isDOMReady() : boolean</pre>"
                },
                {
                    "name": "isReady",
                    "visibility": "public",
                    "since": "1.72",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>true if this helper's API reliability criteria are met</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Abstract wrapper for <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/isDOMReady\">sap.f.FlexibleColumnLayoutSemanticHelper#isDOMReady</a>. Returns <code>true</code> if criteria are met for the APIs in this helper to be used.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/isReady",
                    "code": "<pre>isReady() : boolean</pre>"
                },
                {
                    "name": "whenDOMReady",
                    "visibility": "public",
                    "since": "1.72",
                    "returnValue": {
                        "type": "Promise",
                        "description": "<p>A promise that resolves after <code>FlexibleColumnLayout</code> is rendered</p>",
                        "types": [
                            {
                                "value": "Promise"
                            }
                        ]
                    },
                    "description": "<p>Returns promise which can be used to find out when the internal <code>FlexibleColumnLayout</code> is rendered. This is needed because methods in <code>FlexibleColumnLayout</code> rely on the control being rendered.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/whenDOMReady",
                    "code": "<pre>whenDOMReady() : Promise</pre>"
                },
                {
                    "name": "whenReady",
                    "visibility": "public",
                    "since": "1.72",
                    "returnValue": {
                        "type": "Promise",
                        "description": "<p>A promise that resolves after internal criteria are met</p>",
                        "types": [
                            {
                                "value": "Promise"
                            }
                        ]
                    },
                    "description": "<p>Returns promise which can be used to find out when internal criteria for this helper's API reliability are met.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper#methods/whenReady",
                    "code": "<pre>whenReady() : Promise</pre>"
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutSemanticHelper",
            "nodes": [
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions",
                    "description": "<p>The configuration of the navigation actions in the columns.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes",
                    "description": "<p>Represents the relative percentage sizes of all columns as integers.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility",
                    "description": "<p>Represents the visibility of the columns.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets",
                    "description": "<p>Configures the target layouts of the navigation action buttons in a column.</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets"
                },
                {
                    "name": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
                    "description": "<p>Configuration of the state of the <code>FlexibleColumnLayout</code> control and the expected action buttons for each column.\n</p>",
                    "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.UIState"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.FlexibleColumnLayoutSemanticHelper",
            "subTitle": ""
        },
        {
            "kind": "typedef",
            "name": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions",
            "basename": "ColumnsNavigationActions",
            "resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
            "module": "sap/f/FlexibleColumnLayoutSemanticHelper",
            "static": true,
            "visibility": "public",
            "description": "<p><p>The configuration of the navigation actions in the columns.</p></p>",
            "properties": [
                {
                    "name": "midColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>Configuration of the navigation actions of the mid column.</p>",
                    "types": [
                        {
                            "value": "sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets",
                            "linkEnabled": true,
                            "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets"
                        }
                    ]
                },
                {
                    "name": "endColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>Configuration of the navigation actions of the end column.</p>",
                    "types": [
                        {
                            "value": "sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets",
                            "linkEnabled": true,
                            "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets"
                        }
                    ]
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions",
            "subTitle": ""
        },
        {
            "kind": "typedef",
            "name": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes",
            "basename": "ColumnsSizes",
            "resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
            "module": "sap/f/FlexibleColumnLayoutSemanticHelper",
            "static": true,
            "visibility": "public",
            "description": "<p><p>Represents the relative percentage sizes of all columns as integers.</p></p>",
            "properties": [
                {
                    "name": "beginColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The relative percentage width of the begin column as integer.</p>",
                    "types": [
                        {
                            "value": "number"
                        }
                    ]
                },
                {
                    "name": "midColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The relative percentage width of the mid column as integer.</p>",
                    "types": [
                        {
                            "value": "number"
                        }
                    ]
                },
                {
                    "name": "endColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The relative percentage width of the end column as integer.</p>",
                    "types": [
                        {
                            "value": "number"
                        }
                    ]
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes",
            "subTitle": ""
        },
        {
            "kind": "typedef",
            "name": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility",
            "basename": "ColumnsVisibility",
            "resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
            "module": "sap/f/FlexibleColumnLayoutSemanticHelper",
            "static": true,
            "visibility": "public",
            "description": "<p><p>Represents the visibility of the columns.</p></p>",
            "properties": [
                {
                    "name": "beginColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The visibility of the begin column.</p>",
                    "types": [
                        {
                            "value": "boolean"
                        }
                    ]
                },
                {
                    "name": "midColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The visibility of the mid column.</p>",
                    "types": [
                        {
                            "value": "boolean"
                        }
                    ]
                },
                {
                    "name": "endColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The visibility of the end column.</p>",
                    "types": [
                        {
                            "value": "boolean"
                        }
                    ]
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility",
            "subTitle": ""
        },
        {
            "kind": "typedef",
            "name": "sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets",
            "basename": "NavigationActionsTargets",
            "resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
            "module": "sap/f/FlexibleColumnLayoutSemanticHelper",
            "static": true,
            "visibility": "public",
            "description": "<p><p>Configures the target layouts of the navigation action buttons in a column.</p></p>",
            "properties": [
                {
                    "name": "fullScreen",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The target <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLayout\">layout</a> when the <code>fullscreen</code> navigation action button is pressed. If null, then the respective action button should not be shown.</p>",
                    "types": [
                        {
                            "value": "string"
                        },
                        {
                            "value": "null"
                        }
                    ]
                },
                {
                    "name": "exitFullScreen",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The target <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLayout\">layout</a> when the <code>exitFullScreen</code> navigation action button is pressed. If null, then the respective action button should not be shown.</p>",
                    "types": [
                        {
                            "value": "string"
                        },
                        {
                            "value": "null"
                        }
                    ]
                },
                {
                    "name": "closeColumn",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The target <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLayout\">layout</a> when the <code>closeColumn</code> navigation action button is pressed. If null, then the respective action button should not be shown.</p>",
                    "types": [
                        {
                            "value": "string"
                        },
                        {
                            "value": "null"
                        }
                    ]
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.FlexibleColumnLayoutSemanticHelper.NavigationActionsTargets",
            "subTitle": ""
        },
        {
            "kind": "typedef",
            "name": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
            "basename": "UIState",
            "resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
            "module": "sap/f/FlexibleColumnLayoutSemanticHelper",
            "static": true,
            "visibility": "public",
            "description": "<p><p>Configuration of the state of the <code>FlexibleColumnLayout</code> control and the expected action buttons for each column.</p><p>Example value:</p><p><pre>\n <code>\n {\n\t   \"layout\":\"ThreeColumnsMidExpanded\",\n\t   \"maxColumnsCount\":3,\n\t   \"columnsSizes\":{\n\t\t  \"beginColumn\":25,\n\t\t  \"midColumn\":50,\n\t\t  \"endColumn\":25\n\t   },\n\t   \"columnsVisibility\":{\n\t\t  \"beginColumn\":true,\n\t\t  \"midColumn\":true,\n\t\t  \"endColumn\":true\n\t   },\n\t   \"isFullScreen\":false,\n\t   \"isLogicallyFullScreen\":false,\n\t   \"actionButtonsInfo\":{\n\t\t  \"midColumn\":{\n\t\t\t \"fullScreen\":null,\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":null\n\t\t  },\n\t\t  \"endColumn\":{\n\t\t\t \"fullScreen\":\"EndColumnFullScreen\",\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":\"TwoColumnsBeginExpanded\"\n\t\t  }\n\t   }\n\t}\n </code>\n </pre></p></p>",
            "properties": [
                {
                    "name": "layout",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The value of the <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getLayout\">layout</a> property.</p>",
                    "types": [
                        {
                            "value": "sap.f.LayoutType",
                            "linkEnabled": true,
                            "href": "api/sap.f.LayoutType"
                        }
                    ]
                },
                {
                    "name": "maxColumnsCount",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The maximum number of columns that can be displayed at once based on the control width. See <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout#methods/getMaxColumnsCount\">sap.f.FlexibleColumnLayout#getMaxColumnsCount</a></p>",
                    "types": [
                        {
                            "value": "number"
                        }
                    ]
                },
                {
                    "name": "columnsSizes",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>Represents the relative percentage sizes of all columns as integers.</p>",
                    "types": [
                        {
                            "value": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes",
                            "linkEnabled": true,
                            "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsSizes"
                        }
                    ]
                },
                {
                    "name": "columnsVisibility",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>Represents the visibility of the columns.</p>",
                    "types": [
                        {
                            "value": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility",
                            "linkEnabled": true,
                            "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsVisibility"
                        }
                    ]
                },
                {
                    "name": "isFullScreen",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The value is <code>true</code> if only one column is visible at the moment, <code>false</code> otherwise.</p><p><b>Note:</b> This may be due to small screen size (phone) or due to a layout, for which a single column takes up the whole width.</p>",
                    "types": [
                        {
                            "value": "boolean"
                        }
                    ]
                },
                {
                    "name": "isLogicallyFullScreen",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The value is <code>true</code> if the current <code>layout</code> is one of the following: <code>sap.f.LayoutType.OneColumn, sap.f.LayoutType.MidColumnFullScreen, sap.f.LayoutType.EndColumnFullScreen</code>, <code>false</code> otherwise.</p><p><b>Note:</b> While <code>isFullScreen</code> can be <code>true</code> for any layout, due to small screen size, <code>isLogicallyFullScreen</code> will only be <code>true</code> for the layout values, listed above.</p>",
                    "types": [
                        {
                            "value": "boolean"
                        }
                    ]
                },
                {
                    "name": "actionButtonsInfo",
                    "optional": true,
                    "visibility": "public",
                    "description": "<p>The configuration of the navigation actions in the columns.</p>",
                    "types": [
                        {
                            "value": "sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions",
                            "linkEnabled": true,
                            "href": "api/sap.f.FlexibleColumnLayoutSemanticHelper.ColumnsNavigationActions"
                        }
                    ]
                }
            ],
            "displayName": "sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.FlexibleColumnLayoutSemanticHelper.UIState",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.GridContainer",
            "basename": "GridContainer",
            "resource": "sap/f/GridContainer.js",
            "module": "sap/f/GridContainer",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.65",
            "extends": "sap.ui.core.Control",
            "implements": [
                "sap.f.dnd.IGridDroppable"
            ],
            "description": "<p>A layout container control used for aligning items with various sizes in a simple grid.</p><h3>Overview</h3><p>The control is used to align tiles, cards and other controls in configuration, such as a home page or a dashboard. It represents a grid layout with specific row and column sizes, in which the items can take any number of rows and columns.</p><p>The number of columns and rows each item takes can be configured with the use of the <code><a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData\">sap.f.GridContainerItemLayoutData</a></code>.</p><p>All rows have the same height and all columns have the same width. Their sizes can be configured with the use of the <code>layout</code> aggregation and <code><a target=\"_self\" href=\"api/sap.f.GridContainerSettings\">sap.f.GridContainerSettings</a></code>.</p><h3>Usage</h3><p><i>When to use</i> <ul> <li>For aligning home page and dashboard items like Tiles and Cards in a simple grid system with equally sized rows and columns.</li> </ul></p><p><i>When not to use</i> <ul> <li>If a more complex layout grid system, where columns and rows may vary in size, is needed.</li> </ul></p><h3>Example:</h3><p> <pre>\n&lt;f:GridContainer&gt;\n\t&lt;f:layout&gt;\n\t\t&lt;f:GridContainerSettings rowSize=&quot;5rem&quot; columnSize=&quot;5rem&quot; gap=&quot;1rem&quot; /&gt;\n\t&lt;/f:layout&gt;\n\t&lt;f:layoutS&gt;\n\t\t&lt;f:GridContainerSettings rowSize=&quot;4rem&quot; columnSize=&quot;4rem&quot; gap=&quot;0.5rem&quot; /&gt;\n\t&lt;/f:layoutS&gt;\n\t&lt;f:items&gt;\n\t\t&lt;GenericTile header=&quot;Sales Fulfillment&quot;&gt;\n\t\t\t&lt;layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData rows=&quot;2&quot; columns=&quot;2&quot; /&gt;\n\t\t\t&lt;/layoutData&gt;\n\t\t&lt;/GenericTile&gt;\n\t\t&lt;w:Card manifest=&quot;url-to-manifest&quot;&gt;\n\t\t\t&lt;w:layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData rows=&quot;6&quot; columns=&quot;3&quot; /&gt;\n\t\t\t&lt;/w:layoutData&gt;\n\t\t&lt;/w:Card&gt;\n\t\t&lt;Panel&gt;\n\t\t\t&lt;layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData columns=&quot;4&quot; /&gt;\n\t\t\t&lt;/layoutData&gt;\n\t\t\t&lt;Text text=&quot;Sales information&quot; /&gt;\n\t\t&lt;/Panel&gt;\n\t&lt;/f:items&gt;\n&lt;/f:GridContainer&gt;\n</pre></p><h3>Drag and drop:</h3><p> Drag and drop is enabled for the <code>GridContainer</code> with enhanced visualization and interaction, better suited for grid items. This is configured by using the <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code>.</p><p>Similar to the <code><a target=\"_self\" href=\"api/sap.ui.core.dnd.DropInfo\">sap.ui.core.dnd.DropInfo</a></code>, <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code> has to be added to the <code>dragDropConfig</code> aggregation, by using <code><a target=\"_self\" href=\"api/sap.ui.core.Element#methods/addDragDropConfig\">sap.ui.core.Element#addDragDropConfig</a></code>.</p><p>Both <code><a target=\"_self\" href=\"api/sap.ui.core.dnd.DropInfo\">sap.ui.core.dnd.DropInfo</a></code> and <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code> can be used to configure drag and drop. The difference is that the <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code> will provide a drop indicator, which mimics the size of the dragged item and shows the potential drop position inside the grid.</p><p>Drag and drop is enabled via keyboard using <code>Ctrl</code> + arrow keys (Windows) and <code>Control</code> + arrow keys (Mac OS).</p><h3>Keyboard Navigation:</h3><p> <code>GridContainer</code> provides support for two-dimensional keyboard navigation through its contained controls. Navigating up/down or left/right using the arrow keys follows the configurable two-dimensional grid mesh. This provides stable navigation paths in the cases when there are items of different sizes. When the user presses an arrow key in a direction outward of the <code>GridContainer</code>, a <code>borderReached</code> event will be fired. The implementation of the <code>borderReached</code> event allows the application developer to control where the focus goes, and depending on the surrounding layout pass the focus to a specific place in a neighboring <code>GridContainer</code> using the method <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/focusItemByDirection\">#focusItemByDirection</a>.<br><br><span>Documentation links:</span><ul><li><a target=\"_self\" href=\"topic/32d4b9c2b981425dbc374d3e9d5d0c2e\">Grid Controls</a></li><li><a target=\"_self\" href=\"topic/5b46b03f024542ba802d99d67bc1a3f4\">Cards</a></li><li><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></li></ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "allowDenseFill",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Increases the density when arranging the items. Smaller items will take up all of the available space, ignoring their order.</p><p><b>Note:</b> The order of the items is ignored. An item which is normally at the bottom, can appear on top.</p>",
                        "methods": [
                            "getAllowDenseFill",
                            "setAllowDenseFill"
                        ]
                    },
                    {
                        "name": "containerQuery",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>If set to <code>true</code> the current range (large, medium or small) is defined by the size of the container surrounding the <code>GridContainer</code>, instead of the device screen size (media Query).</p>",
                        "methods": [
                            "getContainerQuery",
                            "setContainerQuery"
                        ]
                    },
                    {
                        "name": "inlineBlockLayout",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Makes the grid items act like an inline-block elements. They will be arranged in rows with height equal to the highest item in the row.</p><p><b>Note:</b> If set to <code>true</code> the properties <code>rowSize</code> for grid layout, and <code>minRows</code> and <code>rows</code> per item will be ignored.</p>",
                        "methods": [
                            "getInlineBlockLayout",
                            "setInlineBlockLayout"
                        ]
                    },
                    {
                        "name": "minHeight",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "2rem",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the minimum height of the grid.</p><p>Allows an empty grid to be available as a drop target.</p>",
                        "methods": [
                            "getMinHeight",
                            "setMinHeight"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "snapToRow",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Should the items stretch to fill the rows that they occupy, or not.</p><p>If set to <code>true</code> the items will stretch.</p>",
                        "methods": [
                            "getSnapToRow",
                            "setSnapToRow"
                        ]
                    },
                    {
                        "name": "width",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "empty string",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the width of the control.</p>",
                        "methods": [
                            "getWidth",
                            "setWidth"
                        ],
                        "linkEnabled": true
                    }
                ],
                "dnd": {
                    "draggable": false,
                    "droppable": true
                },
                "aggregations": [
                    {
                        "name": "_defaultLayout",
                        "singularName": "_defaultLayout",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Default sap.f.GridContainerSettings</p>",
                        "methods": [
                            "get_defaultLayout",
                            "destroy_defaultLayout",
                            "set_defaultLayout"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "items",
                        "singularName": "item",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "dnd": {
                            "draggable": true,
                            "droppable": true
                        },
                        "description": "<p>The items contained by the control.</p>",
                        "methods": [
                            "getItems",
                            "destroyItems",
                            "insertItem",
                            "addItem",
                            "removeItem",
                            "indexOfItem",
                            "removeAllItems"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "layout",
                        "singularName": "layout",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The sap.f.GridContainerSettings applied if no settings are provided for a specific size.</p><p>If no layout is given, a default layout will be used. See the default values for <code>sap.f.GridContainerSettings</code>.</p><p><b>Note:</b> It is not possible to reuse the same instance of <code>GridContainerSettings</code> for several layouts. New instance has to be created for each of them. This is caused by the fact that one object can exist in only a single aggregation.</p>",
                        "methods": [
                            "getLayout",
                            "destroyLayout",
                            "setLayout"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "layoutL",
                        "singularName": "layoutL",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The sap.f.GridContainerSettings applied for size \"L\". Range: 1023px - 1439px.</p>",
                        "methods": [
                            "getLayoutL",
                            "destroyLayoutL",
                            "setLayoutL"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "layoutM",
                        "singularName": "layoutM",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The sap.f.GridContainerSettings applied for size \"M\". Range: 600px - 1023px.</p>",
                        "methods": [
                            "getLayoutM",
                            "destroyLayoutM",
                            "setLayoutM"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "layoutS",
                        "singularName": "layout",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The sap.f.GridContainerSettings applied for size \"S\". Range: 375px - 599px.</p>",
                        "methods": [
                            "getLayoutS",
                            "destroyLayoutS",
                            "setLayoutS"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "layoutXL",
                        "singularName": "layoutXL",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The sap.f.GridContainerSettings applied for size \"XL\". Range: from 1440px.</p>",
                        "methods": [
                            "getLayoutXL",
                            "destroyLayoutXL",
                            "setLayoutXL"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "layoutXS",
                        "singularName": "layoutX",
                        "type": "sap.f.GridContainerSettings",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The sap.f.GridContainerSettings applied for size \"XS\". Range: up to 374px.</p>",
                        "methods": [
                            "getLayoutXS",
                            "destroyLayoutXS",
                            "setLayoutXS"
                        ],
                        "linkEnabled": true
                    }
                ],
                "defaultAggregation": "items",
                "associations": [
                    {
                        "name": "ariaDescribedBy",
                        "singularName": "ariaDescribedBy",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).</p>",
                        "methods": [
                            "getAriaDescribedBy",
                            "addAriaDescribedBy",
                            "removeAriaDescribedBy",
                            "removeAllAriaDescribedBy"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "ariaLabelledBy",
                        "singularName": "ariaLabelledBy",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).</p>",
                        "methods": [
                            "getAriaLabelledBy",
                            "addAriaLabelledBy",
                            "removeAriaLabelledBy",
                            "removeAllAriaLabelledBy"
                        ],
                        "linkEnabled": true
                    }
                ],
                "designtime": "sap/f/designtime/GridContainer.designtime"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.GridContainer</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [
                    "{@link topic:32d4b9c2b981425dbc374d3e9d5d0c2e Grid Controls}",
                    "{@link topic:5b46b03f024542ba802d99d67bc1a3f4 Cards}",
                    "{@link sap.f.dnd.GridDropInfo}"
                ],
                "codeExample": "<pre>new sap.f.GridContainer(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "borderReached",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "event",
                            "type": "jQuery.Event",
                            "optional": false,
                            "description": "<p>Event that leads to the focus change.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.event",
                            "linkEnabled": true
                        },
                        {
                            "name": "direction",
                            "type": "sap.f.NavigationDirection",
                            "optional": false,
                            "description": "<p>The navigation direction that is used to reach the border.<br><br><i>Since: 1.85.</i></p>",
                            "since": "1.85",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction",
                            "linkEnabled": true
                        },
                        {
                            "name": "row",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The row index, from which the border is reached.<br><br><i>Since: 1.85.</i></p>",
                            "since": "1.85",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.row"
                        },
                        {
                            "name": "column",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The column index, from which the border is reached.<br><br><i>Since: 1.85.</i></p>",
                            "since": "1.85",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.column"
                        }
                    ],
                    "description": "<p>Fires if the border of the visualizations is reached so that an application can react on this.</p>"
                },
                {
                    "name": "columnsChange",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "columns",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The count of the gird columns.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.columns"
                        }
                    ],
                    "description": "<p>Fired when the grid columns count is changed.</p>"
                },
                {
                    "name": "layoutChange",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "layout",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The name of the newly active layout.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.layout"
                        }
                    ],
                    "description": "<p>Fired when the currently active GridSettings change.</p>"
                }
            ],
            "methods": [
                {
                    "name": "addAriaDescribedBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAriaDescribedBy",
                            "optional": false,
                            "description": "<p>The ariaDescribedBy to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some ariaDescribedBy into the association <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/addAriaDescribedBy",
                    "code": "<pre>addAriaDescribedBy(vAriaDescribedBy) : this</pre>"
                },
                {
                    "name": "addAriaLabelledBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAriaLabelledBy",
                            "optional": false,
                            "description": "<p>The ariaLabelledBy to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some ariaLabelledBy into the association <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaLabelledBy\">ariaLabelledBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/addAriaLabelledBy",
                    "code": "<pre>addAriaLabelledBy(vAriaLabelledBy) : this</pre>"
                },
                {
                    "name": "addItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some item to the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/addItem",
                    "code": "<pre>addItem(oItem) : this</pre>"
                },
                {
                    "name": "attachBorderReached",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.GridContainer</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.GridContainer#events/borderReached\">borderReached</a> event of this <code>sap.f.GridContainer</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.GridContainer</code> itself.</p><p>Fires if the border of the visualizations is reached so that an application can react on this.</p>",
                    "href": "api/sap.f.GridContainer#methods/attachBorderReached",
                    "code": "<pre>attachBorderReached(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachColumnsChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.GridContainer</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.GridContainer#events/columnsChange\">columnsChange</a> event of this <code>sap.f.GridContainer</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.GridContainer</code> itself.</p><p>Fired when the grid columns count is changed.</p>",
                    "href": "api/sap.f.GridContainer#methods/attachColumnsChange",
                    "code": "<pre>attachColumnsChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachLayoutChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.GridContainer</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.GridContainer#events/layoutChange\">layoutChange</a> event of this <code>sap.f.GridContainer</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.GridContainer</code> itself.</p><p>Fired when the currently active GridSettings change.</p>",
                    "href": "api/sap.f.GridContainer#methods/attachLayoutChange",
                    "code": "<pre>attachLayoutChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the items in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyItems",
                    "code": "<pre>destroyItems() : this</pre>"
                },
                {
                    "name": "destroyLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the layout in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayout\">layout</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyLayout",
                    "code": "<pre>destroyLayout() : this</pre>"
                },
                {
                    "name": "destroyLayoutL",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the layoutL in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutL\">layoutL</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyLayoutL",
                    "code": "<pre>destroyLayoutL() : this</pre>"
                },
                {
                    "name": "destroyLayoutM",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the layoutM in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutM\">layoutM</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyLayoutM",
                    "code": "<pre>destroyLayoutM() : this</pre>"
                },
                {
                    "name": "destroyLayoutS",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the layoutS in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutS\">layoutS</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyLayoutS",
                    "code": "<pre>destroyLayoutS() : this</pre>"
                },
                {
                    "name": "destroyLayoutXL",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the layoutXL in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutXL\">layoutXL</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyLayoutXL",
                    "code": "<pre>destroyLayoutXL() : this</pre>"
                },
                {
                    "name": "destroyLayoutXS",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the layoutXS in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutXS\">layoutXS</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/destroyLayoutXS",
                    "code": "<pre>destroyLayoutXS() : this</pre>"
                },
                {
                    "name": "detachBorderReached",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.GridContainer#events/borderReached\">borderReached</a> event of this <code>sap.f.GridContainer</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.GridContainer#methods/detachBorderReached",
                    "code": "<pre>detachBorderReached(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachColumnsChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.GridContainer#events/columnsChange\">columnsChange</a> event of this <code>sap.f.GridContainer</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.GridContainer#methods/detachColumnsChange",
                    "code": "<pre>detachColumnsChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachLayoutChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.GridContainer#events/layoutChange\">layoutChange</a> event of this <code>sap.f.GridContainer</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.GridContainer#methods/detachLayoutChange",
                    "code": "<pre>detachLayoutChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.GridContainer.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.GridContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/sap.f.GridContainer.extend",
                    "code": "<pre>sap.f.GridContainer.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireBorderReached",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "event",
                            "optional": true,
                            "description": "<p>Event that leads to the focus change.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "jQuery.Event",
                                    "linkEnabled": true,
                                    "href": "api/jQuery.Event"
                                }
                            ],
                            "phoneName": "mParameters.event",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>The navigation direction that is used to reach the border.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.f.NavigationDirection",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.NavigationDirection"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        },
                        {
                            "name": "row",
                            "optional": true,
                            "description": "<p>The row index, from which the border is reached.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.row",
                            "defaultValue": ""
                        },
                        {
                            "name": "column",
                            "optional": true,
                            "description": "<p>The column index, from which the border is reached.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.column",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.GridContainer#events/borderReached\">borderReached</a> to attached listeners.</p>",
                    "href": "api/sap.f.GridContainer#methods/fireBorderReached",
                    "code": "<pre>fireBorderReached(mParameters?) : this</pre>"
                },
                {
                    "name": "fireColumnsChange",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "columns",
                            "optional": true,
                            "description": "<p>The count of the gird columns.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.columns",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.GridContainer#events/columnsChange\">columnsChange</a> to attached listeners.</p>",
                    "href": "api/sap.f.GridContainer#methods/fireColumnsChange",
                    "code": "<pre>fireColumnsChange(mParameters?) : this</pre>"
                },
                {
                    "name": "fireLayoutChange",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "layout",
                            "optional": true,
                            "description": "<p>The name of the newly active layout.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.layout",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.GridContainer#events/layoutChange\">layoutChange</a> to attached listeners.</p>",
                    "href": "api/sap.f.GridContainer#methods/fireLayoutChange",
                    "code": "<pre>fireLayoutChange(mParameters?) : this</pre>"
                },
                {
                    "name": "focusItem",
                    "visibility": "public",
                    "since": "1.81",
                    "parameters": [
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The index of the item, which will be focused.</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Focuses the item on the given index. Should be called after successful drop operation.</p><p><b>Note:</b>Should not be called before the <code>GridContainer</code> has been rendered.</p>",
                    "href": "api/sap.f.GridContainer#methods/focusItem",
                    "code": "<pre>focusItem(iIndex) : void</pre>"
                },
                {
                    "name": "focusItemByDirection",
                    "visibility": "public",
                    "since": "1.85",
                    "parameters": [
                        {
                            "name": "sDirection",
                            "optional": false,
                            "description": "<p>The navigation direction.</p>",
                            "types": [
                                {
                                    "value": "sap.f.NavigationDirection",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.NavigationDirection"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iRow",
                            "optional": false,
                            "description": "<p>The row index of the starting position.</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iColumn",
                            "optional": false,
                            "description": "<p>The column index of the starting position.</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Focuses an item in the given direction - up, down, left or right, from the starting position specified by row and column.</p><p>If the direction is up or down, the method focuses the nearest item in the same column, located in the specified direction.</p><p>If the direction is left or right, the method focuses the nearest item at the same row, in the specified direction.</p><p><b>Note:</b>Should be called after the rendering of <code>GridContainer</code> is ready.</p>",
                    "href": "api/sap.f.GridContainer#methods/focusItemByDirection",
                    "code": "<pre>focusItemByDirection(sDirection, iRow, iColumn) : void</pre>"
                },
                {
                    "name": "getActiveLayoutSettings",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "description": "<p>The settings for the current layout</p>",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets the <code>GridContainerSettings</code> for the current layout breakpoint.</p>",
                    "href": "api/sap.f.GridContainer#methods/getActiveLayoutSettings",
                    "code": "<pre>getActiveLayoutSettings() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "getAllowDenseFill",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>allowDenseFill</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAllowDenseFill\">allowDenseFill</a>.</p><p>Increases the density when arranging the items. Smaller items will take up all of the available space, ignoring their order.</p><p><b>Note:</b> The order of the items is ignored. An item which is normally at the bottom, can appear on top.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getAllowDenseFill",
                    "code": "<pre>getAllowDenseFill() : boolean</pre>"
                },
                {
                    "name": "getAriaDescribedBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID[]",
                        "types": [
                            {
                                "value": "sap.ui.core.ID[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Returns array of IDs of the elements which are the current targets of the association <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getAriaDescribedBy",
                    "code": "<pre>getAriaDescribedBy() : sap.ui.core.ID[]</pre>"
                },
                {
                    "name": "getAriaLabelledBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID[]",
                        "types": [
                            {
                                "value": "sap.ui.core.ID[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Returns array of IDs of the elements which are the current targets of the association <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaLabelledBy\">ariaLabelledBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getAriaLabelledBy",
                    "code": "<pre>getAriaLabelledBy() : sap.ui.core.ID[]</pre>"
                },
                {
                    "name": "getContainerQuery",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>containerQuery</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getContainerQuery\">containerQuery</a>.</p><p>If set to <code>true</code> the current range (large, medium or small) is defined by the size of the container surrounding the <code>GridContainer</code>, instead of the device screen size (media Query).</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getContainerQuery",
                    "code": "<pre>getContainerQuery() : boolean</pre>"
                },
                {
                    "name": "getInlineBlockLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>inlineBlockLayout</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getInlineBlockLayout\">inlineBlockLayout</a>.</p><p>Makes the grid items act like an inline-block elements. They will be arranged in rows with height equal to the highest item in the row.</p><p><b>Note:</b> If set to <code>true</code> the properties <code>rowSize</code> for grid layout, and <code>minRows</code> and <code>rows</code> per item will be ignored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getInlineBlockLayout",
                    "code": "<pre>getInlineBlockLayout() : boolean</pre>"
                },
                {
                    "name": "getItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getItems\">items</a>.</p><p>The items contained by the control.</p>",
                    "href": "api/sap.f.GridContainer#methods/getItems",
                    "code": "<pre>getItems() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayout\">layout</a>.</p><p>The sap.f.GridContainerSettings applied if no settings are provided for a specific size.</p><p>If no layout is given, a default layout will be used. See the default values for <code>sap.f.GridContainerSettings</code>.</p><p><b>Note:</b> It is not possible to reuse the same instance of <code>GridContainerSettings</code> for several layouts. New instance has to be created for each of them. This is caused by the fact that one object can exist in only a single aggregation.</p>",
                    "href": "api/sap.f.GridContainer#methods/getLayout",
                    "code": "<pre>getLayout() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "getLayoutL",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutL\">layoutL</a>.</p><p>The sap.f.GridContainerSettings applied for size \"L\". Range: 1023px - 1439px.</p>",
                    "href": "api/sap.f.GridContainer#methods/getLayoutL",
                    "code": "<pre>getLayoutL() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "getLayoutM",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutM\">layoutM</a>.</p><p>The sap.f.GridContainerSettings applied for size \"M\". Range: 600px - 1023px.</p>",
                    "href": "api/sap.f.GridContainer#methods/getLayoutM",
                    "code": "<pre>getLayoutM() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "getLayoutS",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutS\">layoutS</a>.</p><p>The sap.f.GridContainerSettings applied for size \"S\". Range: 375px - 599px.</p>",
                    "href": "api/sap.f.GridContainer#methods/getLayoutS",
                    "code": "<pre>getLayoutS() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "getLayoutXL",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutXL\">layoutXL</a>.</p><p>The sap.f.GridContainerSettings applied for size \"XL\". Range: from 1440px.</p>",
                    "href": "api/sap.f.GridContainer#methods/getLayoutXL",
                    "code": "<pre>getLayoutXL() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "getLayoutXS",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.GridContainerSettings",
                        "types": [
                            {
                                "value": "sap.f.GridContainerSettings",
                                "href": "api/sap.f.GridContainerSettings",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutXS\">layoutXS</a>.</p><p>The sap.f.GridContainerSettings applied for size \"XS\". Range: up to 374px.</p>",
                    "href": "api/sap.f.GridContainer#methods/getLayoutXS",
                    "code": "<pre>getLayoutXS() : sap.f.GridContainerSettings</pre>"
                },
                {
                    "name": "sap.f.GridContainer.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.GridContainer.</p>",
                    "href": "api/sap.f.GridContainer#methods/sap.f.GridContainer.getMetadata",
                    "code": "<pre>sap.f.GridContainer.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getMinHeight",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>minHeight</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getMinHeight\">minHeight</a>.</p><p>Defines the minimum height of the grid.</p><p>Allows an empty grid to be available as a drop target.</p><p>Default value is <code>\"2rem\"</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getMinHeight",
                    "code": "<pre>getMinHeight() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "getNavigationMatrix",
                    "visibility": "restricted",
                    "href": "api/sap.f.GridContainer#methods/getNavigationMatrix",
                    "code": "<pre>getNavigationMatrix() : void</pre>"
                },
                {
                    "name": "getSnapToRow",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>snapToRow</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getSnapToRow\">snapToRow</a>.</p><p>Should the items stretch to fill the rows that they occupy, or not.</p><p>If set to <code>true</code> the items will stretch.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getSnapToRow",
                    "code": "<pre>getSnapToRow() : boolean</pre>"
                },
                {
                    "name": "getWidth",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>width</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getWidth\">width</a>.</p><p>Defines the width of the control.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/getWidth",
                    "code": "<pre>getWidth() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "indexOfItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getItems\">items</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.GridContainer#methods/indexOfItem",
                    "code": "<pre>indexOfItem(oItem) : int</pre>"
                },
                {
                    "name": "insertItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p><code>this</code> to allow method chaining.</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to be inserted; if empty, nothing is inserted.</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position.</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts an item into the aggregation named <code>items</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/insertItem",
                    "code": "<pre>insertItem(oItem, iIndex) : this</pre>"
                },
                {
                    "name": "onItemNavigationBorderReached",
                    "visibility": "restricted",
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": false,
                            "description": "<p>a set of parameters</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires when border of the <code>sap.f.GridContainer</code> is reached.</p>",
                    "href": "api/sap.f.GridContainer#methods/onItemNavigationBorderReached",
                    "code": "<pre>onItemNavigationBorderReached(mParameters) : void</pre>"
                },
                {
                    "name": "removeAllAriaDescribedBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ID[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls in the association named <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/removeAllAriaDescribedBy",
                    "code": "<pre>removeAllAriaDescribedBy() : sap.ui.core.ID[]</pre>"
                },
                {
                    "name": "removeAllAriaLabelledBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ID[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls in the association named <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaLabelledBy\">ariaLabelledBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/removeAllAriaLabelledBy",
                    "code": "<pre>removeAllAriaLabelledBy() : sap.ui.core.ID[]</pre>"
                },
                {
                    "name": "removeAllItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getItems\">items</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.GridContainer#methods/removeAllItems",
                    "code": "<pre>removeAllItems() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAriaDescribedBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "description": "<p>The removed ariaDescribedBy or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAriaDescribedBy",
                            "optional": false,
                            "description": "<p>The ariaDescribedBy to be removed or its index or ID</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes an ariaDescribedBy from the association named <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaDescribedBy\">ariaDescribedBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/removeAriaDescribedBy",
                    "code": "<pre>removeAriaDescribedBy(vAriaDescribedBy) : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "removeAriaLabelledBy",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "description": "<p>The removed ariaLabelledBy or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAriaLabelledBy",
                            "optional": false,
                            "description": "<p>The ariaLabelledBy to be removed or its index or ID</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes an ariaLabelledBy from the association named <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAriaLabelledBy\">ariaLabelledBy</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/removeAriaLabelledBy",
                    "code": "<pre>removeAriaLabelledBy(vAriaLabelledBy) : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "removeItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed item or <code>null</code>.</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vItem",
                            "optional": false,
                            "description": "<p>The item to remove or its index or ID.</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes an item from the aggregation named <code>items</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/removeItem",
                    "code": "<pre>removeItem(vItem) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setAllowDenseFill",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bAllowDenseFill",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>allowDenseFill</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getAllowDenseFill\">allowDenseFill</a>.</p><p>Increases the density when arranging the items. Smaller items will take up all of the available space, ignoring their order.</p><p><b>Note:</b> The order of the items is ignored. An item which is normally at the bottom, can appear on top.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setAllowDenseFill",
                    "code": "<pre>setAllowDenseFill(bAllowDenseFill?) : this</pre>"
                },
                {
                    "name": "setContainerQuery",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bContainerQuery",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>containerQuery</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getContainerQuery\">containerQuery</a>.</p><p>If set to <code>true</code> the current range (large, medium or small) is defined by the size of the container surrounding the <code>GridContainer</code>, instead of the device screen size (media Query).</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setContainerQuery",
                    "code": "<pre>setContainerQuery(bContainerQuery?) : this</pre>"
                },
                {
                    "name": "setInlineBlockLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bInlineBlockLayout",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>inlineBlockLayout</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getInlineBlockLayout\">inlineBlockLayout</a>.</p><p>Makes the grid items act like an inline-block elements. They will be arranged in rows with height equal to the highest item in the row.</p><p><b>Note:</b> If set to <code>true</code> the properties <code>rowSize</code> for grid layout, and <code>minRows</code> and <code>rows</code> per item will be ignored.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setInlineBlockLayout",
                    "code": "<pre>setInlineBlockLayout(bInlineBlockLayout?) : this</pre>"
                },
                {
                    "name": "setLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLayout",
                            "optional": false,
                            "description": "<p>The layout to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.GridContainerSettings",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.GridContainerSettings"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayout\">layout</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setLayout",
                    "code": "<pre>setLayout(oLayout) : this</pre>"
                },
                {
                    "name": "setLayoutL",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLayoutL",
                            "optional": false,
                            "description": "<p>The layoutL to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.GridContainerSettings",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.GridContainerSettings"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutL\">layoutL</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setLayoutL",
                    "code": "<pre>setLayoutL(oLayoutL) : this</pre>"
                },
                {
                    "name": "setLayoutM",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLayoutM",
                            "optional": false,
                            "description": "<p>The layoutM to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.GridContainerSettings",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.GridContainerSettings"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutM\">layoutM</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setLayoutM",
                    "code": "<pre>setLayoutM(oLayoutM) : this</pre>"
                },
                {
                    "name": "setLayoutS",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLayoutS",
                            "optional": false,
                            "description": "<p>The layoutS to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.GridContainerSettings",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.GridContainerSettings"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutS\">layoutS</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setLayoutS",
                    "code": "<pre>setLayoutS(oLayoutS) : this</pre>"
                },
                {
                    "name": "setLayoutXL",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLayoutXL",
                            "optional": false,
                            "description": "<p>The layoutXL to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.GridContainerSettings",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.GridContainerSettings"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutXL\">layoutXL</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setLayoutXL",
                    "code": "<pre>setLayoutXL(oLayoutXL) : this</pre>"
                },
                {
                    "name": "setLayoutXS",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLayoutXS",
                            "optional": false,
                            "description": "<p>The layoutXS to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.GridContainerSettings",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.GridContainerSettings"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getLayoutXS\">layoutXS</a>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setLayoutXS",
                    "code": "<pre>setLayoutXS(oLayoutXS) : this</pre>"
                },
                {
                    "name": "setMinHeight",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sMinHeight",
                            "optional": true,
                            "defaultValue": "\"2rem\"",
                            "description": "<p>New value for property <code>minHeight</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getMinHeight\">minHeight</a>.</p><p>Defines the minimum height of the grid.</p><p>Allows an empty grid to be available as a drop target.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"2rem\"</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setMinHeight",
                    "code": "<pre>setMinHeight(sMinHeight?) : this</pre>"
                },
                {
                    "name": "setSnapToRow",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bSnapToRow",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>snapToRow</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getSnapToRow\">snapToRow</a>.</p><p>Should the items stretch to fill the rows that they occupy, or not.</p><p>If set to <code>true</code> the items will stretch.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setSnapToRow",
                    "code": "<pre>setSnapToRow(bSnapToRow?) : this</pre>"
                },
                {
                    "name": "setWidth",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sWidth",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>width</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/getWidth\">width</a>.</p><p>Defines the width of the control.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.GridContainer#methods/setWidth",
                    "code": "<pre>setWidth(sWidth?) : this</pre>"
                }
            ],
            "displayName": "sap.f.GridContainer",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.GridContainer",
            "subTitle": "",
            "docuLink": "cca5ee5d63ca44c89318f8496a58f9f2",
            "docuLinkText": " Grid Container"
        },
        {
            "kind": "class",
            "name": "sap.f.GridContainerItemLayoutData",
            "basename": "GridContainerItemLayoutData",
            "resource": "sap/f/GridContainerItemLayoutData.js",
            "module": "sap/f/GridContainerItemLayoutData",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.65",
            "extends": "sap.ui.core.LayoutData",
            "description": "<p>Holds layout data for an item inside a <code>sap.f.GridContainer</code>.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "columns",
                        "type": "int",
                        "defaultValue": 1,
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Specifies the number of columns, which the item should take</p><p><b>Note:</b> Make sure that the item does not have more columns than the total columns in the grid. Use <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/attachLayoutChange\">sap.f.GridContainer#attachLayoutChange</a> or a resize listener to handle when columns count is changed for the grid. If item has more columns at some point, they will be automatically reduced to the total grid columns. This is done to prevent broken layout (grid blowout) that affects all items.</p>",
                        "methods": [
                            "getColumns",
                            "setColumns"
                        ]
                    },
                    {
                        "name": "minRows",
                        "type": "int",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Specifies the minimum number of rows, which the item should take.</p>",
                        "methods": [
                            "getMinRows",
                            "setMinRows"
                        ]
                    },
                    {
                        "name": "rows",
                        "type": "int",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Specifies the number of rows, which the item should take. For more flexible layout in which the number of rows is determined by the item's height it is recommended to use the \"minRows\" property instead</p>",
                        "methods": [
                            "getRows",
                            "setRows"
                        ]
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new element, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new element.</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.GridContainerItemLayoutData</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.GridContainerItemLayoutData(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.GridContainerItemLayoutData.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.GridContainerItemLayoutData with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.LayoutData#methods/sap.ui.core.LayoutData.extend\">sap.ui.core.LayoutData.extend</a>.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/sap.f.GridContainerItemLayoutData.extend",
                    "code": "<pre>sap.f.GridContainerItemLayoutData.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getColumns",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>columns</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData#methods/getColumns\">columns</a>.</p><p>Specifies the number of columns, which the item should take</p><p><b>Note:</b> Make sure that the item does not have more columns than the total columns in the grid. Use <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/attachLayoutChange\">sap.f.GridContainer#attachLayoutChange</a> or a resize listener to handle when columns count is changed for the grid. If item has more columns at some point, they will be automatically reduced to the total grid columns. This is done to prevent broken layout (grid blowout) that affects all items.</p><p>Default value is <code>1</code>.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/getColumns",
                    "code": "<pre>getColumns() : int</pre>"
                },
                {
                    "name": "sap.f.GridContainerItemLayoutData.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.GridContainerItemLayoutData.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/sap.f.GridContainerItemLayoutData.getMetadata",
                    "code": "<pre>sap.f.GridContainerItemLayoutData.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getMinRows",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>minRows</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData#methods/getMinRows\">minRows</a>.</p><p>Specifies the minimum number of rows, which the item should take.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/getMinRows",
                    "code": "<pre>getMinRows() : int</pre>"
                },
                {
                    "name": "getRows",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>rows</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData#methods/getRows\">rows</a>.</p><p>Specifies the number of rows, which the item should take. For more flexible layout in which the number of rows is determined by the item's height it is recommended to use the \"minRows\" property instead</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/getRows",
                    "code": "<pre>getRows() : int</pre>"
                },
                {
                    "name": "setColumns",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iColumns",
                            "optional": true,
                            "defaultValue": 1,
                            "description": "<p>New value for property <code>columns</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData#methods/getColumns\">columns</a>.</p><p>Specifies the number of columns, which the item should take</p><p><b>Note:</b> Make sure that the item does not have more columns than the total columns in the grid. Use <a target=\"_self\" href=\"api/sap.f.GridContainer#methods/attachLayoutChange\">sap.f.GridContainer#attachLayoutChange</a> or a resize listener to handle when columns count is changed for the grid. If item has more columns at some point, they will be automatically reduced to the total grid columns. This is done to prevent broken layout (grid blowout) that affects all items.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>1</code>.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/setColumns",
                    "code": "<pre>setColumns(iColumns?) : this</pre>"
                },
                {
                    "name": "setMinRows",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iMinRows",
                            "optional": false,
                            "description": "<p>New value for property <code>minRows</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData#methods/getMinRows\">minRows</a>.</p><p>Specifies the minimum number of rows, which the item should take.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/setMinRows",
                    "code": "<pre>setMinRows(iMinRows) : this</pre>"
                },
                {
                    "name": "setRows",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iRows",
                            "optional": false,
                            "description": "<p>New value for property <code>rows</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerItemLayoutData#methods/getRows\">rows</a>.</p><p>Specifies the number of rows, which the item should take. For more flexible layout in which the number of rows is determined by the item's height it is recommended to use the \"minRows\" property instead</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.GridContainerItemLayoutData#methods/setRows",
                    "code": "<pre>setRows(iRows) : this</pre>"
                }
            ],
            "displayName": "sap.f.GridContainerItemLayoutData",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.GridContainerItemLayoutData",
            "subTitle": "",
            "docuLink": "32d4b9c2b981425dbc374d3e9d5d0c2e",
            "docuLinkText": " Grid Controls"
        },
        {
            "kind": "class",
            "name": "sap.f.GridContainerSettings",
            "basename": "GridContainerSettings",
            "resource": "sap/f/GridContainerSettings.js",
            "module": "sap/f/GridContainerSettings",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.65",
            "extends": "sap.ui.base.ManagedObject",
            "description": "<p>Holds a set of settings that define the dimensions of <code>sap.f.GridContainer</code>.</p><p>Can be used to define the sizes of columns and rows for different screen sizes, by using the <code>layout</code> aggregations of <code>sap.f.GridContainer</code>.</p>",
            "ui5-metadata": {
                "stereotype": "object",
                "properties": [
                    {
                        "name": "columnSize",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "80px",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>The width of the columns. <b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p>",
                        "methods": [
                            "getColumnSize",
                            "setColumnSize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "columns",
                        "type": "int",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>How many columns to have on a row.</p><p>If not defined, <code>sap.f.GridContainer</code> will position as many columns as they can fit in the container.</p>",
                        "methods": [
                            "getColumns",
                            "setColumns"
                        ]
                    },
                    {
                        "name": "gap",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "16px",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>The size of the gap between columns and rows.</p><p><b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p>",
                        "methods": [
                            "getGap",
                            "setGap"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "maxColumnSize",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Sets the maximum width of the columns. Setting this together with <code>minColumnSize</code> will allow the columns to breath between those two values.</p><p><b>Note:</b> Will not work in combination with <code>columnSize</code>.</p>",
                        "methods": [
                            "getMaxColumnSize",
                            "setMaxColumnSize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "minColumnSize",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Sets the minimum width of the columns. Setting this together with <code>maxColumnSize</code> will allow the columns to breath between those two values.</p><p><b>Note:</b> Will not work in combination with <code>columnSize</code>.</p>",
                        "methods": [
                            "getMinColumnSize",
                            "setMinColumnSize"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "rowSize",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "80px",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>The height of the rows.</p><p><b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p>",
                        "methods": [
                            "getRowSize",
                            "setRowSize"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.GridContainerSettings</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.GridContainerSettings(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.GridContainerSettings.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.GridContainerSettings with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#methods/sap.ui.base.ManagedObject.extend\">sap.ui.base.ManagedObject.extend</a>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/sap.f.GridContainerSettings.extend",
                    "code": "<pre>sap.f.GridContainerSettings.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getColumns",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>columns</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getColumns\">columns</a>.</p><p>How many columns to have on a row.</p><p>If not defined, <code>sap.f.GridContainer</code> will position as many columns as they can fit in the container.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/getColumns",
                    "code": "<pre>getColumns() : int</pre>"
                },
                {
                    "name": "getColumnSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>columnSize</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getColumnSize\">columnSize</a>.</p><p>The width of the columns. <b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p><p>Default value is <code>\"80px\"</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/getColumnSize",
                    "code": "<pre>getColumnSize() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "getGap",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>gap</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getGap\">gap</a>.</p><p>The size of the gap between columns and rows.</p><p><b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p><p>Default value is <code>\"16px\"</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/getGap",
                    "code": "<pre>getGap() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "getMaxColumnSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>maxColumnSize</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getMaxColumnSize\">maxColumnSize</a>.</p><p>Sets the maximum width of the columns. Setting this together with <code>minColumnSize</code> will allow the columns to breath between those two values.</p><p><b>Note:</b> Will not work in combination with <code>columnSize</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/getMaxColumnSize",
                    "code": "<pre>getMaxColumnSize() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "sap.f.GridContainerSettings.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.base.ManagedObjectMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.base.ManagedObjectMetadata",
                                "href": "api/sap.ui.base.ManagedObjectMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.GridContainerSettings.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/sap.f.GridContainerSettings.getMetadata",
                    "code": "<pre>sap.f.GridContainerSettings.getMetadata() : sap.ui.base.ManagedObjectMetadata</pre>"
                },
                {
                    "name": "getMinColumnSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>minColumnSize</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getMinColumnSize\">minColumnSize</a>.</p><p>Sets the minimum width of the columns. Setting this together with <code>maxColumnSize</code> will allow the columns to breath between those two values.</p><p><b>Note:</b> Will not work in combination with <code>columnSize</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/getMinColumnSize",
                    "code": "<pre>getMinColumnSize() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "getRowSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>rowSize</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getRowSize\">rowSize</a>.</p><p>The height of the rows.</p><p><b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p><p>Default value is <code>\"80px\"</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/getRowSize",
                    "code": "<pre>getRowSize() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "setColumns",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iColumns",
                            "optional": false,
                            "description": "<p>New value for property <code>columns</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getColumns\">columns</a>.</p><p>How many columns to have on a row.</p><p>If not defined, <code>sap.f.GridContainer</code> will position as many columns as they can fit in the container.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/setColumns",
                    "code": "<pre>setColumns(iColumns) : this</pre>"
                },
                {
                    "name": "setColumnSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sColumnSize",
                            "optional": true,
                            "defaultValue": "\"80px\"",
                            "description": "<p>New value for property <code>columnSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getColumnSize\">columnSize</a>.</p><p>The width of the columns. <b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"80px\"</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/setColumnSize",
                    "code": "<pre>setColumnSize(sColumnSize?) : this</pre>"
                },
                {
                    "name": "setGap",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sGap",
                            "optional": true,
                            "defaultValue": "\"16px\"",
                            "description": "<p>New value for property <code>gap</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getGap\">gap</a>.</p><p>The size of the gap between columns and rows.</p><p><b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"16px\"</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/setGap",
                    "code": "<pre>setGap(sGap?) : this</pre>"
                },
                {
                    "name": "setMaxColumnSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sMaxColumnSize",
                            "optional": false,
                            "description": "<p>New value for property <code>maxColumnSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getMaxColumnSize\">maxColumnSize</a>.</p><p>Sets the maximum width of the columns. Setting this together with <code>minColumnSize</code> will allow the columns to breath between those two values.</p><p><b>Note:</b> Will not work in combination with <code>columnSize</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/setMaxColumnSize",
                    "code": "<pre>setMaxColumnSize(sMaxColumnSize) : this</pre>"
                },
                {
                    "name": "setMinColumnSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sMinColumnSize",
                            "optional": false,
                            "description": "<p>New value for property <code>minColumnSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getMinColumnSize\">minColumnSize</a>.</p><p>Sets the minimum width of the columns. Setting this together with <code>maxColumnSize</code> will allow the columns to breath between those two values.</p><p><b>Note:</b> Will not work in combination with <code>columnSize</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/setMinColumnSize",
                    "code": "<pre>setMinColumnSize(sMinColumnSize) : this</pre>"
                },
                {
                    "name": "setRowSize",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sRowSize",
                            "optional": true,
                            "defaultValue": "\"80px\"",
                            "description": "<p>New value for property <code>rowSize</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.GridContainerSettings#methods/getRowSize\">rowSize</a>.</p><p>The height of the rows.</p><p><b>Note:</b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"80px\"</code>.</p>",
                    "href": "api/sap.f.GridContainerSettings#methods/setRowSize",
                    "code": "<pre>setRowSize(sRowSize?) : this</pre>"
                }
            ],
            "displayName": "sap.f.GridContainerSettings",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.GridContainerSettings",
            "subTitle": "",
            "docuLink": "32d4b9c2b981425dbc374d3e9d5d0c2e",
            "docuLinkText": " Grid Controls"
        },
        {
            "kind": "class",
            "name": "sap.f.GridList",
            "basename": "GridList",
            "resource": "sap/f/GridList.js",
            "module": "sap/f/GridList",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.60",
            "extends": "sap.m.ListBase",
            "implements": [
                "sap.ui.layout.cssgrid.IGridConfigurable",
                "sap.f.dnd.IGridDroppable"
            ],
            "description": "<p>A list-based control with grid layout capabilities.</p><h3>Overview</h3><p>The control is based on <a target=\"_self\" href=\"api/sap.m.ListBase\">sap.m.ListBase</a> and adds the flexibility to configure different grid layouts. The layout used is based on the CSS display grid and the control has a default configuration.</p><p>With <code>customLayout</code> aggregation it is possible to use: <ul> <li>Predefined simple grid layouts such as <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridBoxLayout\">GridBoxLayout</a></li> <li>Flexible grid layouts, such as <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridBasicLayout\">GridBasicLayout</a> or <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridResponsiveLayout\">GridResponsiveLayout</a> which reveal the native-browser CSS display grid APIs. For more information, see <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\">MDN web docs: CSS Grid Layout</a>\n\t\t\t<img src=\"./resources/sap/ui/documentation/sdk/images/link-external.png\"\n\t\t\ttitle=\"Information published on non SAP site\" class=\"sapUISDKExternalLink\"/></li> </ul></p><p>Every item can override its size by specifying the number of columns and/or rows it will take in the grid. This is done using <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridItemLayoutData\">GridItemLayoutData</a>.</p><p>For best visualization, items of type <a target=\"_self\" href=\"api/sap.f.GridListItem\">sap.f.GridListItem</a> should be used inside the <code>items</code> aggregation.</p><h3>Usage</h3><p>For general cases, use the default grid configuration of the <code>GridList</code>. For Box case (equal sized items), use <code>customLayout</code> aggregation with <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridBoxLayout\">GridBoxLayout</a> For Grids which need different configurations based on available width, use <code>customLayout</code> aggregation with <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridResponsiveLayout\">GridResponsiveLayout</a> To set a specific position to an item or define its dimensions in the grid, pass <code>layoutData</code> of type <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.GridItemLayoutData\">GridItemLayoutData</a></p><p><i>When to use</i> <ul> <li>If <a target=\"_self\" href=\"api/sap.m.ListBase\">sap.m.ListBase</a> features are required and the items must be positioned in a grid layout</li> </ul></p><p><i>When not to use</i> <ul> <li>If a list layout is required, use <a target=\"_self\" href=\"api/sap.m.List\">sap.m.List</a> instead. <li>If only the layout is required, use <a target=\"_self\" href=\"api/sap.ui.layout.cssgrid.CSSGrid\">sap.ui.layout.cssgrid.CSSGrid</a> instead. </ul></p><h3>Drag and drop:</h3><p> Drag and drop is enabled for the <code>GridList</code> with enhanced visualization and interaction, better suited for grid items. This is configured by using the <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code>.</p><p>Similar to the <code><a target=\"_self\" href=\"api/sap.ui.core.dnd.DropInfo\">sap.ui.core.dnd.DropInfo</a></code>, <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code> has to be added to the <code>dragDropConfig</code> aggregation, by using <code><a target=\"_self\" href=\"api/sap.ui.core.Element#methods/addDragDropConfig\">sap.ui.core.Element#addDragDropConfig</a></code>.</p><p>Both <code><a target=\"_self\" href=\"api/sap.ui.core.dnd.DropInfo\">sap.ui.core.dnd.DropInfo</a></code> and <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code> can be used to configure drag and drop. The difference is that the <code><a target=\"_self\" href=\"api/sap.f.dnd.GridDropInfo\">sap.f.dnd.GridDropInfo</a></code> will provide a drop indicator, which mimics the size of the dragged item and shows the potential drop position inside the grid.</p><h3>Keyboard Navigation:</h3><p> <code>GridList</code> provides support for two-dimensional keyboard navigation through its contained controls. Navigating up/down or left/right using the arrow keys follows the configurable two-dimensional grid mesh. This provides stable navigation paths in the cases when there are items of different sizes. When the user presses an arrow key in a direction outward of the <code>GridList</code>, a <code>borderReached</code> event will be fired. The implementation of the <code>borderReached</code> event allows the application developer to control where the focus goes, and depending on the surrounding layout pass the focus to a specific place in a neighboring <code>GridList</code> using the method <a target=\"_self\" href=\"api/sap.f.GridList#methods/focusItemByDirection\">#focusItemByDirection</a>.<br><br><span>Documentation links:</span><ul><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\">MDN web docs: CSS Grid Layout</a>\n\t\t\t<img src=\"./resources/sap/ui/documentation/sdk/images/link-external.png\"\n\t\t\ttitle=\"Information published on non SAP site\" class=\"sapUISDKExternalLink\"/></li></ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "aggregations": [
                    {
                        "name": "customLayout",
                        "singularName": "customLayout",
                        "type": "sap.ui.layout.cssgrid.GridLayoutBase",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Defines a custom grid layout</p>",
                        "methods": [
                            "getCustomLayout",
                            "destroyCustomLayout",
                            "setCustomLayout"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new GridList.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [
                    "{@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout MDN web docs: CSS Grid Layout}"
                ],
                "codeExample": "<pre>new sap.f.GridList(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "borderReached",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "event",
                            "type": "jQuery.Event",
                            "optional": false,
                            "description": "<p>Event that leads to the focus change.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.event",
                            "linkEnabled": true
                        },
                        {
                            "name": "direction",
                            "type": "sap.f.NavigationDirection",
                            "optional": false,
                            "description": "<p>The navigation direction that is used to reach the border.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.direction",
                            "linkEnabled": true
                        },
                        {
                            "name": "row",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The row index, from which the border is reached.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.row"
                        },
                        {
                            "name": "column",
                            "type": "int",
                            "optional": false,
                            "description": "<p>The the column index, from which the border is reached.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.column"
                        }
                    ],
                    "description": "<p>Fires if the border of the visualizations is reached so that an application can react on this.</p>"
                }
            ],
            "methods": [
                {
                    "name": "attachBorderReached",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.GridList</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.GridList#events/borderReached\">borderReached</a> event of this <code>sap.f.GridList</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.GridList</code> itself.</p><p>Fires if the border of the visualizations is reached so that an application can react on this.</p>",
                    "href": "api/sap.f.GridList#methods/attachBorderReached",
                    "code": "<pre>attachBorderReached(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyCustomLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the customLayout in the aggregation <a target=\"_self\" href=\"api/sap.f.GridList#methods/getCustomLayout\">customLayout</a>.</p>",
                    "href": "api/sap.f.GridList#methods/destroyCustomLayout",
                    "code": "<pre>destroyCustomLayout() : this</pre>"
                },
                {
                    "name": "detachBorderReached",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.GridList#events/borderReached\">borderReached</a> event of this <code>sap.f.GridList</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.GridList#methods/detachBorderReached",
                    "code": "<pre>detachBorderReached(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.GridList.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.GridList with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.ListBase#methods/sap.m.ListBase.extend\">sap.m.ListBase.extend</a>.</p>",
                    "href": "api/sap.f.GridList#methods/sap.f.GridList.extend",
                    "code": "<pre>sap.f.GridList.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireBorderReached",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "event",
                            "optional": true,
                            "description": "<p>Event that leads to the focus change.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "jQuery.Event",
                                    "linkEnabled": true,
                                    "href": "api/jQuery.Event"
                                }
                            ],
                            "phoneName": "mParameters.event",
                            "defaultValue": ""
                        },
                        {
                            "name": "direction",
                            "optional": true,
                            "description": "<p>The navigation direction that is used to reach the border.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.f.NavigationDirection",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.NavigationDirection"
                                }
                            ],
                            "phoneName": "mParameters.direction",
                            "defaultValue": ""
                        },
                        {
                            "name": "row",
                            "optional": true,
                            "description": "<p>The row index, from which the border is reached.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.row",
                            "defaultValue": ""
                        },
                        {
                            "name": "column",
                            "optional": true,
                            "description": "<p>The the column index, from which the border is reached.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "phoneName": "mParameters.column",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.GridList#events/borderReached\">borderReached</a> to attached listeners.</p>",
                    "href": "api/sap.f.GridList#methods/fireBorderReached",
                    "code": "<pre>fireBorderReached(mParameters?) : this</pre>"
                },
                {
                    "name": "focusItemByDirection",
                    "visibility": "public",
                    "since": "1.87",
                    "parameters": [
                        {
                            "name": "sDirection",
                            "optional": false,
                            "description": "<p>The navigation direction.</p>",
                            "types": [
                                {
                                    "value": "sap.f.NavigationDirection",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.NavigationDirection"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iRow",
                            "optional": false,
                            "description": "<p>The row index of the starting position.</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iColumn",
                            "optional": false,
                            "description": "<p>The column index of the starting position.</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Focuses an item in the given direction - up, down, left or right, from the starting position specified by row and column.</p><p>If the direction is up or down, the method focuses the nearest item in the same column, located in the specified direction.</p><p>If the direction is left or right, the method focuses the nearest item at the same row, in the specified direction.</p><p><b>Note:</b>Should be called after the rendering of <code>GridList</code> is ready.</p>",
                    "href": "api/sap.f.GridList#methods/focusItemByDirection",
                    "code": "<pre>focusItemByDirection(sDirection, iRow, iColumn) : void</pre>"
                },
                {
                    "name": "getCustomLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.layout.cssgrid.GridLayoutBase",
                        "types": [
                            {
                                "value": "sap.ui.layout.cssgrid.GridLayoutBase",
                                "href": "api/sap.ui.layout.cssgrid.GridLayoutBase",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridList#methods/getCustomLayout\">customLayout</a>.</p><p>Defines a custom grid layout</p>",
                    "href": "api/sap.f.GridList#methods/getCustomLayout",
                    "code": "<pre>getCustomLayout() : sap.ui.layout.cssgrid.GridLayoutBase</pre>"
                },
                {
                    "name": "getGridDomRefs",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "HTMLElement[]",
                        "description": "<p>An array with the DOM elements</p>",
                        "types": [
                            {
                                "value": "HTMLElement[]"
                            }
                        ]
                    },
                    "description": "<p>Implements IGridConfigurable interface.</p>",
                    "href": "api/sap.f.GridList#methods/getGridDomRefs",
                    "code": "<pre>getGridDomRefs() : HTMLElement[]</pre>"
                },
                {
                    "name": "getGridLayoutConfiguration",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "sap.ui.layout.cssgrid.GridLayoutBase",
                        "description": "<p>The grid layout</p>",
                        "types": [
                            {
                                "value": "sap.ui.layout.cssgrid.GridLayoutBase",
                                "href": "api/sap.ui.layout.cssgrid.GridLayoutBase",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Implements IGridConfigurable interface.</p>",
                    "href": "api/sap.f.GridList#methods/getGridLayoutConfiguration",
                    "code": "<pre>getGridLayoutConfiguration() : sap.ui.layout.cssgrid.GridLayoutBase</pre>"
                },
                {
                    "name": "sap.f.GridList.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.GridList.</p>",
                    "href": "api/sap.f.GridList#methods/sap.f.GridList.getMetadata",
                    "code": "<pre>sap.f.GridList.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getNavigationMatrix",
                    "visibility": "restricted",
                    "href": "api/sap.f.GridList#methods/getNavigationMatrix",
                    "code": "<pre>getNavigationMatrix() : void</pre>"
                },
                {
                    "name": "onItemNavigationBorderReached",
                    "visibility": "restricted",
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": false,
                            "description": "<p>a set of parameters</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires when border of the <code>sap.f.GridList</code> is reached.</p>",
                    "href": "api/sap.f.GridList#methods/onItemNavigationBorderReached",
                    "code": "<pre>onItemNavigationBorderReached(mParameters) : void</pre>"
                },
                {
                    "name": "setCustomLayout",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oCustomLayout",
                            "optional": false,
                            "description": "<p>The customLayout to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.layout.cssgrid.GridLayoutBase",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.layout.cssgrid.GridLayoutBase"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.GridList#methods/getCustomLayout\">customLayout</a>.</p>",
                    "href": "api/sap.f.GridList#methods/setCustomLayout",
                    "code": "<pre>setCustomLayout(oCustomLayout) : this</pre>"
                }
            ],
            "displayName": "sap.f.GridList",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.GridList",
            "subTitle": "",
            "docuLink": "32d4b9c2b981425dbc374d3e9d5d0c2e",
            "docuLinkText": " Grid Controls"
        },
        {
            "kind": "class",
            "name": "sap.f.GridListItem",
            "basename": "GridListItem",
            "resource": "sap/f/GridListItem.js",
            "module": "sap/f/GridListItem",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.70",
            "extends": "sap.m.ListItemBase",
            "description": "<p>The <code>GridListItem</code> with a content aggregation can be used to display all kind of information. It is used in <a target=\"_self\" href=\"api/sap.f.GridList\">sap.f.GridList</a>. <b>Note:</b> Even though the content aggregation can be used for any control, complex responsive layout controls, such as <code>Table, Form</code>, etc, should not be aggregated as content.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "aggregations": [
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "bindable": true,
                        "description": "<p>The content of this list item</p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "insertContent",
                            "addContent",
                            "removeContent",
                            "indexOfContent",
                            "removeAllContent",
                            "bindContent",
                            "unbindContent"
                        ],
                        "linkEnabled": true
                    }
                ],
                "defaultAggregation": "content"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new GridListItem.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.GridListItem(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "addContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some content to the aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.GridListItem#methods/addContent",
                    "code": "<pre>addContent(oContent) : this</pre>"
                },
                {
                    "name": "bindContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBindingInfo",
                            "optional": false,
                            "description": "<p>The binding information</p>",
                            "types": [
                                {
                                    "value": "sap.ui.base.ManagedObject.AggregationBindingInfo",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.base.ManagedObject.AggregationBindingInfo"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Binds aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a> to model data.</p><p>See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#methods/bindAggregation\">ManagedObject.bindAggregation</a> for a detailed description of the possible properties of <code>oBindingInfo</code>.</p>",
                    "href": "api/sap.f.GridListItem#methods/bindContent",
                    "code": "<pre>bindContent(oBindingInfo) : this</pre>"
                },
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the content in the aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.GridListItem#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "sap.f.GridListItem.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.GridListItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.ListItemBase#methods/sap.m.ListItemBase.extend\">sap.m.ListItemBase.extend</a>.</p>",
                    "href": "api/sap.f.GridListItem#methods/sap.f.GridListItem.extend",
                    "code": "<pre>sap.f.GridListItem.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>.</p><p>The content of this list item</p>",
                    "href": "api/sap.f.GridListItem#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "sap.f.GridListItem.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.GridListItem.</p>",
                    "href": "api/sap.f.GridListItem#methods/sap.f.GridListItem.getMetadata",
                    "code": "<pre>sap.f.GridListItem.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "indexOfContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.GridListItem#methods/indexOfContent",
                    "code": "<pre>indexOfContent(oContent) : int</pre>"
                },
                {
                    "name": "insertContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a content into the aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.GridListItem#methods/insertContent",
                    "code": "<pre>insertContent(oContent, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.GridListItem#methods/removeAllContent",
                    "code": "<pre>removeAllContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed content or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vContent",
                            "optional": false,
                            "description": "<p>The content to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a content from the aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.GridListItem#methods/removeContent",
                    "code": "<pre>removeContent(vContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "unbindContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Unbinds aggregation <a target=\"_self\" href=\"api/sap.f.GridListItem#methods/getContent\">content</a> from model data.</p>",
                    "href": "api/sap.f.GridListItem#methods/unbindContent",
                    "code": "<pre>unbindContent() : this</pre>"
                }
            ],
            "displayName": "sap.f.GridListItem",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.GridListItem",
            "subTitle": ""
        },
        {
            "kind": "interface",
            "name": "sap.f.ICard",
            "basename": "ICard",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.62",
            "description": "<p><p>Interface that should be implemented by all card controls.</p></p>",
            "displayName": "sap.f.ICard",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "interface sap.f.ICard",
            "subTitle": ""
        },
        {
            "kind": "interface",
            "name": "sap.f.IDynamicPageStickyContent",
            "basename": "IDynamicPageStickyContent",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.65",
            "description": "<p><p>Interface for controls suitable for the <code>stickySubheaderProvider</code> association of <code><a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a></code>.</p><p>Controls that implemenet this interface should have the following methods: <ul> <li><code>_getStickyContent</code> - returns the content (control) used in the subheader</li> <li><code>_returnStickyContent</code> - ensures that the content (control) returned by <code>_getStickyContent</code>, is placed back in its place in the provider</li> <li><code>_getStickySubHeaderSticked</code> - returns boolean value that shows where the sticky content is placed (in its provider or in the <code>DynamicPage</code>)</li> <li><code>_setStickySubHeaderSticked</code> - accepts a boolean argument to notify the provider where its sticky content is placed</li> </ul></p></p>",
            "displayName": "sap.f.IDynamicPageStickyContent",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "interface sap.f.IDynamicPageStickyContent",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.IllustratedMessage",
            "basename": "IllustratedMessage",
            "resource": "sap/f/IllustratedMessage.js",
            "module": "sap/f/IllustratedMessage",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.88",
            "extends": "sap.m.IllustratedMessage",
            "description": "<p>A combination of message and illustration to represent an empty or a success state.</p><h3>Overview</h3><p>An <code>IllustratedMessage</code> is a recommended combination of a solution-oriented message, an engaging illustration, and conversational tone to better communicate an empty or a success state than just show a message alone. Empty states are moments in the user experience where there’s no data to display. Success states are occasions to celebrate and reward a user’s special accomplishment or the completion of an important task.</p><p>The <code>IllustratedMessage</code> control is meant to be used inside container controls, for example a <code>Card</code>, a <code>Dialog</code>, or a <code>Page</code>.</p><h3>Structure</h3><p>The <code>IllustratedMessage</code> consists of the following elements, which are displayed below each other in the following order: <ul> <li>Illustration</li> <li>Title</li> <li>Description</li> <li>Additional Content</li> </ul></p><h3>Responsive Behavior</h3><p>The <code>IllustratedMessage</code> control can adapt depending on the API settings provided by the app developer and the available space of its parent container. Some of the structural elements are displayed differently or are omitted in the different breakpoint sizes (XS, S, M, L).</p>",
            "ui5-metadata": {
                "stereotype": "control"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>IllustratedMessage</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.m.IllustratedMessage#constructor\">sap.m.IllustratedMessage</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.IllustratedMessage(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.IllustratedMessage.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.IllustratedMessage with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.IllustratedMessage#methods/sap.m.IllustratedMessage.extend\">sap.m.IllustratedMessage.extend</a>.</p>",
                    "href": "api/sap.f.IllustratedMessage#methods/sap.f.IllustratedMessage.extend",
                    "code": "<pre>sap.f.IllustratedMessage.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.IllustratedMessage.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.IllustratedMessage.</p>",
                    "href": "api/sap.f.IllustratedMessage#methods/sap.f.IllustratedMessage.getMetadata",
                    "code": "<pre>sap.f.IllustratedMessage.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.IllustratedMessage",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.IllustratedMessage",
            "subTitle": "Deprecated in version: 1.98",
            "deprecatedText": "Deprecated as of version 1.98. Use the <a target=\"_self\" href=\"api/sap.m.IllustratedMessage\">sap.m.IllustratedMessage</a> instead."
        },
        {
            "kind": "typedef",
            "name": "sap.f.IllustratedMessageSize",
            "basename": "IllustratedMessageSize",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.88",
            "description": "<p><p>Available <code>Illustration</code> sizes for the <a target=\"_self\" href=\"api/sap.f.IllustratedMessage\">sap.f.IllustratedMessage</a> control.</p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.IllustratedMessageSize\">sap.m.IllustratedMessageSize</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.IllustratedMessageSize",
            "displayName": "sap.f.IllustratedMessageSize",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.IllustratedMessageSize",
            "subTitle": "Deprecated in version: 1.98",
            "deprecatedText": "Deprecated as of version 1.98. Use the <a target=\"_self\" href=\"api/sap.m.IllustratedMessageSize\">sap.m.IllustratedMessageSize</a> instead."
        },
        {
            "kind": "typedef",
            "name": "sap.f.IllustratedMessageType",
            "basename": "IllustratedMessageType",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.88",
            "description": "<p><p>Available <code>Illustration</code> types for the <a target=\"_self\" href=\"api/sap.f.IllustratedMessage\">sap.f.IllustratedMessage</a> control.</p><p>This is an alias for <a target=\"_self\" href=\"api/sap.m.IllustratedMessageType\">sap.m.IllustratedMessageType</a> and only kept for compatibility reasons.</p></p>",
            "type": "sap.m.IllustratedMessageType",
            "displayName": "sap.f.IllustratedMessageType",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "typedef sap.f.IllustratedMessageType",
            "subTitle": "Deprecated in version: 1.98",
            "deprecatedText": "Deprecated as of version 1.98. Use the <a target=\"_self\" href=\"api/sap.m.IllustratedMessageType\">sap.m.IllustratedMessageType</a> instead."
        },
        {
            "kind": "class",
            "name": "sap.f.Illustration",
            "basename": "Illustration",
            "resource": "sap/f/Illustration.js",
            "module": "sap/f/Illustration",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.88",
            "extends": "sap.m.Illustration",
            "description": "<p>A simple control which uses a Symbol ID to visualize an SVG which has already been loaded in the <a target=\"_self\" href=\"api/sap.f.IllustrationPool\">sap.f.IllustrationPool</a>.</p><p>To build a Symbol ID, all of the <code>Illustration</code> properties must be populated with data.</p>",
            "ui5-metadata": {
                "stereotype": "control"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>Illustration</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.m.Illustration#constructor\">sap.m.Illustration</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.Illustration(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.Illustration.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.Illustration with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.Illustration#methods/sap.m.Illustration.extend\">sap.m.Illustration.extend</a>.</p>",
                    "href": "api/sap.f.Illustration#methods/sap.f.Illustration.extend",
                    "code": "<pre>sap.f.Illustration.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.Illustration.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.Illustration.</p>",
                    "href": "api/sap.f.Illustration#methods/sap.f.Illustration.getMetadata",
                    "code": "<pre>sap.f.Illustration.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.Illustration",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.Illustration",
            "subTitle": "Deprecated in version: 1.98",
            "deprecatedText": "Deprecated as of version 1.98. Use the <a target=\"_self\" href=\"api/sap.m.Illustration\">sap.m.Illustration</a> instead."
        },
        {
            "kind": "namespace",
            "name": "sap.f.IllustrationPool",
            "basename": "IllustrationPool",
            "resource": "sap/f/IllustrationPool.js",
            "module": "sap/f/IllustrationPool",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.88",
            "description": "<p><p><code>IllustrationPool</code> loads the illustration assets (SVGs) via XMLHttpRequest requests.</p><p>The successfully loaded data is kept in the DOM (div with ID <code>sap-illustration-pool</code>) in the <code>sap-ui-static</code> DOM element.</p><p>To load a given asset, register its illustration set through the <a target=\"_self\" href=\"api/sap.m.IllustrationPool#methods/sap.m.IllustrationPool.registerIllustrationSet\">registerIllustrationSet</a> API of <code>IllustrationPool</code>. The exception being the <code>sapIllus</code>, which is the default illustration set that is registered by default.</p><p>The default behavior of <code>IllustrationPool</code> is to load/require an asset only when it's needed by using the <a target=\"_self\" href=\"api/sap.m.IllustrationPool#methods/sap.m.IllustrationPool.loadAsset\">loadAsset</a> API. When registering the new illustration set, you are given the option to load all of its assets.</p><p>If some of the assets are not loaded initially, you can load the rest of them on a later state with the <a target=\"_self\" href=\"api/sap.m.IllustrationPool#methods/sap.m.IllustrationPool.loadRestOfTheAssets\">loadRestOfTheAssets</a> API.</p></p>",
            "displayName": "sap.f.IllustrationPool",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.IllustrationPool",
            "subTitle": "Deprecated in version: 1.98",
            "deprecatedText": "Deprecated as of version 1.98. Use the <a target=\"_self\" href=\"api/sap.m.IllustrationPool\">sap.m.IllustrationPool</a> instead."
        },
        {
            "kind": "interface",
            "name": "sap.f.IShellBar",
            "basename": "IShellBar",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "static": true,
            "visibility": "public",
            "since": "1.63",
            "description": "<p><p>Interface for controls suitable for the <code>additionalContent</code> aggregation of <code><a target=\"_self\" href=\"api/sap.f.ShellBar\">sap.f.ShellBar</a></code>.</p></p>",
            "experimental": {
                "since": "1.63",
                "text": "that provides only limited functionality. Also, it can be removed in future versions."
            },
            "displayName": "sap.f.IShellBar",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "interface sap.f.IShellBar",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.LayoutType",
            "basename": "LayoutType",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "LayoutType",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "description": "<p><p>Layouts, representing the number of columns to be displayed and their relative widths for a <a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout\">sap.f.FlexibleColumnLayout</a> control.</p><p>Each layout has a default predefined ratio for the three columns, depending on device size. Based on the device and layout, some columns are hidden. For more information, refer to the ratios (in %) for each value, listed below: (dash \"-\" means non-accessible columns).</p><p><b>Notes:</b> <ul> <li>The user is allowed to customize the default ratio by dragging the column separators to resize the columns. The user preferences are then internally saved (in browser localStorage) and automatically re-applied whenever the user re-visits the same layout. </li> <li>Please note that on a phone device, due to the limited screen size, only one column can be displayed at a time. For all two-column layouts, this column is the <code>Mid</code> column, and for all three-column layouts - the <code>End</code> column, even though the respective column may be hidden on desktop and tablet for that particular layout. Therefore some of the names (such as <code>ThreeColumnsMidExpandedEndHidden</code> for example) are representative of the desktop scenario only. </li> </ul></p><p>For more information, see <a target=\"_self\" href=\"topic/3b9f760da5b64adf8db7f95247879086\">Types of Layout</a> in the documentation.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'LayoutType'.</p></p>",
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.LayoutType.EndColumnFullScreen",
                    "visibility": "public",
                    "description": "<p>Desktop: -/-/100 only the End column is displayed</p><p>Tablet: -/-/100 only the End column is displayed</p><p>Phone: -/-/100 only the End column is displayed</p><p>Use to display a detail-detail page only, when the user should focus entirely on it.</p>"
                },
                {
                    "name": "sap.f.LayoutType.MidColumnFullScreen",
                    "visibility": "public",
                    "description": "<p>Desktop: -/100/- only the Mid column is displayed</p><p>Tablet: -/100/- only the Mid column is displayed</p><p>Phone: -/100/- only the Mid column is displayed</p><p>Use to display a detail page only, when the user should focus entirely on it.</p>"
                },
                {
                    "name": "sap.f.LayoutType.OneColumn",
                    "visibility": "public",
                    "description": "<p>Desktop: 100/-/- only the Begin column is displayed</p><p>Tablet: 100/-/- only the Begin column is displayed</p><p>Phone: 100/-/- only the Begin column is displayed</p><p>Use to start with a master page.</p>"
                },
                {
                    "name": "sap.f.LayoutType.ThreeColumnsBeginExpandedEndHidden",
                    "visibility": "public",
                    "description": "<p>Desktop: default ratio is 67/33/0 Begin (expanded) and Mid columns are displayed, End is accessible by dragging the column separators</p><p>Tablet: default ratio is 67/33/0 Begin (expanded) and Mid columns are displayed, End is accessible by dragging the column separators</p><p>Phone: -/-/100 only the End column is displayed</p><p>Use to display the master and detail pages when the user should focus on the master. The detail-detail is still loaded and easily accessible by dragging the column separators.</p>"
                },
                {
                    "name": "sap.f.LayoutType.ThreeColumnsEndExpanded",
                    "visibility": "public",
                    "description": "<p>Desktop: default ratio is 25/25/50 Begin, Mid and End (expanded) columns are displayed</p><p>Tablet: default ratio is 0/33/67 Mid and End (expanded) columns are displayed, Begin is accessible by dragging the column separator to expand the column</p><p>Phone: -/-/100 (only the End column is displayed)</p><p>Use to display all three pages (master, detail, detail-detail) when the user should focus on the detail-detail.</p>"
                },
                {
                    "name": "sap.f.LayoutType.ThreeColumnsMidExpanded",
                    "visibility": "public",
                    "description": "<p>Desktop: default ratio is 25/50/25 Begin, Mid (expanded) and End columns are displayed</p><p>Tablet: default ratio is 0/67/33 Mid (expanded) and End columns are displayed, Begin is accessible by dragging its adjacent column separator to expand the column.</p><p>Phone: -/-/100 only the End column is displayed</p><p>Use to display all three pages (master, detail, detail-detail) when the user should focus on the detail.</p>"
                },
                {
                    "name": "sap.f.LayoutType.ThreeColumnsMidExpandedEndHidden",
                    "visibility": "public",
                    "description": "<p>Desktop: default ratio is 33/67/0 Begin and Mid (expanded) columns are displayed, End is accessible by dragging the column-separator to expand the column.</p><p>Tablet: default ratio is 33/67/0 Begin and Mid (expanded) columns are displayed, End is accessible by dragging the column-separator to expand the column.</p><p>Phone: -/-/100 only the End column is displayed</p><p>Use to display the master and detail pages when the user should focus on the detail. The detail-detail is still loaded and easily accessible upon dragging the column-separator to expand the column.</p>"
                },
                {
                    "name": "sap.f.LayoutType.TwoColumnsBeginExpanded",
                    "visibility": "public",
                    "description": "<p>Desktop: default ratio is 67/33/- Begin (expanded) and Mid columns are displayed</p><p>Tablet: default ratio is 67/33/- Begin (expanded) and Mid columns are displayed</p><p>Phone: -/100/- only the Mid column is displayed</p><p>Use to display both a master and a detail page when the user should focus on the master page.</p>"
                },
                {
                    "name": "sap.f.LayoutType.TwoColumnsMidExpanded",
                    "visibility": "public",
                    "description": "<p>Desktop: default ratio is 33/67/- Begin and Mid (expanded) columns are displayed</p><p>Tablet: default ratio is 33/67/- Begin and Mid (expanded) columns are displayed</p><p>Phone: -/100/- only the Mid column is displayed</p><p>Use to display both a master and a detail page when the user should focus on the detail page.</p>"
                }
            ],
            "displayName": "sap.f.LayoutType",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.LayoutType",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.NavigationDirection",
            "basename": "NavigationDirection",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "NavigationDirection",
            "static": true,
            "visibility": "public",
            "since": "1.85",
            "description": "<p><p>Enumeration for different navigation directions.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'NavigationDirection'.</p></p>",
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.NavigationDirection.Down",
                    "visibility": "public",
                    "description": "<p>The direction is down.</p>"
                },
                {
                    "name": "sap.f.NavigationDirection.Left",
                    "visibility": "public",
                    "description": "<p>The direction is left.</p>"
                },
                {
                    "name": "sap.f.NavigationDirection.Right",
                    "visibility": "public",
                    "description": "<p>The direction is right.</p>"
                },
                {
                    "name": "sap.f.NavigationDirection.Up",
                    "visibility": "public",
                    "description": "<p>The direction is up.</p>"
                }
            ],
            "displayName": "sap.f.NavigationDirection",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.NavigationDirection",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.ProductSwitch",
            "basename": "ProductSwitch",
            "resource": "sap/f/ProductSwitch.js",
            "module": "sap/f/ProductSwitch",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.72",
            "extends": "sap.ui.core.Control",
            "description": "<p>A layout control that provides specific configuration about how the items should be displayed.</p>",
            "experimental": {
                "since": "1.72",
                "text": "This class is experimental and provides only limited functionality. Also the API might be changed in future."
            },
            "ui5-metadata": {
                "stereotype": "control",
                "aggregations": [
                    {
                        "name": "_gridContainer",
                        "singularName": "_gridContainer",
                        "type": "sap.f.GridContainer",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Holds the internally created GridContainer.</p>",
                        "methods": [
                            "get_gridContainer",
                            "destroy_gridContainer",
                            "set_gridContainer"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "items",
                        "singularName": "item",
                        "type": "sap.f.ProductSwitchItem",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p><code>ProductSwitch</code> content.</p>",
                        "methods": [
                            "getItems",
                            "destroyItems",
                            "insertItem",
                            "addItem",
                            "removeItem",
                            "indexOfItem",
                            "removeAllItems"
                        ],
                        "linkEnabled": true
                    }
                ],
                "associations": [
                    {
                        "name": "selectedItem",
                        "singularName": "selectedItem",
                        "type": "sap.f.ProductSwitchItem",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>Sets or retrieves the selected item from the <code>items</code> aggregation.</p>",
                        "methods": [
                            "getSelectedItem",
                            "setSelectedItem"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>ProductSwitch</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.ProductSwitch(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "change",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "itemPressed",
                            "type": "sap.f.ProductSwitchItem",
                            "optional": false,
                            "description": "<p>Reference to the new item that has been selected.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.itemPressed",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fires when an unselected item is pressed.</p>"
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.ProductSwitchItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.ProductSwitchItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some item to the aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/addItem",
                    "code": "<pre>addItem(oItem) : this</pre>"
                },
                {
                    "name": "attachChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ProductSwitch</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ProductSwitch#events/change\">change</a> event of this <code>sap.f.ProductSwitch</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ProductSwitch</code> itself.</p><p>Fires when an unselected item is pressed.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/attachChange",
                    "code": "<pre>attachChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the items in the aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/destroyItems",
                    "code": "<pre>destroyItems() : this</pre>"
                },
                {
                    "name": "detachChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ProductSwitch#events/change\">change</a> event of this <code>sap.f.ProductSwitch</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/detachChange",
                    "code": "<pre>detachChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.ProductSwitch.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.ProductSwitch with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/sap.f.ProductSwitch.extend",
                    "code": "<pre>sap.f.ProductSwitch.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireChange",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "itemPressed",
                            "optional": true,
                            "description": "<p>Reference to the new item that has been selected.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.f.ProductSwitchItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.ProductSwitchItem"
                                }
                            ],
                            "phoneName": "mParameters.itemPressed",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ProductSwitch#events/change\">change</a> to attached listeners.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/fireChange",
                    "code": "<pre>fireChange(mParameters?) : this</pre>"
                },
                {
                    "name": "getItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.ProductSwitchItem[]",
                        "types": [
                            {
                                "value": "sap.f.ProductSwitchItem[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>.</p><p><code>ProductSwitch</code> content.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/getItems",
                    "code": "<pre>getItems() : sap.f.ProductSwitchItem[]</pre>"
                },
                {
                    "name": "sap.f.ProductSwitch.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.ProductSwitch.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/sap.f.ProductSwitch.getMetadata",
                    "code": "<pre>sap.f.ProductSwitch.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getSelectedItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>ID of the element which is the current target of the association <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getSelectedItem\">selectedItem</a>, or <code>null</code>.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/getSelectedItem",
                    "code": "<pre>getSelectedItem() : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "indexOfItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.f.ProductSwitchItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.ProductSwitchItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.f.ProductSwitchItem</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/indexOfItem",
                    "code": "<pre>indexOfItem(oItem) : int</pre>"
                },
                {
                    "name": "insertItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.ProductSwitchItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.ProductSwitchItem"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a item into the aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/insertItem",
                    "code": "<pre>insertItem(oItem, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.ProductSwitchItem[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.f.ProductSwitchItem[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/removeAllItems",
                    "code": "<pre>removeAllItems() : sap.f.ProductSwitchItem[]</pre>"
                },
                {
                    "name": "removeItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.ProductSwitchItem|null",
                        "description": "<p>The removed item or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.f.ProductSwitchItem",
                                "href": "api/sap.f.ProductSwitchItem",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vItem",
                            "optional": false,
                            "description": "<p>The item to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.f.ProductSwitchItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.ProductSwitchItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a item from the aggregation <a target=\"_self\" href=\"api/sap.f.ProductSwitch#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/removeItem",
                    "code": "<pre>removeItem(vItem) : sap.f.ProductSwitchItem|null</pre>"
                },
                {
                    "name": "setSelectedItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p><code>this</code> to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vItem",
                            "optional": false,
                            "description": "<p>New value for the <code>selectedItem</code> association. If an ID of a <code>sap.f.ProductSwitchItem</code> instance is given, the item with this ID becomes the <code>selectedItem</code> association. Alternatively, a <code>sap.f.ProductSwitchItem</code> instance may be given or <code>null</code> to clear the selection.</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.ID",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.ID"
                                },
                                {
                                    "value": "sap.f.ProductSwitchItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.ProductSwitchItem"
                                },
                                {
                                    "value": "null"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the <code>selectedItem</code> association.</p>",
                    "href": "api/sap.f.ProductSwitch#methods/setSelectedItem",
                    "code": "<pre>setSelectedItem(vItem) : this</pre>"
                }
            ],
            "displayName": "sap.f.ProductSwitch",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.ProductSwitch",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.ProductSwitchItem",
            "basename": "ProductSwitchItem",
            "resource": "sap/f/ProductSwitchItem.js",
            "module": "sap/f/ProductSwitchItem",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.72",
            "extends": "sap.ui.core.Control",
            "description": "<p>A control that is used as a child of <code>ProductSwitch</code></p><p><b>Note:</b> <code>ProductSwitchItem</code> is not supported when used outside of <code>ProductSwitch</code>.</p>",
            "experimental": {
                "since": "1.72",
                "text": "This class is experimental and provides only limited functionality. Also the API might be changed in future."
            },
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "src",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the icon to be displayed as graphical element within the <code>ProductSwitchItem</code>. It can be an icon from the SAP icon font.</p>",
                        "methods": [
                            "getSrc",
                            "setSrc"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "subTitle",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Determines the subtitle of the <code>ProductSwitchItem</code>.</p>",
                        "methods": [
                            "getSubTitle",
                            "setSubTitle"
                        ]
                    },
                    {
                        "name": "target",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Specifies a target where the <code>targetSrc</code> content must be open.</p><p>Options are the standard values for window.open() supported by browsers: <code>_self</code>, <code>_top</code>, <code>_blank</code>, <code>_parent</code>, <code>_search</code>. Alternatively, a frame name can be entered.</p>",
                        "methods": [
                            "getTarget",
                            "setTarget"
                        ]
                    },
                    {
                        "name": "targetSrc",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "description": "<p>Defines the <code>ProductSwitchItem</code> target URI. Supports standard hyperlink behavior.</p><p><b>Note:</b> Redirection is handled via application logic, by subscribing to the <a target=\"_self\" href=\"api/sap.f.ProductSwitch#events/change\">change</a> event of <code>sap.f.ProductSwitch</code>.</p>",
                        "methods": [
                            "getTargetSrc",
                            "setTargetSrc"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Determines the title of the <code>ProductSwitchItem</code>.</p>",
                        "methods": [
                            "getTitle",
                            "setTitle"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_icon",
                        "singularName": "_icon",
                        "type": "sap.ui.core.Icon",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Holds the internally created Icon.</p>",
                        "methods": [
                            "get_icon",
                            "destroy_icon",
                            "set_icon"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_title",
                        "singularName": "_title",
                        "type": "sap.m.Text",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Holds the internally created Text.</p>",
                        "methods": [
                            "get_title",
                            "destroy_title",
                            "set_title"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>ProductSwitchItem</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.ProductSwitchItem(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.ProductSwitchItem.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.ProductSwitchItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/sap.f.ProductSwitchItem.extend",
                    "code": "<pre>sap.f.ProductSwitchItem.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.ProductSwitchItem.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.ProductSwitchItem.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/sap.f.ProductSwitchItem.getMetadata",
                    "code": "<pre>sap.f.ProductSwitchItem.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>src</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getSrc\">src</a>.</p><p>Defines the icon to be displayed as graphical element within the <code>ProductSwitchItem</code>. It can be an icon from the SAP icon font.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/getSrc",
                    "code": "<pre>getSrc() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "getSubTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>subTitle</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getSubTitle\">subTitle</a>.</p><p>Determines the subtitle of the <code>ProductSwitchItem</code>.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/getSubTitle",
                    "code": "<pre>getSubTitle() : string</pre>"
                },
                {
                    "name": "getTarget",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>target</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getTarget\">target</a>.</p><p>Specifies a target where the <code>targetSrc</code> content must be open.</p><p>Options are the standard values for window.open() supported by browsers: <code>_self</code>, <code>_top</code>, <code>_blank</code>, <code>_parent</code>, <code>_search</code>. Alternatively, a frame name can be entered.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/getTarget",
                    "code": "<pre>getTarget() : string</pre>"
                },
                {
                    "name": "getTargetSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>targetSrc</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getTargetSrc\">targetSrc</a>.</p><p>Defines the <code>ProductSwitchItem</code> target URI. Supports standard hyperlink behavior.</p><p><b>Note:</b> Redirection is handled via application logic, by subscribing to the <a target=\"_self\" href=\"api/sap.f.ProductSwitch#events/change\">change</a> event of <code>sap.f.ProductSwitch</code>.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/getTargetSrc",
                    "code": "<pre>getTargetSrc() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "getTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>title</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getTitle\">title</a>.</p><p>Determines the title of the <code>ProductSwitchItem</code>.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/getTitle",
                    "code": "<pre>getTitle() : string</pre>"
                },
                {
                    "name": "setSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSrc",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>src</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getSrc\">src</a>.</p><p>Defines the icon to be displayed as graphical element within the <code>ProductSwitchItem</code>. It can be an icon from the SAP icon font.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/setSrc",
                    "code": "<pre>setSrc(sSrc?) : this</pre>"
                },
                {
                    "name": "setSubTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSubTitle",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>subTitle</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getSubTitle\">subTitle</a>.</p><p>Determines the subtitle of the <code>ProductSwitchItem</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/setSubTitle",
                    "code": "<pre>setSubTitle(sSubTitle?) : this</pre>"
                },
                {
                    "name": "setTarget",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTarget",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>target</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getTarget\">target</a>.</p><p>Specifies a target where the <code>targetSrc</code> content must be open.</p><p>Options are the standard values for window.open() supported by browsers: <code>_self</code>, <code>_top</code>, <code>_blank</code>, <code>_parent</code>, <code>_search</code>. Alternatively, a frame name can be entered.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/setTarget",
                    "code": "<pre>setTarget(sTarget?) : this</pre>"
                },
                {
                    "name": "setTargetSrc",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTargetSrc",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>targetSrc</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getTargetSrc\">targetSrc</a>.</p><p>Defines the <code>ProductSwitchItem</code> target URI. Supports standard hyperlink behavior.</p><p><b>Note:</b> Redirection is handled via application logic, by subscribing to the <a target=\"_self\" href=\"api/sap.f.ProductSwitch#events/change\">change</a> event of <code>sap.f.ProductSwitch</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/setTargetSrc",
                    "code": "<pre>setTargetSrc(sTargetSrc?) : this</pre>"
                },
                {
                    "name": "setTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTitle",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>title</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ProductSwitchItem#methods/getTitle\">title</a>.</p><p>Determines the title of the <code>ProductSwitchItem</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.ProductSwitchItem#methods/setTitle",
                    "code": "<pre>setTitle(sTitle?) : this</pre>"
                }
            ],
            "displayName": "sap.f.ProductSwitchItem",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.ProductSwitchItem",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.routing.Router",
            "basename": "Router",
            "resource": "sap/f/routing/Router.js",
            "module": "sap/f/routing/Router",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "extends": "sap.ui.core.routing.Router",
            "description": "<p>The <code>sap.f.routing.Router</code> class is intended to be used with <code><a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout\">sap.f.FlexibleColumnLayout</a></code> as a root control.</p><p>The difference to the <code><a target=\"_self\" href=\"api/sap.ui.core.routing.Router\">sap.ui.core.routing.Router</a></code> are the <code>level</code>, <code>transition</code>, and <code>transitionParameters</code> properties that you can specify in every Route or Target created by this router.</p><p>The difference to the <code><a target=\"_self\" href=\"api/sap.m.routing.Router\">sap.m.routing.Router</a></code> is the additional <code>layout</code> property that can be specified in every Route, in which case it is applied to the root control. Also, the <code>sap.f.routing.Router</code> supports navigations that involve both change of <code><a target=\"_self\" href=\"api/sap.f.LayoutType\">sap.f.LayoutType</a></code> and change of the current page within a single column of the <code>sap.f.FlexibleColumnLayout</code>.</p><p>See <code><a target=\"_self\" href=\"api/sap.ui.core.routing.Router\">sap.ui.core.routing.Router</a></code> for the constructor arguments.</p>",
            "ui5-metadata": {
                "stereotype": "object"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "oRoutes",
                        "optional": true,
                        "description": "<p>may contain many Route configurations as <a target=\"_self\" href=\"api/sap.ui.core.routing.Route#constructor\">sap.ui.core.routing.Route#constructor</a>.</p>",
                        "phoneName": "oRoutes",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            },
                            {
                                "name": "object[]",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "oOwner",
                        "optional": true,
                        "description": "<p>the Component of all the views that will be created by this Router, will get forwarded to the <a target=\"_self\" href=\"api/sap.ui.core.routing.Views#constructor\">sap.ui.core.routing.Views#constructor</a>. If you are using the componentMetadata to define your routes you should skip this parameter.</p>",
                        "phoneName": "oOwner",
                        "depth": 0,
                        "types": [
                            {
                                "name": "sap.ui.core.UIComponent",
                                "linkEnabled": true
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "oTargetsConfig",
                        "optional": true,
                        "description": "<p>the target configuration, see <a target=\"_self\" href=\"api/sap.f.routing.Targets#constructor\">sap.f.routing.Targets#constructor</a> documentation (the options object).</p>",
                        "phoneName": "oTargetsConfig",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>sap.f.routing.Router</code>.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.routing.Router(oRoutes?, oOwner?, oTargetsConfig?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.routing.Router.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.routing.Router with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.routing.Router#methods/sap.ui.core.routing.Router.extend\">sap.ui.core.routing.Router.extend</a>.</p>",
                    "href": "api/sap.f.routing.Router#methods/sap.f.routing.Router.extend",
                    "code": "<pre>sap.f.routing.Router.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.routing.Router.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.base.Metadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.base.Metadata",
                                "href": "api/sap.ui.base.Metadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.routing.Router.</p>",
                    "href": "api/sap.f.routing.Router#methods/sap.f.routing.Router.getMetadata",
                    "code": "<pre>sap.f.routing.Router.getMetadata() : sap.ui.base.Metadata</pre>"
                },
                {
                    "name": "getTargetHandler",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.routing.TargetHandler",
                        "description": "<p>The <code>TargetHandler</code> instance</p>",
                        "types": [
                            {
                                "value": "sap.f.routing.TargetHandler",
                                "href": "api/sap.f.routing.TargetHandler",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns the <code>TargetHandler</code> instance.</p>",
                    "href": "api/sap.f.routing.Router#methods/getTargetHandler",
                    "code": "<pre>getTargetHandler() : sap.f.routing.TargetHandler</pre>"
                }
            ],
            "displayName": "sap.f.routing.Router",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.routing.Router",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.routing.TargetHandler",
            "basename": "TargetHandler",
            "resource": "sap/f/routing/TargetHandler.js",
            "module": "sap/f/routing/TargetHandler",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "extends": "sap.ui.base.Object",
            "description": "<p>Used for closing dialogs and showing transitions in <code>NavContainers</code> when targets are displayed.</p><p><b>Note:</b> You should not create an own instance of this class. It is created when using <code><a target=\"_self\" href=\"api/sap.f.routing.Router\">sap.f.routing.Router</a></code> or <code><a target=\"_self\" href=\"api/sap.f.routing.Targets\">sap.f.routing.Targets</a></code>.</p><p><b>Note:</b> You may use the <code><a target=\"_self\" href=\"api/sap.f.routing.TargetHandler#methods/setCloseDialogs\">#setCloseDialogs</a></code> function to specify if dialogs should be closed on displaying other views. The dialogs are closed when a different target is displayed than the previously displayed one, otherwise the dialogs are kept open.</p>",
            "ui5-metadata": {
                "stereotype": "object"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "closeDialogs",
                        "optional": false,
                        "description": "<p>Closes all open dialogs before navigating to a different target, if set to <code>true</code> (default). If set to <code>false</code>, it will just navigate without closing dialogs.</p>",
                        "phoneName": "closeDialogs",
                        "depth": 0,
                        "types": [
                            {
                                "name": "boolean",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>TargetHandler</code>.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.routing.TargetHandler(closeDialogs)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.routing.TargetHandler.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.base.Object#methods/sap.ui.base.Object.extend\">sap.ui.base.Object.extend</a>.</p>",
                    "href": "api/sap.f.routing.TargetHandler#methods/sap.f.routing.TargetHandler.extend",
                    "code": "<pre>sap.f.routing.TargetHandler.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getCloseDialogs",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>A flag indication if dialogs will be closed</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets if a navigation should close dialogs.</p>",
                    "href": "api/sap.f.routing.TargetHandler#methods/getCloseDialogs",
                    "code": "<pre>getCloseDialogs() : boolean</pre>"
                },
                {
                    "name": "sap.f.routing.TargetHandler.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.base.Metadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.base.Metadata",
                                "href": "api/sap.ui.base.Metadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.routing.TargetHandler.</p>",
                    "href": "api/sap.f.routing.TargetHandler#methods/sap.f.routing.TargetHandler.getMetadata",
                    "code": "<pre>sap.f.routing.TargetHandler.getMetadata() : sap.ui.base.Metadata</pre>"
                },
                {
                    "name": "setCloseDialogs",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>For chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bCloseDialogs",
                            "optional": false,
                            "description": "<p>Close dialogs if <code>true</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets if a navigation should close dialogs.</p><p><b>Note:</b> The dialogs are closed when a different target is displayed than the previous one, otherwise the dialogs are kept open even when <code>bCloseDialogs</code> is <code>true</code>.</p>",
                    "href": "api/sap.f.routing.TargetHandler#methods/setCloseDialogs",
                    "code": "<pre>setCloseDialogs(bCloseDialogs) : this</pre>"
                },
                {
                    "name": "showPlaceholder",
                    "visibility": "restricted",
                    "allowedFor": [
                        "sap.ui.core.routing"
                    ],
                    "returnValue": {
                        "type": "Promise",
                        "description": "<p>Promise that resolves after the placeholder is loaded</p>",
                        "types": [
                            {
                                "value": "Promise"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mSettings",
                            "optional": false,
                            "description": "<p>Object containing the container control and the view object to display</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "container",
                            "optional": false,
                            "description": "<p>The navigation target container</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "phoneName": "mSettings.container",
                            "defaultValue": ""
                        },
                        {
                            "name": "object",
                            "optional": false,
                            "description": "<p>The component/view object</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                },
                                {
                                    "value": "Promise"
                                }
                            ],
                            "phoneName": "mSettings.object",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Calls the 'showPlaceholder' method of the respective target container control depending on whether a placeholder is needed or not.</p>",
                    "href": "api/sap.f.routing.TargetHandler#methods/showPlaceholder",
                    "code": "<pre>showPlaceholder(mSettings) : Promise</pre>"
                }
            ],
            "displayName": "sap.f.routing.TargetHandler",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.routing.TargetHandler",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.routing.Targets",
            "basename": "Targets",
            "resource": "sap/f/routing/Targets.js",
            "module": "sap/f/routing/Targets",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46",
            "extends": "sap.ui.core.routing.Targets",
            "description": "<p>Provides a convenient way for placing views into the correct containers of your app.</p><p>The <code>sap.f</code> extension of <code>Targets</code> also handles the triggering of page navigation when the target control is an <code><a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout\">sap.f.FlexibleColumnLayout</a></code>. Other controls are also allowed, but the extra parameters <code>level</code>, <code>transition</code>, and <code>transitionParameters</code> are ignored and it behaves as <code><a target=\"_self\" href=\"api/sap.ui.core.routing.Targets\">sap.ui.core.routing.Targets</a></code>.</p><p>When a target is displayed, dialogs are being closed. To change this, use <code><a target=\"_self\" href=\"api/sap.f.routing.Targets#methods/getTargetHandler\">#getTargetHandler</a></code> and <a target=\"_self\" href=\"api/sap.f.routing.TargetHandler#methods/setCloseDialogs\">sap.f.routing.TargetHandler#setCloseDialogs</a>.</p>",
            "ui5-metadata": {
                "stereotype": "object"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "oOptions",
                        "optional": false,
                        "phoneName": "oOptions",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "views",
                        "optional": false,
                        "description": "<p>the views instance will create the views of all the targets defined, so if 2 targets have the same name, the same instance of the view will be displayed.</p>",
                        "phoneName": "oOptions.views",
                        "depth": 1,
                        "types": [
                            {
                                "name": "sap.ui.core.routing.Views",
                                "linkEnabled": true
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "config",
                        "optional": true,
                        "description": "<p>This config allows all the values oOptions.targets.anyName allows, these will be the default values for properties used in the target.</p><p>For example, if you are only using xmlViews in your app you can specify viewType=\"XML\" so you don't have to repeat this in every target.</p><p>If a target specifies viewType=\"JS\", the JS will be stronger than the XML here is an example.</p><p><pre>\n<code>\n{\n    config: {\n        viewType : \"XML\"\n    }\n    targets : {\n        xmlTarget : {\n            ...\n        },\n        jsTarget : {\n            viewType : \"JS\"\n            ...\n        }\n    }\n}\n</code>\n</pre> Then the effective config that will be used looks like this: <pre>\n<code>\n{\n    xmlTarget : {\n        // coming from the defaults\n        viewType : \"XML\"\n        ...\n    },\n    jsTarget : {\n       // XML is overwritten by the \"JS\" of the targets property\n       viewType : \"JS\"\n      ...\n    }\n}\n</code>\n</pre></p>",
                        "phoneName": "oOptions.config",
                        "depth": 1,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "rootView",
                        "optional": true,
                        "description": "<p>The ID of the <code>rootView</code>.</p><p>This should be the ID of the view that contains the control with the <code>controlId</code> since the control will be retrieved by calling the <a target=\"_self\" href=\"api/sap.ui.core.mvc.View#methods/byId\">sap.ui.core.mvc.View#byId</a> function of the rootView.</p><p>If you are using a component and add the routing.targets, <b>do not set this parameter</b>, since the component will set the rootView to the view created by the <a target=\"_self\" href=\"api/sap.ui.core.UIComponent#methods/createContent\">sap.ui.core.UIComponent#createContent</a> function.</p><p>If you specify the \"parent\" property of a target, the control will not be searched in the root view but in the view created by the parent (see parent documentation).</p>",
                        "phoneName": "oOptions.config.rootView",
                        "depth": 2,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "async",
                        "optional": true,
                        "defaultValue": false,
                        "description": "<p>Whether the views which are created through this <code>Targets</code> are loaded asynchronously. This option can be set only when the <code>Targets</code> is used standalone without the involvement of a Router. Otherwise, the async option is inherited from the Router.</p>",
                        "phoneName": "oOptions.config.async",
                        "depth": 2,
                        "types": [
                            {
                                "name": "boolean",
                                "linkEnabled": false
                            }
                        ]
                    },
                    {
                        "name": "targets",
                        "optional": false,
                        "description": "<p>One or multiple targets in a map.</p>",
                        "phoneName": "oOptions.targets",
                        "depth": 1,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "anyName",
                        "optional": false,
                        "description": "<p>A new target, the key severs as a name.</p><p>Example: <pre>\n<code>\n{\n    targets: {\n        welcome: {\n            type: \"View\",\n            name: \"Welcome\",\n            viewType: \"XML\",\n            ....\n            // Other target parameters\n        },\n        goodbye: {\n            type: \"View\",\n            name: \"Bye\",\n            viewType: \"JS\",\n            ....\n            // Other target parameters\n        }\n    }\n}\n</code>\n</pre></p><p>This creates two targets named 'welcome' and 'goodbye'. You can display both of them or one of them using the <code><a target=\"_self\" href=\"api/sap.f.routing.Targets#methods/display\">#display</a></code> function.</p>",
                        "phoneName": "oOptions.targets.anyName",
                        "depth": 2,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "type",
                        "optional": false,
                        "description": "<p>Defines whether the target creates an instance of 'View' or 'Component'.</p>",
                        "phoneName": "oOptions.targets.anyName.type",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "name",
                        "optional": true,
                        "description": "<p>Defines the name of the View or Component that will be created. For type 'Component', use option <code>usage</code> instead if an owner component exists. To place the view or component into a Control, use the options <code>controlAggregation</code> and <code>controlId</code>. Instance of View or Component will only be created once per <code>name</code> or <code>usage</code> combined with <code>id</code>. <pre>\n<code>\n{\n    targets: {\n        // If display(\"masterWelcome\") is called, the master view will be placed in the 'MasterPages' of a control with the id splitContainter\n        masterWelcome: {\n            type: \"View\",\n            name: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"masterPages\"\n        },\n        // If display(\"detailWelcome\") is called after the masterWelcome, the view will be removed from the master pages and added to the detail pages, since the same instance is used. Also the controls inside of the view will have the same state.\n        detailWelcome: {\n            // same view here, that's why the same instance is used\n            type: \"View\",\n            name: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"detailPages\"\n        }\n    }\n}\n</code>\n</pre></p><p>If you want to have a second instance of the welcome view you can assign the targets with different ids:</p><p><pre>\n<code>\n{\n    targets: {\n        // If display(\"masterWelcome\") is called, the \"masterWelcome\" view will be placed in the 'MasterPages' of a control with the id splitContainter\n        masterWelcome: {\n            type: \"View\",\n            name: \"Welcome\",\n            id: \"masterWelcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"masterPages\"\n        },\n        // If display(\"detailWelcome\") is called after the \"masterWelcome\", a second instance with an own controller instance will be added in the detail pages.\n        detailWelcome: {\n            type: \"View\",\n            name: \"Welcome\",\n            // another instance will be created because a different id is used\n            id: \"detailWelcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"detailPages\"\n        }\n    }\n}\n</code>\n</pre></p>",
                        "phoneName": "oOptions.targets.anyName.name",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "usage",
                        "optional": true,
                        "description": "<p>Defines the 'usage' name for 'Component' target which refers to the '/sap.ui5/componentUsages' entry in the owner component's manifest.</p>",
                        "phoneName": "oOptions.targets.anyName.usage",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "viewType",
                        "optional": true,
                        "defaultValue": "oOptions.config.viewType",
                        "description": "<p>The type of the view that is going to be created. These are the supported types: <a target=\"_self\" href=\"api/sap.ui.core.mvc.ViewType\">sap.ui.core.mvc.ViewType</a>. You always have to provide a viewType except if <code>oOptions.config.viewType</code> is set or when using <a target=\"_self\" href=\"api/sap.ui.core.routing.Views#methods/setView\">sap.ui.core.routing.Views#setView</a>.</p>",
                        "phoneName": "oOptions.targets.anyName.viewType",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ]
                    },
                    {
                        "name": "path",
                        "optional": true,
                        "description": "<p>A prefix that is prepended in front of the <code>name</code>.</p><p><b>Example:</b> <code>name</code> is set to \"myView\" and <code>path</code> is set to \"myApp\" - the created view's name will be \"myApp.myView\".</p>",
                        "phoneName": "oOptions.targets.anyName.path",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "id",
                        "optional": true,
                        "description": "<p>The ID of the created view or component. This is is prefixed with the ID of the component set to the views instance provided in <code>oOptions.views</code>. For details, see <code><a target=\"_self\" href=\"api/sap.ui.core.routing.Views#methods/getView\">sap.ui.core.routing.Views#getView</a></code>.</p>",
                        "phoneName": "oOptions.targets.anyName.id",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "targetParent",
                        "optional": true,
                        "description": "<p>The ID of the parent of the <code>controlId</code>.</p><p>This should be the ID of the view that contains your <code>controlId</code> since the target control is retrieved by calling the <code><a target=\"_self\" href=\"api/sap.ui.core.mvc.View#methods/byId\">sap.ui.core.mvc.View#byId</a></code> function of the <code>targetParent</code>. By default, this is the view created by a component, so you do not have to provide this parameter. If you are using children, the view created by the parent of the child is taken. You only need to specify this, if you are not using a <code>Targets</code> instance created by a component and you should give the ID of root view of your app to this property.</p>",
                        "phoneName": "oOptions.targets.anyName.targetParent",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "controlId",
                        "optional": true,
                        "description": "<p>The ID of the control where you want to place the view created by this target. The view of the target will be put into this container Control, using the controlAggregation property. You have to specify both properties or the target will not be able to place itself. An example for containers are <a target=\"_self\" href=\"api/sap.ui.ux3.Shell\">sap.ui.ux3.Shell</a> with the aggregation 'content' or a <a target=\"_self\" href=\"api/sap.m.NavContainer\">sap.m.NavContainer</a> with the aggregation 'pages'.</p>",
                        "phoneName": "oOptions.targets.anyName.controlId",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "controlAggregation",
                        "optional": true,
                        "description": "<p>The name of an aggregation of the <code>controlId</code>, that contains views. For example, an <code><a target=\"_self\" href=\"api/sap.m.NavContainer\">sap.m.NavContainer</a></code> has a <code>pages</code> aggregation and an <code><a target=\"_self\" href=\"api/sap.ui.ux3.Shell\">sap.ui.ux3.Shell</a></code> it has a <code>content</code> aggregation.</p>",
                        "phoneName": "oOptions.targets.anyName.controlAggregation",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "clearControlAggregation",
                        "optional": true,
                        "description": "<p>Defines a boolean that can be passed to specify if the aggregation should be cleared - all items will be removed - before adding the View to it. When using a <a target=\"_self\" href=\"api/sap.ui.ux3.Shell\">sap.ui.ux3.Shell</a> this should be true. For a <a target=\"_self\" href=\"api/sap.m.NavContainer\">sap.m.NavContainer</a> it should be false. When you use the <a target=\"_self\" href=\"api/sap.f.routing.Router\">sap.f.routing.Router</a> the default will be false.</p>",
                        "phoneName": "oOptions.targets.anyName.clearControlAggregation",
                        "depth": 3,
                        "types": [
                            {
                                "name": "boolean",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "parent",
                        "optional": true,
                        "description": "<p>A reference to another target, using the name of the target. If you display a target that has a parent, the parent will also be displayed. Also the control you specify with the controlId parameter, will be searched inside of the view of the parent not in the rootView, provided in the config. The control will be searched using the byId function of a view. When it is not found, the global id is checked.</p><p>The main usecase for the parent property is placing a view inside a smaller container of a view, which is also created by targets. This is useful for lazy loading views, only if the user really navigates to this part of your application.</p><p><b>Example:</b> Our aim is to lazy load a tab of an IconTabBar (a control that displays a view initially and when a user clicks on it the view changes). It's a perfect candidate to lazy load something inside of it.</p><p><b>Example app structure:</b></p><p>We have a <code>rootView</code> that is returned by the <code>createContent</code> function of our <code>UIComponent</code>. This view contains an <code>sap.m.App</code> control with the ID 'myApp' <pre>\n<code>\n&lt;View xmlns=\"sap.m\"&gt;\n    &lt;App id=\"myApp\"/&gt;\n&lt;/View&gt;\n</code>\n</pre> an xml view called 'Detail' <pre>\n<code>\n&lt;View xmlns=\"sap.m\"&gt;\n    &lt;IconTabBar&gt;\n        &lt;items&gt;\n            &lt;IconTabFilter&gt;\n                &lt;!-- content of our first tab --&gt;\n            &lt;IconTabFilter&gt;\n            &lt;IconTabFilter id=\"mySecondTab\"&gt;\n                &lt;!-- nothing here, since we will lazy load this one with a target --&gt;\n            &lt;IconTabFilter&gt;\n        &lt;/items&gt;\n    &lt;/IconTabBar&gt;\n&lt;/View&gt;\n</code>\n</pre> and a view called 'SecondTabContent', this one contains our content we want to have lazy loaded. Now we need to create our <code>Targets</code> instance with a config matching our app: <pre>\n<code>\n    new Targets({\n        //Creates our views except for root, we created this one before - when using a component you\n        views: new Views(),\n        config: {\n            // all of our views have that type\n            viewType: 'XML',\n            // a reference to the app control in the rootView created by our UIComponent\n            controlId: 'myApp',\n            // An app has a pages aggregation where the views need to be put into\n            controlAggregation: 'pages',\n            // all targets have type \"View\"\n            type: \"View\"\n        },\n        targets: {\n            detail: {\n                name: 'Detail'\n            },\n            secondTabContent: {\n                // A reference to the detail target defined above\n                parent: 'detail',\n                // A reference to the second Tab container in the Detail view. Here the target does not look in the rootView, it looks in the Parent view (Detail).\n                controlId: 'mySecondTab',\n                // An IconTabFilter has an aggregation called content so we need to overwrite the pages set in the config as default.\n                controlAggregation: 'content',\n                // A view containing the content\n                name: 'SecondTabContent'\n            }\n        }\n    });\n</code>\n</pre></p><p>Now, if we call <code> oTargets.display(\"secondTabContent\") </code>, 2 views will be created: Detail and SecondTabContent. The 'Detail' view will be put into the pages aggregation of the App. And afterwards the 'SecondTabContent' view will be put into the content Aggregation of the second IconTabFilter. So a parent will always be created before the target referencing it.</p>",
                        "phoneName": "oOptions.targets.anyName.parent",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "level",
                        "optional": true,
                        "description": "<p>If you are having an application that has a logical order of views (eg: a create account process, first provide user data, then review and confirm them). You always want to show a backwards transition if a navigation from the confirm to the userData page takes place. Therefore you may use the <code>level</code>. The <code>level</code> has to be an integer. The user data page should have a lower number than the confirm page. These levels should represent the user process of your application and they do not have to match the container structure of your Targets. If the user navigates between targets with the same <code>level</code>, a forward transition is taken. If you pass a direction into the display function, the <code>level</code> will be ignored.</p><p><b>Example:</b></p><p><pre>\n<code>\n    {\n        targets: {\n            startPage: {\n                level: 0\n                // more properties\n            },\n            userData: {\n                level: 1\n                // more properties\n            },\n            confirmRegistration: {\n                level: 2\n                // more properties\n            },\n            settings: {\n                //no view level here\n            }\n        }\n    }\n</code>\n</pre></p><p>Currently the 'userData' target is displayed. <ul> <li> If we navigate to 'startPage' the navContainer will show a backwards navigation, since the <code>level</code> is lower. </li> <li> If we navigate to 'userData' the navContainer will show a forwards navigation, since the <code>level</code> is higher. </li> <li> If we navigate to 'settings' the navContainer will show a forwards navigation, since the <code>level</code> is not defined and cannot be compared. </li> </ul></p>",
                        "phoneName": "oOptions.targets.anyName.level",
                        "depth": 3,
                        "types": [
                            {
                                "name": "int",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "transition",
                        "optional": true,
                        "description": "<p>Defines which transition of the <a target=\"_self\" href=\"api/sap.m.NavContainer\">sap.m.NavContainer</a> is applied when navigating. If it is not defined, the <code>NavContainer</code> take its default transition.</p>",
                        "phoneName": "oOptions.targets.anyName.transition",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "transitionParameters",
                        "optional": true,
                        "description": "<p>Defines the <code>transitionParameters</code> of the <code><a target=\"_self\" href=\"api/sap.m.NavContainer\">sap.m.NavContainer</a></code></p>",
                        "phoneName": "oOptions.targets.anyName.transitionParameters",
                        "depth": 3,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>Targets</code> class.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.routing.Targets(oOptions)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.routing.Targets.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.routing.Targets#methods/sap.ui.core.routing.Targets.extend\">sap.ui.core.routing.Targets.extend</a>.</p>",
                    "href": "api/sap.f.routing.Targets#methods/sap.f.routing.Targets.extend",
                    "code": "<pre>sap.f.routing.Targets.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.routing.Targets.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.base.Metadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.base.Metadata",
                                "href": "api/sap.ui.base.Metadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.routing.Targets.</p>",
                    "href": "api/sap.f.routing.Targets#methods/sap.f.routing.Targets.getMetadata",
                    "code": "<pre>sap.f.routing.Targets.getMetadata() : sap.ui.base.Metadata</pre>"
                },
                {
                    "name": "getTargetHandler",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.routing.TargetHandler",
                        "description": "<p>The <code>TargetHandler</code> instance</p>",
                        "types": [
                            {
                                "value": "sap.f.routing.TargetHandler",
                                "href": "api/sap.f.routing.TargetHandler",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns the <code>TargetHandler</code> instance.</p>",
                    "href": "api/sap.f.routing.Targets#methods/getTargetHandler",
                    "code": "<pre>getTargetHandler() : sap.f.routing.TargetHandler</pre>"
                }
            ],
            "displayName": "sap.f.routing.Targets",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.routing.Targets",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.SearchManager",
            "basename": "SearchManager",
            "resource": "sap/f/SearchManager.js",
            "module": "sap/f/SearchManager",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.67",
            "extends": "sap.ui.core.Element",
            "description": "<p>Defines specific properties of the search that are applied to <code>sap.f.ShellBar</code>.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "enableSuggestions",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>If true, a <code>suggest</code> event is fired when user types in the input and when the input is focused. On a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.</p>",
                        "methods": [
                            "getEnableSuggestions",
                            "setEnableSuggestions"
                        ]
                    },
                    {
                        "name": "enabled",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the control is enabled.</p>",
                        "methods": [
                            "getEnabled",
                            "setEnabled"
                        ]
                    },
                    {
                        "name": "maxLength",
                        "type": "int",
                        "defaultValue": 0,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines the maximum number of characters. Value '0' means the feature is switched off.</p>",
                        "methods": [
                            "getMaxLength",
                            "setMaxLength"
                        ]
                    },
                    {
                        "name": "placeholder",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines the text that is displayed when no value is available. The default placeholder text is the word \"Search\" in the current local language (if supported) or in English.</p>",
                        "methods": [
                            "getPlaceholder",
                            "setPlaceholder"
                        ]
                    },
                    {
                        "name": "value",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Data",
                        "visibility": "public",
                        "bindable": true,
                        "description": "<p>Defines the input value.</p>",
                        "methods": [
                            "getValue",
                            "setValue",
                            "bindValue",
                            "unbindValue"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "suggestionItems",
                        "singularName": "suggestionItem",
                        "type": "sap.m.SuggestionItem",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p><code>SuggestionItems</code> are the items which are displayed in the suggestions list. The following properties can be used: <ul> <li><code>key</code> - it is not displayed and may be used as internal technical field</li> <li><code>text</code> - it is displayed as normal suggestion text</li> <li><code>icon</code></li> <li><code>description</code> - additional text that may be used to visually display search item type or category</li> </ul></p>",
                        "methods": [
                            "getSuggestionItems",
                            "destroySuggestionItems",
                            "insertSuggestionItem",
                            "addSuggestionItem",
                            "removeSuggestionItem",
                            "indexOfSuggestionItem",
                            "removeAllSuggestionItems"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SearchManager</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.SearchManager(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "liveChange",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "newValue",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Current search string.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.newValue"
                        }
                    ],
                    "description": "<p>Fired when the value of the search field is changed by the user, for example at each key press.</p><p><b>Note:</b> Do not invalidate or re-render a focused search field, especially during the <code>liveChange</code> event.</p>"
                },
                {
                    "name": "search",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "optional": false,
                            "description": "<p>The search query string.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.query"
                        },
                        {
                            "name": "clearButtonPressed",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>Indicates if the user pressed the clear icon.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.clearButtonPressed"
                        }
                    ],
                    "description": "<p>Fired when the user triggers a search.</p>"
                },
                {
                    "name": "suggest",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "suggestValue",
                            "type": "string",
                            "optional": false,
                            "description": "<p>Current search string of the search field.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.suggestValue"
                        }
                    ],
                    "description": "<p>Fired when the search field is initially focused or its value is changed by the user. This event means that suggestion data should be updated, in case if suggestions are used. Use the value parameter to create new suggestions for it.</p>"
                }
            ],
            "methods": [
                {
                    "name": "addSuggestionItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSuggestionItem",
                            "optional": false,
                            "description": "<p>The suggestionItem to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.SuggestionItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.SuggestionItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some suggestionItem to the aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>.</p>",
                    "href": "api/sap.f.SearchManager#methods/addSuggestionItem",
                    "code": "<pre>addSuggestionItem(oSuggestionItem) : this</pre>"
                },
                {
                    "name": "attachLiveChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.SearchManager</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.SearchManager#events/liveChange\">liveChange</a> event of this <code>sap.f.SearchManager</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.SearchManager</code> itself.</p><p>Fired when the value of the search field is changed by the user, for example at each key press.</p><p><b>Note:</b> Do not invalidate or re-render a focused search field, especially during the <code>liveChange</code> event.</p>",
                    "href": "api/sap.f.SearchManager#methods/attachLiveChange",
                    "code": "<pre>attachLiveChange(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachSearch",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.SearchManager</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.SearchManager#events/search\">search</a> event of this <code>sap.f.SearchManager</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.SearchManager</code> itself.</p><p>Fired when the user triggers a search.</p>",
                    "href": "api/sap.f.SearchManager#methods/attachSearch",
                    "code": "<pre>attachSearch(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachSuggest",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.SearchManager</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.SearchManager#events/suggest\">suggest</a> event of this <code>sap.f.SearchManager</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.SearchManager</code> itself.</p><p>Fired when the search field is initially focused or its value is changed by the user. This event means that suggestion data should be updated, in case if suggestions are used. Use the value parameter to create new suggestions for it.</p>",
                    "href": "api/sap.f.SearchManager#methods/attachSuggest",
                    "code": "<pre>attachSuggest(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "bindValue",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oBindingInfo",
                            "optional": false,
                            "description": "<p>The binding information</p>",
                            "types": [
                                {
                                    "value": "sap.ui.base.ManagedObject.PropertyBindingInfo",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.base.ManagedObject.PropertyBindingInfo"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Binds property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getValue\">value</a> to model data.</p><p>See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#methods/bindProperty\">ManagedObject.bindProperty</a> for a detailed description of the possible properties of <code>oBindingInfo</code></p>",
                    "href": "api/sap.f.SearchManager#methods/bindValue",
                    "code": "<pre>bindValue(oBindingInfo) : this</pre>"
                },
                {
                    "name": "destroySuggestionItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the suggestionItems in the aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>.</p>",
                    "href": "api/sap.f.SearchManager#methods/destroySuggestionItems",
                    "code": "<pre>destroySuggestionItems() : this</pre>"
                },
                {
                    "name": "detachLiveChange",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.SearchManager#events/liveChange\">liveChange</a> event of this <code>sap.f.SearchManager</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.SearchManager#methods/detachLiveChange",
                    "code": "<pre>detachLiveChange(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachSearch",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.SearchManager#events/search\">search</a> event of this <code>sap.f.SearchManager</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.SearchManager#methods/detachSearch",
                    "code": "<pre>detachSearch(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachSuggest",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.SearchManager#events/suggest\">suggest</a> event of this <code>sap.f.SearchManager</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.SearchManager#methods/detachSuggest",
                    "code": "<pre>detachSuggest(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.SearchManager.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.SearchManager with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Element#methods/sap.ui.core.Element.extend\">sap.ui.core.Element.extend</a>.</p>",
                    "href": "api/sap.f.SearchManager#methods/sap.f.SearchManager.extend",
                    "code": "<pre>sap.f.SearchManager.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireLiveChange",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "newValue",
                            "optional": true,
                            "description": "<p>Current search string.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.newValue",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.SearchManager#events/liveChange\">liveChange</a> to attached listeners.</p>",
                    "href": "api/sap.f.SearchManager#methods/fireLiveChange",
                    "code": "<pre>fireLiveChange(mParameters?) : this</pre>"
                },
                {
                    "name": "fireSearch",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "query",
                            "optional": true,
                            "description": "<p>The search query string.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.query",
                            "defaultValue": ""
                        },
                        {
                            "name": "clearButtonPressed",
                            "optional": true,
                            "description": "<p>Indicates if the user pressed the clear icon.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.clearButtonPressed",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.SearchManager#events/search\">search</a> to attached listeners.</p>",
                    "href": "api/sap.f.SearchManager#methods/fireSearch",
                    "code": "<pre>fireSearch(mParameters?) : this</pre>"
                },
                {
                    "name": "fireSuggest",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "suggestValue",
                            "optional": true,
                            "description": "<p>Current search string of the search field.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "phoneName": "mParameters.suggestValue",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.SearchManager#events/suggest\">suggest</a> to attached listeners.</p>",
                    "href": "api/sap.f.SearchManager#methods/fireSuggest",
                    "code": "<pre>fireSuggest(mParameters?) : this</pre>"
                },
                {
                    "name": "getEnabled",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>enabled</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getEnabled\">enabled</a>.</p><p>Determines whether the control is enabled.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.SearchManager#methods/getEnabled",
                    "code": "<pre>getEnabled() : boolean</pre>"
                },
                {
                    "name": "getEnableSuggestions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>enableSuggestions</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getEnableSuggestions\">enableSuggestions</a>.</p><p>If true, a <code>suggest</code> event is fired when user types in the input and when the input is focused. On a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.SearchManager#methods/getEnableSuggestions",
                    "code": "<pre>getEnableSuggestions() : boolean</pre>"
                },
                {
                    "name": "getMaxLength",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>maxLength</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getMaxLength\">maxLength</a>.</p><p>Determines the maximum number of characters. Value '0' means the feature is switched off.</p><p>Default value is <code>0</code>.</p>",
                    "href": "api/sap.f.SearchManager#methods/getMaxLength",
                    "code": "<pre>getMaxLength() : int</pre>"
                },
                {
                    "name": "sap.f.SearchManager.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.SearchManager.</p>",
                    "href": "api/sap.f.SearchManager#methods/sap.f.SearchManager.getMetadata",
                    "code": "<pre>sap.f.SearchManager.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getPlaceholder",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>placeholder</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getPlaceholder\">placeholder</a>.</p><p>Defines the text that is displayed when no value is available. The default placeholder text is the word \"Search\" in the current local language (if supported) or in English.</p>",
                    "href": "api/sap.f.SearchManager#methods/getPlaceholder",
                    "code": "<pre>getPlaceholder() : string</pre>"
                },
                {
                    "name": "getSuggestionItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.SuggestionItem[]",
                        "types": [
                            {
                                "value": "sap.m.SuggestionItem[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>.</p><p><code>SuggestionItems</code> are the items which are displayed in the suggestions list. The following properties can be used: <ul> <li><code>key</code> - it is not displayed and may be used as internal technical field</li> <li><code>text</code> - it is displayed as normal suggestion text</li> <li><code>icon</code></li> <li><code>description</code> - additional text that may be used to visually display search item type or category</li> </ul></p>",
                    "href": "api/sap.f.SearchManager#methods/getSuggestionItems",
                    "code": "<pre>getSuggestionItems() : sap.m.SuggestionItem[]</pre>"
                },
                {
                    "name": "getValue",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>value</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getValue\">value</a>.</p><p>Defines the input value.</p>",
                    "href": "api/sap.f.SearchManager#methods/getValue",
                    "code": "<pre>getValue() : string</pre>"
                },
                {
                    "name": "indexOfSuggestionItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSuggestionItem",
                            "optional": false,
                            "description": "<p>The suggestionItem whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.SuggestionItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.SuggestionItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.SuggestionItem</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.SearchManager#methods/indexOfSuggestionItem",
                    "code": "<pre>indexOfSuggestionItem(oSuggestionItem) : int</pre>"
                },
                {
                    "name": "insertSuggestionItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSuggestionItem",
                            "optional": false,
                            "description": "<p>The suggestionItem to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.SuggestionItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.SuggestionItem"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex</code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a suggestionItem into the aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>.</p>",
                    "href": "api/sap.f.SearchManager#methods/insertSuggestionItem",
                    "code": "<pre>insertSuggestionItem(oSuggestionItem, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllSuggestionItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.SuggestionItem[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.SuggestionItem[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.SearchManager#methods/removeAllSuggestionItems",
                    "code": "<pre>removeAllSuggestionItems() : sap.m.SuggestionItem[]</pre>"
                },
                {
                    "name": "removeSuggestionItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.SuggestionItem|null",
                        "description": "<p>The removed suggestionItem or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.SuggestionItem",
                                "href": "api/sap.m.SuggestionItem",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vSuggestionItem",
                            "optional": false,
                            "description": "<p>The suggestionItem to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.SuggestionItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.SuggestionItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a suggestionItem from the aggregation <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getSuggestionItems\">suggestionItems</a>.</p>",
                    "href": "api/sap.f.SearchManager#methods/removeSuggestionItem",
                    "code": "<pre>removeSuggestionItem(vSuggestionItem) : sap.m.SuggestionItem|null</pre>"
                },
                {
                    "name": "setEnabled",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bEnabled",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>enabled</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getEnabled\">enabled</a>.</p><p>Determines whether the control is enabled.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.SearchManager#methods/setEnabled",
                    "code": "<pre>setEnabled(bEnabled?) : this</pre>"
                },
                {
                    "name": "setEnableSuggestions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bEnableSuggestions",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>enableSuggestions</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getEnableSuggestions\">enableSuggestions</a>.</p><p>If true, a <code>suggest</code> event is fired when user types in the input and when the input is focused. On a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.SearchManager#methods/setEnableSuggestions",
                    "code": "<pre>setEnableSuggestions(bEnableSuggestions?) : this</pre>"
                },
                {
                    "name": "setMaxLength",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iMaxLength",
                            "optional": true,
                            "defaultValue": 0,
                            "description": "<p>New value for property <code>maxLength</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getMaxLength\">maxLength</a>.</p><p>Determines the maximum number of characters. Value '0' means the feature is switched off.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>0</code>.</p>",
                    "href": "api/sap.f.SearchManager#methods/setMaxLength",
                    "code": "<pre>setMaxLength(iMaxLength?) : this</pre>"
                },
                {
                    "name": "setPlaceholder",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sPlaceholder",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>placeholder</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getPlaceholder\">placeholder</a>.</p><p>Defines the text that is displayed when no value is available. The default placeholder text is the word \"Search\" in the current local language (if supported) or in English.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.SearchManager#methods/setPlaceholder",
                    "code": "<pre>setPlaceholder(sPlaceholder?) : this</pre>"
                },
                {
                    "name": "setValue",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sValue",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>value</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getValue\">value</a>.</p><p>Defines the input value.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.SearchManager#methods/setValue",
                    "code": "<pre>setValue(sValue?) : this</pre>"
                },
                {
                    "name": "unbindValue",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Unbinds property <a target=\"_self\" href=\"api/sap.f.SearchManager#methods/getValue\">value</a> from model data.</p>",
                    "href": "api/sap.f.SearchManager#methods/unbindValue",
                    "code": "<pre>unbindValue() : this</pre>"
                }
            ],
            "displayName": "sap.f.SearchManager",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.SearchManager",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.AddAction",
            "basename": "AddAction",
            "resource": "sap/f/semantic/AddAction.js",
            "module": "sap/f/semantic/AddAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>addAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>AddAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.AddAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.AddAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.AddAction#methods/sap.f.semantic.AddAction.extend",
                    "code": "<pre>sap.f.semantic.AddAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.AddAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.AddAction.</p>",
                    "href": "api/sap.f.semantic.AddAction#methods/sap.f.semantic.AddAction.getMetadata",
                    "code": "<pre>sap.f.semantic.AddAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.AddAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.AddAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.CloseAction",
            "basename": "CloseAction",
            "resource": "sap/f/semantic/CloseAction.js",
            "module": "sap/f/semantic/CloseAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>closeAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>CloseAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.CloseAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.CloseAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.CloseAction#methods/sap.f.semantic.CloseAction.extend",
                    "code": "<pre>sap.f.semantic.CloseAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.CloseAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.CloseAction.</p>",
                    "href": "api/sap.f.semantic.CloseAction#methods/sap.f.semantic.CloseAction.getMetadata",
                    "code": "<pre>sap.f.semantic.CloseAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.CloseAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.CloseAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.CopyAction",
            "basename": "CopyAction",
            "resource": "sap/f/semantic/CopyAction.js",
            "module": "sap/f/semantic/CopyAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>copyAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>CopyAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.CopyAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.CopyAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.CopyAction#methods/sap.f.semantic.CopyAction.extend",
                    "code": "<pre>sap.f.semantic.CopyAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.CopyAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.CopyAction.</p>",
                    "href": "api/sap.f.semantic.CopyAction#methods/sap.f.semantic.CopyAction.getMetadata",
                    "code": "<pre>sap.f.semantic.CopyAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.CopyAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.CopyAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.DeleteAction",
            "basename": "DeleteAction",
            "resource": "sap/f/semantic/DeleteAction.js",
            "module": "sap/f/semantic/DeleteAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>deleteAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>DeleteAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.DeleteAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.DeleteAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.DeleteAction#methods/sap.f.semantic.DeleteAction.extend",
                    "code": "<pre>sap.f.semantic.DeleteAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.DeleteAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.DeleteAction.</p>",
                    "href": "api/sap.f.semantic.DeleteAction#methods/sap.f.semantic.DeleteAction.getMetadata",
                    "code": "<pre>sap.f.semantic.DeleteAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.DeleteAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.DeleteAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.DiscussInJamAction",
            "basename": "DiscussInJamAction",
            "resource": "sap/f/semantic/DiscussInJamAction.js",
            "module": "sap/f/semantic/DiscussInJamAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>discussInJamAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>DiscussInJamAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.DiscussInJamAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.DiscussInJamAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.DiscussInJamAction#methods/sap.f.semantic.DiscussInJamAction.extend",
                    "code": "<pre>sap.f.semantic.DiscussInJamAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.DiscussInJamAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.DiscussInJamAction.</p>",
                    "href": "api/sap.f.semantic.DiscussInJamAction#methods/sap.f.semantic.DiscussInJamAction.getMetadata",
                    "code": "<pre>sap.f.semantic.DiscussInJamAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.DiscussInJamAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.DiscussInJamAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.EditAction",
            "basename": "EditAction",
            "resource": "sap/f/semantic/EditAction.js",
            "module": "sap/f/semantic/EditAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.50",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>editAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>EditAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.EditAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.EditAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.EditAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.EditAction#methods/sap.f.semantic.EditAction.extend",
                    "code": "<pre>sap.f.semantic.EditAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.EditAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.EditAction.</p>",
                    "href": "api/sap.f.semantic.EditAction#methods/sap.f.semantic.EditAction.getMetadata",
                    "code": "<pre>sap.f.semantic.EditAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.EditAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.EditAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.ExitFullScreenAction",
            "basename": "ExitFullScreenAction",
            "resource": "sap/f/semantic/ExitFullScreenAction.js",
            "module": "sap/f/semantic/ExitFullScreenAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>exitFullScreenAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>ExitFullScreenAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.ExitFullScreenAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.ExitFullScreenAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.ExitFullScreenAction#methods/sap.f.semantic.ExitFullScreenAction.extend",
                    "code": "<pre>sap.f.semantic.ExitFullScreenAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.ExitFullScreenAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.ExitFullScreenAction.</p>",
                    "href": "api/sap.f.semantic.ExitFullScreenAction#methods/sap.f.semantic.ExitFullScreenAction.getMetadata",
                    "code": "<pre>sap.f.semantic.ExitFullScreenAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.ExitFullScreenAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.ExitFullScreenAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.FavoriteAction",
            "basename": "FavoriteAction",
            "resource": "sap/f/semantic/FavoriteAction.js",
            "module": "sap/f/semantic/FavoriteAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticToggleButton",
            "description": "<p>A semantic-specific button, eligible for the <code>favoriteAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>FavoriteAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticToggleButton#constructor\">sap.f.semantic.SemanticToggleButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.FavoriteAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.FavoriteAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticToggleButton#methods/sap.f.semantic.SemanticToggleButton.extend\">sap.f.semantic.SemanticToggleButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.FavoriteAction#methods/sap.f.semantic.FavoriteAction.extend",
                    "code": "<pre>sap.f.semantic.FavoriteAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.FavoriteAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.FavoriteAction.</p>",
                    "href": "api/sap.f.semantic.FavoriteAction#methods/sap.f.semantic.FavoriteAction.getMetadata",
                    "code": "<pre>sap.f.semantic.FavoriteAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.FavoriteAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.FavoriteAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.FlagAction",
            "basename": "FlagAction",
            "resource": "sap/f/semantic/FlagAction.js",
            "module": "sap/f/semantic/FlagAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticToggleButton",
            "description": "<p>A semantic-specific button, eligible for the <code>flagAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>FlagAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticToggleButton#constructor\">sap.f.semantic.SemanticToggleButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.FlagAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.FlagAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticToggleButton#methods/sap.f.semantic.SemanticToggleButton.extend\">sap.f.semantic.SemanticToggleButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.FlagAction#methods/sap.f.semantic.FlagAction.extend",
                    "code": "<pre>sap.f.semantic.FlagAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.FlagAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.FlagAction.</p>",
                    "href": "api/sap.f.semantic.FlagAction#methods/sap.f.semantic.FlagAction.getMetadata",
                    "code": "<pre>sap.f.semantic.FlagAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.FlagAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.FlagAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.FooterMainAction",
            "basename": "FooterMainAction",
            "resource": "sap/f/semantic/FooterMainAction.js",
            "module": "sap/f/semantic/FooterMainAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.MainAction",
            "description": "<p>A semantic-specific button, eligible for the <code>footerMainAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>FooterMainAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.MainAction#constructor\">sap.f.semantic.MainAction</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.FooterMainAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.FooterMainAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.MainAction#methods/sap.f.semantic.MainAction.extend\">sap.f.semantic.MainAction.extend</a>.</p>",
                    "href": "api/sap.f.semantic.FooterMainAction#methods/sap.f.semantic.FooterMainAction.extend",
                    "code": "<pre>sap.f.semantic.FooterMainAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.FooterMainAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.FooterMainAction.</p>",
                    "href": "api/sap.f.semantic.FooterMainAction#methods/sap.f.semantic.FooterMainAction.getMetadata",
                    "code": "<pre>sap.f.semantic.FooterMainAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.FooterMainAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.FooterMainAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.FullScreenAction",
            "basename": "FullScreenAction",
            "resource": "sap/f/semantic/FullScreenAction.js",
            "module": "sap/f/semantic/FullScreenAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>fullScreenAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>FullScreenAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.FullScreenAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.FullScreenAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.FullScreenAction#methods/sap.f.semantic.FullScreenAction.extend",
                    "code": "<pre>sap.f.semantic.FullScreenAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.FullScreenAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.FullScreenAction.</p>",
                    "href": "api/sap.f.semantic.FullScreenAction#methods/sap.f.semantic.FullScreenAction.getMetadata",
                    "code": "<pre>sap.f.semantic.FullScreenAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.FullScreenAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.FullScreenAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.MainAction",
            "basename": "MainAction",
            "resource": "sap/f/semantic/MainAction.js",
            "module": "sap/f/semantic/MainAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>Serves as a base class for the <a target=\"_self\" href=\"api/sap.f.semantic.TitleMainAction\">sap.f.semantic.TitleMainAction</a> and <a target=\"_self\" href=\"api/sap.f.semantic.FooterMainAction\">sap.f.semantic.FooterMainAction</a> controls.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "text",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines <code>MainAction</code> text</p>",
                        "methods": [
                            "getText",
                            "setText"
                        ]
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new MainAction.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.MainAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.MainAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.MainAction#methods/sap.f.semantic.MainAction.extend",
                    "code": "<pre>sap.f.semantic.MainAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.MainAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.MainAction.</p>",
                    "href": "api/sap.f.semantic.MainAction#methods/sap.f.semantic.MainAction.getMetadata",
                    "code": "<pre>sap.f.semantic.MainAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>text</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.MainAction#methods/getText\">text</a>.</p><p>Defines <code>MainAction</code> text</p>",
                    "href": "api/sap.f.semantic.MainAction#methods/getText",
                    "code": "<pre>getText() : string</pre>"
                },
                {
                    "name": "setText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sText",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>text</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.MainAction#methods/getText\">text</a>.</p><p>Defines <code>MainAction</code> text</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.semantic.MainAction#methods/setText",
                    "code": "<pre>setText(sText?) : this</pre>"
                }
            ],
            "displayName": "sap.f.semantic.MainAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.MainAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.MessagesIndicator",
            "basename": "MessagesIndicator",
            "resource": "sap/f/semantic/MessagesIndicator.js",
            "module": "sap/f/semantic/MessagesIndicator",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>messagesIndicator</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>MessagesIndicator</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.MessagesIndicator(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.MessagesIndicator.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.MessagesIndicator#methods/sap.f.semantic.MessagesIndicator.extend",
                    "code": "<pre>sap.f.semantic.MessagesIndicator.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.MessagesIndicator.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.MessagesIndicator.</p>",
                    "href": "api/sap.f.semantic.MessagesIndicator#methods/sap.f.semantic.MessagesIndicator.getMetadata",
                    "code": "<pre>sap.f.semantic.MessagesIndicator.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.MessagesIndicator",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.MessagesIndicator",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.NegativeAction",
            "basename": "NegativeAction",
            "resource": "sap/f/semantic/NegativeAction.js",
            "module": "sap/f/semantic/NegativeAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>negativeAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "text",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines <code>NegativeAction</code> text. <b>Note:</b> the default text is \"Reject\"</p>",
                        "methods": [
                            "getText",
                            "setText"
                        ]
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>NegativeAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.NegativeAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.NegativeAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.NegativeAction#methods/sap.f.semantic.NegativeAction.extend",
                    "code": "<pre>sap.f.semantic.NegativeAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.NegativeAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.NegativeAction.</p>",
                    "href": "api/sap.f.semantic.NegativeAction#methods/sap.f.semantic.NegativeAction.getMetadata",
                    "code": "<pre>sap.f.semantic.NegativeAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>text</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.NegativeAction#methods/getText\">text</a>.</p><p>Defines <code>NegativeAction</code> text. <b>Note:</b> the default text is \"Reject\"</p>",
                    "href": "api/sap.f.semantic.NegativeAction#methods/getText",
                    "code": "<pre>getText() : string</pre>"
                },
                {
                    "name": "setText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sText",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>text</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.NegativeAction#methods/getText\">text</a>.</p><p>Defines <code>NegativeAction</code> text. <b>Note:</b> the default text is \"Reject\"</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.semantic.NegativeAction#methods/setText",
                    "code": "<pre>setText(sText?) : this</pre>"
                }
            ],
            "displayName": "sap.f.semantic.NegativeAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.NegativeAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.PositiveAction",
            "basename": "PositiveAction",
            "resource": "sap/f/semantic/PositiveAction.js",
            "module": "sap/f/semantic/PositiveAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>positiveAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "text",
                        "type": "string",
                        "defaultValue": "",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Defines <code>PositiveAction</code> text. <b>Note:</b> the default text is \"Accept\"</p>",
                        "methods": [
                            "getText",
                            "setText"
                        ]
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>PositiveAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.PositiveAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.PositiveAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.PositiveAction#methods/sap.f.semantic.PositiveAction.extend",
                    "code": "<pre>sap.f.semantic.PositiveAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.PositiveAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.PositiveAction.</p>",
                    "href": "api/sap.f.semantic.PositiveAction#methods/sap.f.semantic.PositiveAction.getMetadata",
                    "code": "<pre>sap.f.semantic.PositiveAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>text</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.PositiveAction#methods/getText\">text</a>.</p><p>Defines <code>PositiveAction</code> text. <b>Note:</b> the default text is \"Accept\"</p>",
                    "href": "api/sap.f.semantic.PositiveAction#methods/getText",
                    "code": "<pre>getText() : string</pre>"
                },
                {
                    "name": "setText",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sText",
                            "optional": true,
                            "defaultValue": "",
                            "description": "<p>New value for property <code>text</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.PositiveAction#methods/getText\">text</a>.</p><p>Defines <code>PositiveAction</code> text. <b>Note:</b> the default text is \"Accept\"</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>",
                    "href": "api/sap.f.semantic.PositiveAction#methods/setText",
                    "code": "<pre>setText(sText?) : this</pre>"
                }
            ],
            "displayName": "sap.f.semantic.PositiveAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.PositiveAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.PrintAction",
            "basename": "PrintAction",
            "resource": "sap/f/semantic/PrintAction.js",
            "module": "sap/f/semantic/PrintAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>printAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>PrintAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.PrintAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.PrintAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.PrintAction#methods/sap.f.semantic.PrintAction.extend",
                    "code": "<pre>sap.f.semantic.PrintAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.PrintAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.PrintAction.</p>",
                    "href": "api/sap.f.semantic.PrintAction#methods/sap.f.semantic.PrintAction.getMetadata",
                    "code": "<pre>sap.f.semantic.PrintAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.PrintAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.PrintAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.SemanticButton",
            "basename": "SemanticButton",
            "resource": "sap/f/semantic/SemanticButton.js",
            "module": "sap/f/semantic/SemanticButton",
            "export": "",
            "abstract": true,
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.m.semantic.SemanticButton",
            "description": "<p>A base class for the available semantic actions, such as <a target=\"_self\" href=\"api/sap.f.semantic.AddAction\">AddAction</a>, <a target=\"_self\" href=\"api/sap.f.semantic.CloseAction\">CloseAction</a>, etc.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SemanticButton</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.m.semantic.SemanticButton#constructor\">sap.m.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.SemanticButton(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.SemanticButton.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.semantic.SemanticButton#methods/sap.m.semantic.SemanticButton.extend\">sap.m.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend",
                    "code": "<pre>sap.f.semantic.SemanticButton.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.SemanticButton.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.SemanticButton.</p>",
                    "href": "api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.getMetadata",
                    "code": "<pre>sap.f.semantic.SemanticButton.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.SemanticButton",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "abstract class sap.f.semantic.SemanticButton",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.SemanticControl",
            "basename": "SemanticControl",
            "resource": "sap/f/semantic/SemanticControl.js",
            "module": "sap/f/semantic/SemanticControl",
            "export": "",
            "abstract": true,
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.ui.core.Element",
            "description": "<p>The base class for the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton\">sap.f.semantic.SemanticButton</a>.</p>",
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "visible",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the <code>SemanticControl</code> is visible.</p>",
                        "methods": [
                            "getVisible",
                            "setVisible"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_control",
                        "singularName": "_control",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Hidden aggregation.</p>",
                        "methods": [
                            "get_control",
                            "destroy_control",
                            "set_control"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SemanticControl</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.SemanticControl(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.SemanticControl.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Element#methods/sap.ui.core.Element.extend\">sap.ui.core.Element.extend</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticControl#methods/sap.f.semantic.SemanticControl.extend",
                    "code": "<pre>sap.f.semantic.SemanticControl.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.SemanticControl.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.SemanticControl.</p>",
                    "href": "api/sap.f.semantic.SemanticControl#methods/sap.f.semantic.SemanticControl.getMetadata",
                    "code": "<pre>sap.f.semantic.SemanticControl.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getVisible",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>visible</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticControl#methods/getVisible\">visible</a>.</p><p>Determines whether the <code>SemanticControl</code> is visible.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticControl#methods/getVisible",
                    "code": "<pre>getVisible() : boolean</pre>"
                },
                {
                    "name": "setVisible",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bVisible",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>visible</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticControl#methods/getVisible\">visible</a>.</p><p>Determines whether the <code>SemanticControl</code> is visible.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticControl#methods/setVisible",
                    "code": "<pre>setVisible(bVisible?) : this</pre>"
                }
            ],
            "displayName": "sap.f.semantic.SemanticControl",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "abstract class sap.f.semantic.SemanticControl",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.SemanticPage",
            "basename": "SemanticPage",
            "resource": "sap/f/semantic/SemanticPage.js",
            "module": "sap/f/semantic/SemanticPage",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.ui.core.Control",
            "description": "<p>Provides enhanced functionality by internally aggregating <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a> and contains controls with semantic-specific meaning.</p><h3>Overview</h3><p>Content specified in the <code>sap.f.semantic.SemanticPage</code> aggregations is automatically positioned in dedicated sections of the title or the footer of the page, depending on the control's semantics.</p><p>The actions in the <code>SemanticPage</code> title are grouped to text actions or icon actions. When an aggregation is set, the actions appear in the following predefined order (from left to right):</p><p><ul>Text actions: <li>The main semantic text action - <code>titleMainAction</code></li> <li>Any custom text actions - <code>titleCustomTextActions</code></li> <li>The semantic text actions - <code>editAction</code>, <code>deleteAction</code>, <code>copyAction</code> and <code>addAction</code></li></ul></p><p><ul>Icon actions: <li>Any custom icon actions - <code>titleCustomIconActions</code></li> <li>The simple semantic icon actions - <code>favoriteAction</code> and <code>flagAction</code></li> <li>The share menu semantic icon actions as a drop-down list with the following order: <ul><li><code>sendEmailAction</code></li> <li><code>discussInJamAction</code></li> <li><code>shareInJamAction</code></li> <li><code>sendMessageAction</code></li> <li><code>printAction</code></li> <li>Any <code>customShareActions</code></li></ul></li> <li>The navigation semantic actions - <code>fullScreenAction</code>, <code>exitFullScreenAction</code>, and <code>closeAction</code></li></ul></p><p>The actions in the <code>SemanticPage</code> footer are positioned either on its left or right area and have the following predefined order:</p><p><ul>Footer left area: <li>The semantic text action - <code>messagesIndicator</code></li> <li>The semantic label - <code>draftIndicator</code></li></ul></p><p><ul>Footer right area: <li>The main semantic text action - <code>footerMainAction</code></li> <li>The semantic text actions - <code>positiveAction</code> and <code>negativeAction</code></li> <li>Any custom text actions - <code>footerCustomActions</code></li></ul></p><h3>Usage</h3><p>Using the <code>SemanticPage</code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.</p><h3>Responsive behavior</h3><p>The responsive behavior of the <code>SemanticPage</code> depends on the behavior of the content that is displayed. To adjust the <code>SemanticPage</code> content padding, the <code>sapUiContentPadding</code>, <code>sapUiNoContentPadding</code>, and <code>sapUiResponsiveContentPadding</code> CSS classes can be used.<br><br><span>Documentation links:</span><ul><li><a target=\"_self\" href=\"topic/84f3d52f492648d5b594e4f45dca7727\">Semantic Pages</a></li><li><a target=\"_self\" href=\"topic/4a97a07ec8f5441d901994d82eaab1f5\">Semantic Page (sap.m)</a></li></ul></p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "fitContent",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "since": "1.73",
                        "description": "<p>Optimizes <code>SemanticPage</code> responsiveness on small screens and behavior when expanding/collapsing the <code>SemanticPageHeader</code>.</p><p><b>Note:</b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a> and <a target=\"_self\" href=\"api/sap.ui.table.AnalyticalTable\">sap.ui.table.AnalyticalTable</a> depending on their settings.<br><br><i>Since: 1.73.</i></p>",
                        "methods": [
                            "getFitContent",
                            "setFitContent"
                        ]
                    },
                    {
                        "name": "headerExpanded",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the header is expanded.</p><p>The header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.</p><p><b>Note:</b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.</p>",
                        "methods": [
                            "getHeaderExpanded",
                            "setHeaderExpanded"
                        ]
                    },
                    {
                        "name": "headerPinnable",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the header is pinnable.</p>",
                        "methods": [
                            "getHeaderPinnable",
                            "setHeaderPinnable"
                        ]
                    },
                    {
                        "name": "preserveHeaderStateOnScroll",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Preserves the current header state when scrolling.</p><p>For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.</p><p><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.</p>",
                        "methods": [
                            "getPreserveHeaderStateOnScroll",
                            "setPreserveHeaderStateOnScroll"
                        ]
                    },
                    {
                        "name": "showFooter",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the footer is visible.</p>",
                        "methods": [
                            "getShowFooter",
                            "setShowFooter"
                        ]
                    },
                    {
                        "name": "titleAreaShrinkRatio",
                        "type": "sap.f.DynamicPageTitleShrinkRatio",
                        "defaultValue": "1:1.6:1.6",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.58",
                        "description": "<p>Assigns shrinking ratio to the <code>SemanticPage</code> title areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.</p><p>The value must be set in <code>Heading:Content:Actions</code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.</p><p>For example, if <code>2:7:1</code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.</p><p>If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8</code> is equal to <code>1:2:4</code>.<br><br><i>Since: 1.58.</i></p>",
                        "methods": [
                            "getTitleAreaShrinkRatio",
                            "setTitleAreaShrinkRatio"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titlePrimaryArea",
                        "type": "sap.f.DynamicPageTitleArea",
                        "defaultValue": "Begin",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>Determines which of the title areas (Begin, Middle) is primary.</p><p><b>Note:</b> The primary area is shrinking at a lower rate, remaining visible as long as it can.<br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getTitlePrimaryArea",
                            "setTitlePrimaryArea"
                        ],
                        "linkEnabled": true,
                        "deprecatedText": "Deprecated as of version 1.58. Please use the <em>titleAreaShrinkRatio</em> property instead. The value of <em>titleAreaShrinkRatio</em> must be set in <em>Heading:Content:Actions</em> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.<em>titlePrimaryArea=Begin</em> can be achieved by setting a low number for the Heading area to <em>titleAreaShrinkRatio</em>, for example <em>1:1.6:1.6</em>.<em>titlePrimaryArea=Middle</em> can be achieved by setting a low number for the Content area to <em>titleAreaShrinkRatio</em>, for example <em>1.6:1:1.6</em>."
                    },
                    {
                        "name": "toggleHeaderOnTitleClick",
                        "type": "boolean",
                        "defaultValue": true,
                        "group": "Behavior",
                        "visibility": "public",
                        "description": "<p>Determines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.</p><p>If set to <code>false</code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.</p>",
                        "methods": [
                            "getToggleHeaderOnTitleClick",
                            "setToggleHeaderOnTitleClick"
                        ]
                    }
                ],
                "dnd": {
                    "draggable": false,
                    "droppable": true
                },
                "aggregations": [
                    {
                        "name": "_dynamicPage",
                        "singularName": "_dynamicPage",
                        "type": "sap.f.DynamicPage",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>The aggregation holds <code>DynamicPage</code>, used internally.</p>",
                        "methods": [
                            "get_dynamicPage",
                            "destroy_dynamicPage",
                            "set_dynamicPage"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "addAction",
                        "singularName": "addAction",
                        "type": "sap.f.semantic.AddAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getAddAction",
                            "destroyAddAction",
                            "setAddAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "closeAction",
                        "singularName": "closeAction",
                        "type": "sap.f.semantic.CloseAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getCloseAction",
                            "destroyCloseAction",
                            "setCloseAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The <code>SemanticPage</code> content.</p><p><b>Note:</b> The SAP Fiori Design guidelines require that the <code>SemanticPage</code>'s header content and the <code>SemanticPage</code>'s content are aligned vertically. When using <a target=\"_self\" href=\"api/sap.ui.layout.form.Form\">sap.ui.layout.form.Form</a>, <a target=\"_self\" href=\"api/sap.m.Panel\">sap.m.Panel</a>, <a target=\"_self\" href=\"api/sap.m.Table\">sap.m.Table</a> and <a target=\"_self\" href=\"api/sap.m.List\">sap.m.List</a> in the content area of <code>SemanticPage</code>, if the content is not already aligned, you need to adjust their left text offset to achieve the vertical alignment. To do this, apply the <code>sapFSemanticPageAlignContent</code> CSS class to them and set their <code>width</code> property to <code>auto</code> (if not set by default).</p><p>Example:</p><p><pre>\n<code> &lt;Panel class=“sapFSemanticPageAlignContent” width=“auto”&gt;&lt;/Panel&gt; </code>\n</pre></p><p>Please keep in mind that the alignment is not possible when the controls are placed in a <a target=\"_self\" href=\"api/sap.ui.layout.Grid\">sap.ui.layout.Grid</a> or in other layout controls that use <code>overflow:hidden</code> CSS property.</p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "setContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "copyAction",
                        "singularName": "copyAction",
                        "type": "sap.f.semantic.CopyAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getCopyAction",
                            "destroyCopyAction",
                            "setCopyAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "customShareActions",
                        "singularName": "customShareAction",
                        "type": "sap.m.Button",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The <code>customShareActions</code> are placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title, right after the semantic actions.</p><p>The text and icon of the button inside the <code>customShareActions</code> aggregation, can be customized.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getCustomShareActions",
                            "destroyCustomShareActions",
                            "insertCustomShareAction",
                            "addCustomShareAction",
                            "removeCustomShareAction",
                            "indexOfCustomShareAction",
                            "removeAllCustomShareActions"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "deleteAction",
                        "singularName": "deleteAction",
                        "type": "sap.f.semantic.DeleteAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getDeleteAction",
                            "destroyDeleteAction",
                            "setDeleteAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "discussInJamAction",
                        "singularName": "discussInJamAction",
                        "type": "sap.f.semantic.DiscussInJamAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getDiscussInJamAction",
                            "destroyDiscussInJamAction",
                            "setDiscussInJamAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "draftIndicator",
                        "singularName": "draftIndicator",
                        "type": "sap.m.DraftIndicator",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code> footer as a second action.</p>",
                        "methods": [
                            "getDraftIndicator",
                            "destroyDraftIndicator",
                            "setDraftIndicator"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "editAction",
                        "singularName": "editAction",
                        "type": "sap.f.semantic.EditAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.50",
                        "description": "<p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.<br><br><i>Since: 1.50.</i></p>",
                        "methods": [
                            "getEditAction",
                            "destroyEditAction",
                            "setEditAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "exitFullScreenAction",
                        "singularName": "exitFullScreenAction",
                        "type": "sap.f.semantic.ExitFullScreenAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getExitFullScreenAction",
                            "destroyExitFullScreenAction",
                            "setExitFullScreenAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "favoriteAction",
                        "singularName": "favoriteAction",
                        "type": "sap.f.semantic.FavoriteAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getFavoriteAction",
                            "destroyFavoriteAction",
                            "setFavoriteAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "flagAction",
                        "singularName": "flagAction",
                        "type": "sap.f.semantic.FlagAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getFlagAction",
                            "destroyFlagAction",
                            "setFlagAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "footerCustomActions",
                        "singularName": "footerCustomAction",
                        "type": "sap.m.Button",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The <code>footerCustomActions</code> are placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer, right after the semantic footer actions.</p><p><b>Note:</b> Buttons that are part of this aggregation will always have their <code>type</code> property set to <code>Transparent</code> by design.</p>",
                        "methods": [
                            "getFooterCustomActions",
                            "destroyFooterCustomActions",
                            "insertFooterCustomAction",
                            "addFooterCustomAction",
                            "removeFooterCustomAction",
                            "indexOfFooterCustomAction",
                            "removeAllFooterCustomActions"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "footerMainAction",
                        "singularName": "footerMainAction",
                        "type": "sap.f.semantic.FooterMainAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer with default text value set to <code>Save</code>.</p>",
                        "methods": [
                            "getFooterMainAction",
                            "destroyFooterMainAction",
                            "setFooterMainAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "fullScreenAction",
                        "singularName": "fullScreenAction",
                        "type": "sap.f.semantic.FullScreenAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getFullScreenAction",
                            "destroyFullScreenAction",
                            "setFullScreenAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "headerContent",
                        "singularName": "headerContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The header content.</p>",
                        "methods": [
                            "getHeaderContent",
                            "destroyHeaderContent",
                            "insertHeaderContent",
                            "addHeaderContent",
                            "removeHeaderContent",
                            "indexOfHeaderContent",
                            "removeAllHeaderContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "landmarkInfo",
                        "singularName": "landmarkInfo",
                        "type": "sap.f.DynamicPageAccessibleLandmarkInfo",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.61",
                        "description": "<p>Accessible landmark settings to be applied to the containers of the <code>sap.f.SemanticPage</code> control.</p><p>If not set, no landmarks will be written.<br><br><i>Since: 1.61.</i></p>",
                        "methods": [
                            "getLandmarkInfo",
                            "destroyLandmarkInfo",
                            "setLandmarkInfo"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "messagesIndicator",
                        "singularName": "messagesIndicator",
                        "type": "sap.f.semantic.MessagesIndicator",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code> footer as a first action.</p>",
                        "methods": [
                            "getMessagesIndicator",
                            "destroyMessagesIndicator",
                            "setMessagesIndicator"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "negativeAction",
                        "singularName": "negativeAction",
                        "type": "sap.f.semantic.NegativeAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer with default text value set to <code>Reject</code>.</p>",
                        "methods": [
                            "getNegativeAction",
                            "destroyNegativeAction",
                            "setNegativeAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "positiveAction",
                        "singularName": "positiveAction",
                        "type": "sap.f.semantic.PositiveAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer with default text value set to <code>Accept</code>.</p>",
                        "methods": [
                            "getPositiveAction",
                            "destroyPositiveAction",
                            "setPositiveAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "printAction",
                        "singularName": "printAction",
                        "type": "sap.f.semantic.PrintAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getPrintAction",
                            "destroyPrintAction",
                            "setPrintAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "saveAsTileAction",
                        "singularName": "saveAsTileAction",
                        "type": "sap.m.Button",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getSaveAsTileAction",
                            "destroySaveAsTileAction",
                            "setSaveAsTileAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "sendEmailAction",
                        "singularName": "sendEmailAction",
                        "type": "sap.f.semantic.SendEmailAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getSendEmailAction",
                            "destroySendEmailAction",
                            "setSendEmailAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "sendMessageAction",
                        "singularName": "sendMessageAction",
                        "type": "sap.f.semantic.SendMessageAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getSendMessageAction",
                            "destroySendMessageAction",
                            "setSendMessageAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "shareInJamAction",
                        "singularName": "shareInJamAction",
                        "type": "sap.f.semantic.ShareInJamAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getShareInJamAction",
                            "destroyShareInJamAction",
                            "setShareInJamAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleBreadcrumbs",
                        "singularName": "titleBreadcrumb",
                        "type": "sap.m.IBreadcrumbs",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>The <code>SemanticPage</code> breadcrumbs.</p><p>A typical usage is the <code>sap.m.Breadcrumbs</code> control or any other UI5 control, that implements the <code>sap.m.IBreadcrumbs</code> interface.</p><p><b>Notes:</b> <ul> <li>The control will be placed in the title`s top-left area.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul><br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getTitleBreadcrumbs",
                            "destroyTitleBreadcrumbs",
                            "setTitleBreadcrumbs"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleContent",
                        "singularName": "titleContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "since": "1.52",
                        "description": "<p>The content, displayed in the title.</p><p><b>Notes:</b> <ul> <li>The controls will be placed in the middle area.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul><br><br><i>Since: 1.52.</i></p>",
                        "methods": [
                            "getTitleContent",
                            "destroyTitleContent",
                            "insertTitleContent",
                            "addTitleContent",
                            "removeTitleContent",
                            "indexOfTitleContent",
                            "removeAllTitleContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleCustomIconActions",
                        "singularName": "titleCustomIconAction",
                        "type": "sap.m.OverflowToolbarButton",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The <code>titleCustomIconActions</code> are placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title, right before the semantic icon action.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getTitleCustomIconActions",
                            "destroyTitleCustomIconActions",
                            "insertTitleCustomIconAction",
                            "addTitleCustomIconAction",
                            "removeTitleCustomIconAction",
                            "indexOfTitleCustomIconAction",
                            "removeAllTitleCustomIconActions"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleCustomTextActions",
                        "singularName": "titleCustomTextAction",
                        "type": "sap.m.Button",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The <code>titleCustomTextActions</code> are placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title, right before the semantic text action.</p><p><b>Notes:</b> <ul> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> <li>Buttons that are part of this aggregation will always have their <code>type</code> property set to <code>Transparent</code> by design.</li> </ul></p>",
                        "methods": [
                            "getTitleCustomTextActions",
                            "destroyTitleCustomTextActions",
                            "insertTitleCustomTextAction",
                            "addTitleCustomTextAction",
                            "removeTitleCustomTextAction",
                            "indexOfTitleCustomTextAction",
                            "removeAllTitleCustomTextActions"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleExpandedContent",
                        "singularName": "titleExpandedContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content,displayed in the title, when the header is in expanded state.</p><p><b>Note:</b> The controls will be placed in the title`s left area, under the <code>titleHeading</code> aggregation.</p>",
                        "methods": [
                            "getTitleExpandedContent",
                            "destroyTitleExpandedContent",
                            "insertTitleExpandedContent",
                            "addTitleExpandedContent",
                            "removeTitleExpandedContent",
                            "indexOfTitleExpandedContent",
                            "removeAllTitleExpandedContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleExpandedHeading",
                        "singularName": "titleExpandedHeading",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.58",
                        "description": "<p>The <code>titleExpandedHeading</code> is positioned in the <code>SemanticPage</code> title left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.</p><p><b>Note:</b> In order for <code>titleExpandedHeading</code> to be taken into account, <code>titleHeading</code> has to be empty. Combine <code>titleExpandedHeading</code> with <code>titleSnappedHeading</code> to switch content when the header switches state.<br><br><i>Since: 1.58.</i></p>",
                        "methods": [
                            "getTitleExpandedHeading",
                            "destroyTitleExpandedHeading",
                            "setTitleExpandedHeading"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleHeading",
                        "singularName": "titleHeading",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The <code>SemanticPage</code> heading.</p><p>A typical usage is the <code>sap.m.Title</code> or any other UI5 control, that serves as a heading for an object.</p><p><b>Notes:</b> <ul> <li>The control will be placed in the title`s leftmost area.</li> <li><code>titleHeading</code> is mutually exclusive with <code>titleSnappedHeading</code> and <code>titleExpandedHeading</code>. If <code>titleHeading</code> is provided, both <code>titleSnappedHeading</code> and <code>titleExpandedHeading</code> are ignored. <code>titleHeading</code> is useful when the content of <code>titleSnappedHeading</code> and <code>titleExpandedHeading</code> needs to be the same as it replaces them both.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                        "methods": [
                            "getTitleHeading",
                            "destroyTitleHeading",
                            "setTitleHeading"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleMainAction",
                        "singularName": "titleMainAction",
                        "type": "sap.f.semantic.TitleMainAction",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>A semantic-specific button which is placed in the <code>SemanticPage</code> title as first action.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                        "methods": [
                            "getTitleMainAction",
                            "destroyTitleMainAction",
                            "setTitleMainAction"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleSnappedContent",
                        "singularName": "titleSnappedContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The content, displayed in the title, when the header is in collapsed state.</p><p><b>Notes:</b> <ul> <li>The controls will be placed in the title`s left area, under the <code>titleHeading</code> aggregation.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                        "methods": [
                            "getTitleSnappedContent",
                            "destroyTitleSnappedContent",
                            "insertTitleSnappedContent",
                            "addTitleSnappedContent",
                            "removeTitleSnappedContent",
                            "indexOfTitleSnappedContent",
                            "removeAllTitleSnappedContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleSnappedHeading",
                        "singularName": "titleSnappedHeading",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.58",
                        "description": "<p>The <code>titleSnappedHeading</code> is positioned in the <code>SemanticPage</code> title left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.</p><p><b>Notes:</b> <ul> <li>In order for <code>titleSnappedHeading</code> to be taken into account, <code>titleHeading</code> has to be empty. Combine <code>titleSnappedHeading</code> with <code>titleExpandedHeading</code> to switch content when the header switches state.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul><br><br><i>Since: 1.58.</i></p>",
                        "methods": [
                            "getTitleSnappedHeading",
                            "destroyTitleSnappedHeading",
                            "setTitleSnappedHeading"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "titleSnappedOnMobile",
                        "singularName": "titleSnappedOnMobile",
                        "type": "sap.m.Title",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.63",
                        "description": "<p>The only content that is displayed in the <code>SemanticPage</code> title when it is viewed on a phone mobile device and the <code>SemanticPage</code> header is in collapsed (snapped) state.</p><p>Using this aggregation enables you to provide a simple, single-line title that takes less space on the smaller phone screens when the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p><p><b>Note:</b> The content set in this aggregation overrides all the other <code>SemanticPage</code> aggregations displayed in the title and is only visible on phone mobile devices in collapsed (snapped) state of the <code>SemanticPage</code> header.<br><br><i>Since: 1.63.</i></p>",
                        "methods": [
                            "getTitleSnappedOnMobile",
                            "destroyTitleSnappedOnMobile",
                            "setTitleSnappedOnMobile"
                        ],
                        "linkEnabled": true
                    }
                ],
                "defaultAggregation": "content",
                "designtime": "sap/f/designtime/SemanticPage.designtime"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SemanticPage</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [
                    "{@link topic:84f3d52f492648d5b594e4f45dca7727 Semantic Pages}",
                    "{@link topic:4a97a07ec8f5441d901994d82eaab1f5 Semantic Page (sap.m)}"
                ],
                "codeExample": "<pre>new sap.f.semantic.SemanticPage(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "addCustomShareAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oCustomShareAction",
                            "optional": false,
                            "description": "<p>The customShareAction to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some customShareAction to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addCustomShareAction",
                    "code": "<pre>addCustomShareAction(oCustomShareAction) : this</pre>"
                },
                {
                    "name": "addFooterCustomAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFooterCustomAction",
                            "optional": false,
                            "description": "<p>The footerCustomAction to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some footerCustomAction to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addFooterCustomAction",
                    "code": "<pre>addFooterCustomAction(oFooterCustomAction) : this</pre>"
                },
                {
                    "name": "addHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oHeaderContent",
                            "optional": false,
                            "description": "<p>The headerContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some headerContent to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addHeaderContent",
                    "code": "<pre>addHeaderContent(oHeaderContent) : this</pre>"
                },
                {
                    "name": "addTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleContent",
                            "optional": false,
                            "description": "<p>The titleContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some titleContent to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addTitleContent",
                    "code": "<pre>addTitleContent(oTitleContent) : this</pre>"
                },
                {
                    "name": "addTitleCustomIconAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleCustomIconAction",
                            "optional": false,
                            "description": "<p>The titleCustomIconAction to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.OverflowToolbarButton",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.OverflowToolbarButton"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some titleCustomIconAction to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addTitleCustomIconAction",
                    "code": "<pre>addTitleCustomIconAction(oTitleCustomIconAction) : this</pre>"
                },
                {
                    "name": "addTitleCustomTextAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleCustomTextAction",
                            "optional": false,
                            "description": "<p>The titleCustomTextAction to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some titleCustomTextAction to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addTitleCustomTextAction",
                    "code": "<pre>addTitleCustomTextAction(oTitleCustomTextAction) : this</pre>"
                },
                {
                    "name": "addTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleExpandedContent",
                            "optional": false,
                            "description": "<p>The titleExpandedContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some titleExpandedContent to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addTitleExpandedContent",
                    "code": "<pre>addTitleExpandedContent(oTitleExpandedContent) : this</pre>"
                },
                {
                    "name": "addTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleSnappedContent",
                            "optional": false,
                            "description": "<p>The titleSnappedContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some titleSnappedContent to the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/addTitleSnappedContent",
                    "code": "<pre>addTitleSnappedContent(oTitleSnappedContent) : this</pre>"
                },
                {
                    "name": "destroyAddAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the addAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getAddAction\">addAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyAddAction",
                    "code": "<pre>destroyAddAction() : this</pre>"
                },
                {
                    "name": "destroyCloseAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the closeAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCloseAction\">closeAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyCloseAction",
                    "code": "<pre>destroyCloseAction() : this</pre>"
                },
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the content in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "destroyCopyAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the copyAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCopyAction\">copyAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyCopyAction",
                    "code": "<pre>destroyCopyAction() : this</pre>"
                },
                {
                    "name": "destroyCustomShareActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the customShareActions in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyCustomShareActions",
                    "code": "<pre>destroyCustomShareActions() : this</pre>"
                },
                {
                    "name": "destroyDeleteAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the deleteAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDeleteAction\">deleteAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyDeleteAction",
                    "code": "<pre>destroyDeleteAction() : this</pre>"
                },
                {
                    "name": "destroyDiscussInJamAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the discussInJamAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDiscussInJamAction\">discussInJamAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyDiscussInJamAction",
                    "code": "<pre>destroyDiscussInJamAction() : this</pre>"
                },
                {
                    "name": "destroyDraftIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the draftIndicator in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDraftIndicator\">draftIndicator</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyDraftIndicator",
                    "code": "<pre>destroyDraftIndicator() : this</pre>"
                },
                {
                    "name": "destroyEditAction",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the editAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getEditAction\">editAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyEditAction",
                    "code": "<pre>destroyEditAction() : this</pre>"
                },
                {
                    "name": "destroyExitFullScreenAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the exitFullScreenAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getExitFullScreenAction\">exitFullScreenAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyExitFullScreenAction",
                    "code": "<pre>destroyExitFullScreenAction() : this</pre>"
                },
                {
                    "name": "destroyFavoriteAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the favoriteAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFavoriteAction\">favoriteAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyFavoriteAction",
                    "code": "<pre>destroyFavoriteAction() : this</pre>"
                },
                {
                    "name": "destroyFlagAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the flagAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFlagAction\">flagAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyFlagAction",
                    "code": "<pre>destroyFlagAction() : this</pre>"
                },
                {
                    "name": "destroyFooterCustomActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the footerCustomActions in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyFooterCustomActions",
                    "code": "<pre>destroyFooterCustomActions() : this</pre>"
                },
                {
                    "name": "destroyFooterMainAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the footerMainAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterMainAction\">footerMainAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyFooterMainAction",
                    "code": "<pre>destroyFooterMainAction() : this</pre>"
                },
                {
                    "name": "destroyFullScreenAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the fullScreenAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFullScreenAction\">fullScreenAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyFullScreenAction",
                    "code": "<pre>destroyFullScreenAction() : this</pre>"
                },
                {
                    "name": "destroyHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the headerContent in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyHeaderContent",
                    "code": "<pre>destroyHeaderContent() : this</pre>"
                },
                {
                    "name": "destroyLandmarkInfo",
                    "visibility": "public",
                    "since": "1.61",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the landmarkInfo in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getLandmarkInfo\">landmarkInfo</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyLandmarkInfo",
                    "code": "<pre>destroyLandmarkInfo() : this</pre>"
                },
                {
                    "name": "destroyMessagesIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the messagesIndicator in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getMessagesIndicator\">messagesIndicator</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyMessagesIndicator",
                    "code": "<pre>destroyMessagesIndicator() : this</pre>"
                },
                {
                    "name": "destroyNegativeAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the negativeAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getNegativeAction\">negativeAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyNegativeAction",
                    "code": "<pre>destroyNegativeAction() : this</pre>"
                },
                {
                    "name": "destroyPositiveAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the positiveAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPositiveAction\">positiveAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyPositiveAction",
                    "code": "<pre>destroyPositiveAction() : this</pre>"
                },
                {
                    "name": "destroyPrintAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the printAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPrintAction\">printAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyPrintAction",
                    "code": "<pre>destroyPrintAction() : this</pre>"
                },
                {
                    "name": "destroySaveAsTileAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the saveAsTileAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSaveAsTileAction\">saveAsTileAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroySaveAsTileAction",
                    "code": "<pre>destroySaveAsTileAction() : this</pre>"
                },
                {
                    "name": "destroySendEmailAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the sendEmailAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSendEmailAction\">sendEmailAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroySendEmailAction",
                    "code": "<pre>destroySendEmailAction() : this</pre>"
                },
                {
                    "name": "destroySendMessageAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the sendMessageAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSendMessageAction\">sendMessageAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroySendMessageAction",
                    "code": "<pre>destroySendMessageAction() : this</pre>"
                },
                {
                    "name": "destroyShareInJamAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the shareInJamAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getShareInJamAction\">shareInJamAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyShareInJamAction",
                    "code": "<pre>destroyShareInJamAction() : this</pre>"
                },
                {
                    "name": "destroyTitleBreadcrumbs",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the titleBreadcrumbs in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleBreadcrumbs\">titleBreadcrumbs</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleBreadcrumbs",
                    "code": "<pre>destroyTitleBreadcrumbs() : this</pre>"
                },
                {
                    "name": "destroyTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the titleContent in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleContent",
                    "code": "<pre>destroyTitleContent() : this</pre>"
                },
                {
                    "name": "destroyTitleCustomIconActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the titleCustomIconActions in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleCustomIconActions",
                    "code": "<pre>destroyTitleCustomIconActions() : this</pre>"
                },
                {
                    "name": "destroyTitleCustomTextActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the titleCustomTextActions in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleCustomTextActions",
                    "code": "<pre>destroyTitleCustomTextActions() : this</pre>"
                },
                {
                    "name": "destroyTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the titleExpandedContent in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleExpandedContent",
                    "code": "<pre>destroyTitleExpandedContent() : this</pre>"
                },
                {
                    "name": "destroyTitleExpandedHeading",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the titleExpandedHeading in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedHeading\">titleExpandedHeading</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleExpandedHeading",
                    "code": "<pre>destroyTitleExpandedHeading() : this</pre>"
                },
                {
                    "name": "destroyTitleHeading",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the titleHeading in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleHeading\">titleHeading</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleHeading",
                    "code": "<pre>destroyTitleHeading() : this</pre>"
                },
                {
                    "name": "destroyTitleMainAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the titleMainAction in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleMainAction\">titleMainAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleMainAction",
                    "code": "<pre>destroyTitleMainAction() : this</pre>"
                },
                {
                    "name": "destroyTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the titleSnappedContent in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleSnappedContent",
                    "code": "<pre>destroyTitleSnappedContent() : this</pre>"
                },
                {
                    "name": "destroyTitleSnappedHeading",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the titleSnappedHeading in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedHeading\">titleSnappedHeading</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleSnappedHeading",
                    "code": "<pre>destroyTitleSnappedHeading() : this</pre>"
                },
                {
                    "name": "destroyTitleSnappedOnMobile",
                    "visibility": "public",
                    "since": "1.63",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the titleSnappedOnMobile in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedOnMobile\">titleSnappedOnMobile</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/destroyTitleSnappedOnMobile",
                    "code": "<pre>destroyTitleSnappedOnMobile() : this</pre>"
                },
                {
                    "name": "sap.f.semantic.SemanticPage.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/sap.f.semantic.SemanticPage.extend",
                    "code": "<pre>sap.f.semantic.SemanticPage.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getAddAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.AddAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.AddAction",
                                "href": "api/sap.f.semantic.AddAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getAddAction\">addAction</a>.</p><p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getAddAction",
                    "code": "<pre>getAddAction() : sap.f.semantic.AddAction</pre>"
                },
                {
                    "name": "getCloseAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.CloseAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.CloseAction",
                                "href": "api/sap.f.semantic.CloseAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCloseAction\">closeAction</a>.</p><p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getCloseAction",
                    "code": "<pre>getCloseAction() : sap.f.semantic.CloseAction</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getContent\">content</a>.</p><p>The <code>SemanticPage</code> content.</p><p><b>Note:</b> The SAP Fiori Design guidelines require that the <code>SemanticPage</code>'s header content and the <code>SemanticPage</code>'s content are aligned vertically. When using <a target=\"_self\" href=\"api/sap.ui.layout.form.Form\">sap.ui.layout.form.Form</a>, <a target=\"_self\" href=\"api/sap.m.Panel\">sap.m.Panel</a>, <a target=\"_self\" href=\"api/sap.m.Table\">sap.m.Table</a> and <a target=\"_self\" href=\"api/sap.m.List\">sap.m.List</a> in the content area of <code>SemanticPage</code>, if the content is not already aligned, you need to adjust their left text offset to achieve the vertical alignment. To do this, apply the <code>sapFSemanticPageAlignContent</code> CSS class to them and set their <code>width</code> property to <code>auto</code> (if not set by default).</p><p>Example:</p><p><pre>\n<code> &lt;Panel class=“sapFSemanticPageAlignContent” width=“auto”&gt;&lt;/Panel&gt; </code>\n</pre></p><p>Please keep in mind that the alignment is not possible when the controls are placed in a <a target=\"_self\" href=\"api/sap.ui.layout.Grid\">sap.ui.layout.Grid</a> or in other layout controls that use <code>overflow:hidden</code> CSS property.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getCopyAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.CopyAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.CopyAction",
                                "href": "api/sap.f.semantic.CopyAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCopyAction\">copyAction</a>.</p><p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getCopyAction",
                    "code": "<pre>getCopyAction() : sap.f.semantic.CopyAction</pre>"
                },
                {
                    "name": "getCustomShareActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>.</p><p>The <code>customShareActions</code> are placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title, right after the semantic actions.</p><p>The text and icon of the button inside the <code>customShareActions</code> aggregation, can be customized.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getCustomShareActions",
                    "code": "<pre>getCustomShareActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "getDeleteAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.DeleteAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.DeleteAction",
                                "href": "api/sap.f.semantic.DeleteAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDeleteAction\">deleteAction</a>.</p><p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getDeleteAction",
                    "code": "<pre>getDeleteAction() : sap.f.semantic.DeleteAction</pre>"
                },
                {
                    "name": "getDiscussInJamAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.DiscussInJamAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.DiscussInJamAction",
                                "href": "api/sap.f.semantic.DiscussInJamAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDiscussInJamAction\">discussInJamAction</a>.</p><p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getDiscussInJamAction",
                    "code": "<pre>getDiscussInJamAction() : sap.f.semantic.DiscussInJamAction</pre>"
                },
                {
                    "name": "getDraftIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.DraftIndicator",
                        "types": [
                            {
                                "value": "sap.m.DraftIndicator",
                                "href": "api/sap.m.DraftIndicator",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDraftIndicator\">draftIndicator</a>.</p><p>A semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code> footer as a second action.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getDraftIndicator",
                    "code": "<pre>getDraftIndicator() : sap.m.DraftIndicator</pre>"
                },
                {
                    "name": "getEditAction",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "sap.f.semantic.EditAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.EditAction",
                                "href": "api/sap.f.semantic.EditAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getEditAction\">editAction</a>.</p><p>A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getEditAction",
                    "code": "<pre>getEditAction() : sap.f.semantic.EditAction</pre>"
                },
                {
                    "name": "getExitFullScreenAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.ExitFullScreenAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.ExitFullScreenAction",
                                "href": "api/sap.f.semantic.ExitFullScreenAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getExitFullScreenAction\">exitFullScreenAction</a>.</p><p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getExitFullScreenAction",
                    "code": "<pre>getExitFullScreenAction() : sap.f.semantic.ExitFullScreenAction</pre>"
                },
                {
                    "name": "getFavoriteAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.FavoriteAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.FavoriteAction",
                                "href": "api/sap.f.semantic.FavoriteAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFavoriteAction\">favoriteAction</a>.</p><p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getFavoriteAction",
                    "code": "<pre>getFavoriteAction() : sap.f.semantic.FavoriteAction</pre>"
                },
                {
                    "name": "getFitContent",
                    "visibility": "public",
                    "since": "1.73",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>fitContent</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFitContent\">fitContent</a>.</p><p>Optimizes <code>SemanticPage</code> responsiveness on small screens and behavior when expanding/collapsing the <code>SemanticPageHeader</code>.</p><p><b>Note:</b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a> and <a target=\"_self\" href=\"api/sap.ui.table.AnalyticalTable\">sap.ui.table.AnalyticalTable</a> depending on their settings.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getFitContent",
                    "code": "<pre>getFitContent() : boolean</pre>"
                },
                {
                    "name": "getFlagAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.FlagAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.FlagAction",
                                "href": "api/sap.f.semantic.FlagAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFlagAction\">flagAction</a>.</p><p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getFlagAction",
                    "code": "<pre>getFlagAction() : sap.f.semantic.FlagAction</pre>"
                },
                {
                    "name": "getFooterCustomActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>.</p><p>The <code>footerCustomActions</code> are placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer, right after the semantic footer actions.</p><p><b>Note:</b> Buttons that are part of this aggregation will always have their <code>type</code> property set to <code>Transparent</code> by design.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions",
                    "code": "<pre>getFooterCustomActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "getFooterMainAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.FooterMainAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.FooterMainAction",
                                "href": "api/sap.f.semantic.FooterMainAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterMainAction\">footerMainAction</a>.</p><p>A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer with default text value set to <code>Save</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getFooterMainAction",
                    "code": "<pre>getFooterMainAction() : sap.f.semantic.FooterMainAction</pre>"
                },
                {
                    "name": "getFullScreenAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.FullScreenAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.FullScreenAction",
                                "href": "api/sap.f.semantic.FullScreenAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFullScreenAction\">fullScreenAction</a>.</p><p>A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getFullScreenAction",
                    "code": "<pre>getFullScreenAction() : sap.f.semantic.FullScreenAction</pre>"
                },
                {
                    "name": "getHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>.</p><p>The header content.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getHeaderContent",
                    "code": "<pre>getHeaderContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getHeaderExpanded",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>headerExpanded</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderExpanded\">headerExpanded</a>.</p><p>Determines whether the header is expanded.</p><p>The header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.</p><p><b>Note:</b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getHeaderExpanded",
                    "code": "<pre>getHeaderExpanded() : boolean</pre>"
                },
                {
                    "name": "getHeaderPinnable",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>headerPinnable</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderPinnable\">headerPinnable</a>.</p><p>Determines whether the header is pinnable.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getHeaderPinnable",
                    "code": "<pre>getHeaderPinnable() : boolean</pre>"
                },
                {
                    "name": "getLandmarkInfo",
                    "visibility": "public",
                    "since": "1.61",
                    "returnValue": {
                        "type": "sap.f.DynamicPageAccessibleLandmarkInfo",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageAccessibleLandmarkInfo",
                                "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getLandmarkInfo\">landmarkInfo</a>.</p><p>Accessible landmark settings to be applied to the containers of the <code>sap.f.SemanticPage</code> control.</p><p>If not set, no landmarks will be written.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getLandmarkInfo",
                    "code": "<pre>getLandmarkInfo() : sap.f.DynamicPageAccessibleLandmarkInfo</pre>"
                },
                {
                    "name": "getMessagesIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.MessagesIndicator",
                        "types": [
                            {
                                "value": "sap.f.semantic.MessagesIndicator",
                                "href": "api/sap.f.semantic.MessagesIndicator",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getMessagesIndicator\">messagesIndicator</a>.</p><p>A semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code> footer as a first action.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getMessagesIndicator",
                    "code": "<pre>getMessagesIndicator() : sap.f.semantic.MessagesIndicator</pre>"
                },
                {
                    "name": "sap.f.semantic.SemanticPage.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.SemanticPage.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/sap.f.semantic.SemanticPage.getMetadata",
                    "code": "<pre>sap.f.semantic.SemanticPage.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getNegativeAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.NegativeAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.NegativeAction",
                                "href": "api/sap.f.semantic.NegativeAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getNegativeAction\">negativeAction</a>.</p><p>A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer with default text value set to <code>Reject</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getNegativeAction",
                    "code": "<pre>getNegativeAction() : sap.f.semantic.NegativeAction</pre>"
                },
                {
                    "name": "getPositiveAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.PositiveAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.PositiveAction",
                                "href": "api/sap.f.semantic.PositiveAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPositiveAction\">positiveAction</a>.</p><p>A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code> footer with default text value set to <code>Accept</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getPositiveAction",
                    "code": "<pre>getPositiveAction() : sap.f.semantic.PositiveAction</pre>"
                },
                {
                    "name": "getPreserveHeaderStateOnScroll",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>preserveHeaderStateOnScroll</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPreserveHeaderStateOnScroll\">preserveHeaderStateOnScroll</a>.</p><p>Preserves the current header state when scrolling.</p><p>For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.</p><p><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getPreserveHeaderStateOnScroll",
                    "code": "<pre>getPreserveHeaderStateOnScroll() : boolean</pre>"
                },
                {
                    "name": "getPrintAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.PrintAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.PrintAction",
                                "href": "api/sap.f.semantic.PrintAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPrintAction\">printAction</a>.</p><p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getPrintAction",
                    "code": "<pre>getPrintAction() : sap.f.semantic.PrintAction</pre>"
                },
                {
                    "name": "getSaveAsTileAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button",
                        "types": [
                            {
                                "value": "sap.m.Button",
                                "href": "api/sap.m.Button",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSaveAsTileAction\">saveAsTileAction</a>.</p><p>A button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getSaveAsTileAction",
                    "code": "<pre>getSaveAsTileAction() : sap.m.Button</pre>"
                },
                {
                    "name": "getSendEmailAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.SendEmailAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.SendEmailAction",
                                "href": "api/sap.f.semantic.SendEmailAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSendEmailAction\">sendEmailAction</a>.</p><p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getSendEmailAction",
                    "code": "<pre>getSendEmailAction() : sap.f.semantic.SendEmailAction</pre>"
                },
                {
                    "name": "getSendMessageAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.SendMessageAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.SendMessageAction",
                                "href": "api/sap.f.semantic.SendMessageAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSendMessageAction\">sendMessageAction</a>.</p><p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getSendMessageAction",
                    "code": "<pre>getSendMessageAction() : sap.f.semantic.SendMessageAction</pre>"
                },
                {
                    "name": "getShareInJamAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.ShareInJamAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.ShareInJamAction",
                                "href": "api/sap.f.semantic.ShareInJamAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getShareInJamAction\">shareInJamAction</a>.</p><p>A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getShareInJamAction",
                    "code": "<pre>getShareInJamAction() : sap.f.semantic.ShareInJamAction</pre>"
                },
                {
                    "name": "getShowFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showFooter</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getShowFooter\">showFooter</a>.</p><p>Determines whether the footer is visible.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getShowFooter",
                    "code": "<pre>getShowFooter() : boolean</pre>"
                },
                {
                    "name": "getTitleAreaShrinkRatio",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "sap.f.DynamicPageTitleShrinkRatio",
                        "description": "<p>Value of property <code>titleAreaShrinkRatio</code></p>",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageTitleShrinkRatio",
                                "href": "api/sap.f.DynamicPageTitleShrinkRatio",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleAreaShrinkRatio\">titleAreaShrinkRatio</a>.</p><p>Assigns shrinking ratio to the <code>SemanticPage</code> title areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.</p><p>The value must be set in <code>Heading:Content:Actions</code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.</p><p>For example, if <code>2:7:1</code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.</p><p>If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8</code> is equal to <code>1:2:4</code>.</p><p>Default value is <code>\"1:1.6:1.6\"</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleAreaShrinkRatio",
                    "code": "<pre>getTitleAreaShrinkRatio() : sap.f.DynamicPageTitleShrinkRatio</pre>"
                },
                {
                    "name": "getTitleBreadcrumbs",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.m.IBreadcrumbs",
                        "types": [
                            {
                                "value": "sap.m.IBreadcrumbs",
                                "href": "api/sap.m.IBreadcrumbs",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleBreadcrumbs\">titleBreadcrumbs</a>.</p><p>The <code>SemanticPage</code> breadcrumbs.</p><p>A typical usage is the <code>sap.m.Breadcrumbs</code> control or any other UI5 control, that implements the <code>sap.m.IBreadcrumbs</code> interface.</p><p><b>Notes:</b> <ul> <li>The control will be placed in the title`s top-left area.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleBreadcrumbs",
                    "code": "<pre>getTitleBreadcrumbs() : sap.m.IBreadcrumbs</pre>"
                },
                {
                    "name": "getTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>.</p><p>The content, displayed in the title.</p><p><b>Notes:</b> <ul> <li>The controls will be placed in the middle area.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleContent",
                    "code": "<pre>getTitleContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getTitleCustomIconActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.OverflowToolbarButton[]",
                        "types": [
                            {
                                "value": "sap.m.OverflowToolbarButton[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>.</p><p>The <code>titleCustomIconActions</code> are placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title, right before the semantic icon action.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions",
                    "code": "<pre>getTitleCustomIconActions() : sap.m.OverflowToolbarButton[]</pre>"
                },
                {
                    "name": "getTitleCustomTextActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>.</p><p>The <code>titleCustomTextActions</code> are placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title, right before the semantic text action.</p><p><b>Notes:</b> <ul> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> <li>Buttons that are part of this aggregation will always have their <code>type</code> property set to <code>Transparent</code> by design.</li> </ul></p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions",
                    "code": "<pre>getTitleCustomTextActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "getTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>.</p><p>The content,displayed in the title, when the header is in expanded state.</p><p><b>Note:</b> The controls will be placed in the title`s left area, under the <code>titleHeading</code> aggregation.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent",
                    "code": "<pre>getTitleExpandedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getTitleExpandedHeading",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedHeading\">titleExpandedHeading</a>.</p><p>The <code>titleExpandedHeading</code> is positioned in the <code>SemanticPage</code> title left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.</p><p><b>Note:</b> In order for <code>titleExpandedHeading</code> to be taken into account, <code>titleHeading</code> has to be empty. Combine <code>titleExpandedHeading</code> with <code>titleSnappedHeading</code> to switch content when the header switches state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleExpandedHeading",
                    "code": "<pre>getTitleExpandedHeading() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getTitleHeading",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleHeading\">titleHeading</a>.</p><p>The <code>SemanticPage</code> heading.</p><p>A typical usage is the <code>sap.m.Title</code> or any other UI5 control, that serves as a heading for an object.</p><p><b>Notes:</b> <ul> <li>The control will be placed in the title`s leftmost area.</li> <li><code>titleHeading</code> is mutually exclusive with <code>titleSnappedHeading</code> and <code>titleExpandedHeading</code>. If <code>titleHeading</code> is provided, both <code>titleSnappedHeading</code> and <code>titleExpandedHeading</code> are ignored. <code>titleHeading</code> is useful when the content of <code>titleSnappedHeading</code> and <code>titleExpandedHeading</code> needs to be the same as it replaces them both.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleHeading",
                    "code": "<pre>getTitleHeading() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getTitleMainAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.semantic.TitleMainAction",
                        "types": [
                            {
                                "value": "sap.f.semantic.TitleMainAction",
                                "href": "api/sap.f.semantic.TitleMainAction",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleMainAction\">titleMainAction</a>.</p><p>A semantic-specific button which is placed in the <code>SemanticPage</code> title as first action.</p><p><b>Note:</b> If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleMainAction",
                    "code": "<pre>getTitleMainAction() : sap.f.semantic.TitleMainAction</pre>"
                },
                {
                    "name": "getTitlePrimaryArea",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.f.DynamicPageTitleArea",
                        "description": "<p>Value of property <code>titlePrimaryArea</code></p>",
                        "types": [
                            {
                                "value": "sap.f.DynamicPageTitleArea",
                                "href": "api/sap.f.DynamicPageTitleArea",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitlePrimaryArea\">titlePrimaryArea</a>.</p><p>Determines which of the title areas (Begin, Middle) is primary.</p><p><b>Note:</b> The primary area is shrinking at a lower rate, remaining visible as long as it can.</p><p>Default value is <code>Begin</code>.</p>",
                    "deprecated": {
                        "since": "1.58",
                        "text": "Please use the <code>titleAreaShrinkRatio</code> property instead. The value of <code>titleAreaShrinkRatio</code> must be set in <code>Heading:Content:Actions</code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>titlePrimaryArea=Begin</code> can be achieved by setting a low number for the Heading area to <code>titleAreaShrinkRatio</code>, for example <code>1:1.6:1.6</code>.\n\n<code>titlePrimaryArea=Middle</code> can be achieved by setting a low number for the Content area to <code>titleAreaShrinkRatio</code>, for example <code>1.6:1:1.6</code>."
                    },
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitlePrimaryArea",
                    "deprecatedText": "Deprecated as of version 1.58. Please use the <em>titleAreaShrinkRatio</em> property instead. The value of <em>titleAreaShrinkRatio</em> must be set in <em>Heading:Content:Actions</em> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.<em>titlePrimaryArea=Begin</em> can be achieved by setting a low number for the Heading area to <em>titleAreaShrinkRatio</em>, for example <em>1:1.6:1.6</em>.<em>titlePrimaryArea=Middle</em> can be achieved by setting a low number for the Content area to <em>titleAreaShrinkRatio</em>, for example <em>1.6:1:1.6</em>.",
                    "code": "<pre>getTitlePrimaryArea() : sap.f.DynamicPageTitleArea</pre>"
                },
                {
                    "name": "getTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>.</p><p>The content, displayed in the title, when the header is in collapsed state.</p><p><b>Notes:</b> <ul> <li>The controls will be placed in the title`s left area, under the <code>titleHeading</code> aggregation.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent",
                    "code": "<pre>getTitleSnappedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getTitleSnappedHeading",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "sap.ui.core.Control",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedHeading\">titleSnappedHeading</a>.</p><p>The <code>titleSnappedHeading</code> is positioned in the <code>SemanticPage</code> title left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.</p><p><b>Notes:</b> <ul> <li>In order for <code>titleSnappedHeading</code> to be taken into account, <code>titleHeading</code> has to be empty. Combine <code>titleSnappedHeading</code> with <code>titleExpandedHeading</code> to switch content when the header switches state.</li> <li>If the <code>titleSnappedOnMobile</code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage</code> header is in its collapsed (snapped) state.</li> </ul></p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleSnappedHeading",
                    "code": "<pre>getTitleSnappedHeading() : sap.ui.core.Control</pre>"
                },
                {
                    "name": "getTitleSnappedOnMobile",
                    "visibility": "public",
                    "since": "1.63",
                    "returnValue": {
                        "type": "sap.m.Title",
                        "types": [
                            {
                                "value": "sap.m.Title",
                                "href": "api/sap.m.Title",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedOnMobile\">titleSnappedOnMobile</a>.</p><p>The only content that is displayed in the <code>SemanticPage</code> title when it is viewed on a phone mobile device and the <code>SemanticPage</code> header is in collapsed (snapped) state.</p><p>Using this aggregation enables you to provide a simple, single-line title that takes less space on the smaller phone screens when the <code>SemanticPage</code> header is in its collapsed (snapped) state.</p><p><b>Note:</b> The content set in this aggregation overrides all the other <code>SemanticPage</code> aggregations displayed in the title and is only visible on phone mobile devices in collapsed (snapped) state of the <code>SemanticPage</code> header.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getTitleSnappedOnMobile",
                    "code": "<pre>getTitleSnappedOnMobile() : sap.m.Title</pre>"
                },
                {
                    "name": "getToggleHeaderOnTitleClick",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>toggleHeaderOnTitleClick</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getToggleHeaderOnTitleClick\">toggleHeaderOnTitleClick</a>.</p><p>Determines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.</p><p>If set to <code>false</code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/getToggleHeaderOnTitleClick",
                    "code": "<pre>getToggleHeaderOnTitleClick() : boolean</pre>"
                },
                {
                    "name": "indexOfCustomShareAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oCustomShareAction",
                            "optional": false,
                            "description": "<p>The customShareAction whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.Button</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfCustomShareAction",
                    "code": "<pre>indexOfCustomShareAction(oCustomShareAction) : int</pre>"
                },
                {
                    "name": "indexOfFooterCustomAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFooterCustomAction",
                            "optional": false,
                            "description": "<p>The footerCustomAction whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.Button</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfFooterCustomAction",
                    "code": "<pre>indexOfFooterCustomAction(oFooterCustomAction) : int</pre>"
                },
                {
                    "name": "indexOfHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oHeaderContent",
                            "optional": false,
                            "description": "<p>The headerContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfHeaderContent",
                    "code": "<pre>indexOfHeaderContent(oHeaderContent) : int</pre>"
                },
                {
                    "name": "indexOfTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleContent",
                            "optional": false,
                            "description": "<p>The titleContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfTitleContent",
                    "code": "<pre>indexOfTitleContent(oTitleContent) : int</pre>"
                },
                {
                    "name": "indexOfTitleCustomIconAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleCustomIconAction",
                            "optional": false,
                            "description": "<p>The titleCustomIconAction whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.OverflowToolbarButton",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.OverflowToolbarButton"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.OverflowToolbarButton</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfTitleCustomIconAction",
                    "code": "<pre>indexOfTitleCustomIconAction(oTitleCustomIconAction) : int</pre>"
                },
                {
                    "name": "indexOfTitleCustomTextAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleCustomTextAction",
                            "optional": false,
                            "description": "<p>The titleCustomTextAction whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.m.Button</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfTitleCustomTextAction",
                    "code": "<pre>indexOfTitleCustomTextAction(oTitleCustomTextAction) : int</pre>"
                },
                {
                    "name": "indexOfTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleExpandedContent",
                            "optional": false,
                            "description": "<p>The titleExpandedContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfTitleExpandedContent",
                    "code": "<pre>indexOfTitleExpandedContent(oTitleExpandedContent) : int</pre>"
                },
                {
                    "name": "indexOfTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleSnappedContent",
                            "optional": false,
                            "description": "<p>The titleSnappedContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/indexOfTitleSnappedContent",
                    "code": "<pre>indexOfTitleSnappedContent(oTitleSnappedContent) : int</pre>"
                },
                {
                    "name": "insertCustomShareAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oCustomShareAction",
                            "optional": false,
                            "description": "<p>The customShareAction to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the customShareAction should be inserted at; for a negative value of <code>iIndex</code>, the customShareAction is inserted at position 0; for a value greater than the current size of the aggregation, the customShareAction is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a customShareAction into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertCustomShareAction",
                    "code": "<pre>insertCustomShareAction(oCustomShareAction, iIndex) : this</pre>"
                },
                {
                    "name": "insertFooterCustomAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFooterCustomAction",
                            "optional": false,
                            "description": "<p>The footerCustomAction to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the footerCustomAction should be inserted at; for a negative value of <code>iIndex</code>, the footerCustomAction is inserted at position 0; for a value greater than the current size of the aggregation, the footerCustomAction is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a footerCustomAction into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertFooterCustomAction",
                    "code": "<pre>insertFooterCustomAction(oFooterCustomAction, iIndex) : this</pre>"
                },
                {
                    "name": "insertHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oHeaderContent",
                            "optional": false,
                            "description": "<p>The headerContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the headerContent should be inserted at; for a negative value of <code>iIndex</code>, the headerContent is inserted at position 0; for a value greater than the current size of the aggregation, the headerContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a headerContent into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertHeaderContent",
                    "code": "<pre>insertHeaderContent(oHeaderContent, iIndex) : this</pre>"
                },
                {
                    "name": "insertTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleContent",
                            "optional": false,
                            "description": "<p>The titleContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the titleContent should be inserted at; for a negative value of <code>iIndex</code>, the titleContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a titleContent into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertTitleContent",
                    "code": "<pre>insertTitleContent(oTitleContent, iIndex) : this</pre>"
                },
                {
                    "name": "insertTitleCustomIconAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleCustomIconAction",
                            "optional": false,
                            "description": "<p>The titleCustomIconAction to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.OverflowToolbarButton",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.OverflowToolbarButton"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the titleCustomIconAction should be inserted at; for a negative value of <code>iIndex</code>, the titleCustomIconAction is inserted at position 0; for a value greater than the current size of the aggregation, the titleCustomIconAction is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a titleCustomIconAction into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertTitleCustomIconAction",
                    "code": "<pre>insertTitleCustomIconAction(oTitleCustomIconAction, iIndex) : this</pre>"
                },
                {
                    "name": "insertTitleCustomTextAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleCustomTextAction",
                            "optional": false,
                            "description": "<p>The titleCustomTextAction to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the titleCustomTextAction should be inserted at; for a negative value of <code>iIndex</code>, the titleCustomTextAction is inserted at position 0; for a value greater than the current size of the aggregation, the titleCustomTextAction is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a titleCustomTextAction into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertTitleCustomTextAction",
                    "code": "<pre>insertTitleCustomTextAction(oTitleCustomTextAction, iIndex) : this</pre>"
                },
                {
                    "name": "insertTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleExpandedContent",
                            "optional": false,
                            "description": "<p>The titleExpandedContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the titleExpandedContent should be inserted at; for a negative value of <code>iIndex</code>, the titleExpandedContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleExpandedContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a titleExpandedContent into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertTitleExpandedContent",
                    "code": "<pre>insertTitleExpandedContent(oTitleExpandedContent, iIndex) : this</pre>"
                },
                {
                    "name": "insertTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleSnappedContent",
                            "optional": false,
                            "description": "<p>The titleSnappedContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the titleSnappedContent should be inserted at; for a negative value of <code>iIndex</code>, the titleSnappedContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleSnappedContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a titleSnappedContent into the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/insertTitleSnappedContent",
                    "code": "<pre>insertTitleSnappedContent(oTitleSnappedContent, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllCustomShareActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllCustomShareActions",
                    "code": "<pre>removeAllCustomShareActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "removeAllFooterCustomActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllFooterCustomActions",
                    "code": "<pre>removeAllFooterCustomActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "removeAllHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllHeaderContent",
                    "code": "<pre>removeAllHeaderContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllTitleContent",
                    "code": "<pre>removeAllTitleContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllTitleCustomIconActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.OverflowToolbarButton[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.OverflowToolbarButton[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllTitleCustomIconActions",
                    "code": "<pre>removeAllTitleCustomIconActions() : sap.m.OverflowToolbarButton[]</pre>"
                },
                {
                    "name": "removeAllTitleCustomTextActions",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.m.Button[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllTitleCustomTextActions",
                    "code": "<pre>removeAllTitleCustomTextActions() : sap.m.Button[]</pre>"
                },
                {
                    "name": "removeAllTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllTitleExpandedContent",
                    "code": "<pre>removeAllTitleExpandedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeAllTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeAllTitleSnappedContent",
                    "code": "<pre>removeAllTitleSnappedContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeCustomShareAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button|null",
                        "description": "<p>The removed customShareAction or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.Button",
                                "href": "api/sap.m.Button",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vCustomShareAction",
                            "optional": false,
                            "description": "<p>The customShareAction to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a customShareAction from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCustomShareActions\">customShareActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeCustomShareAction",
                    "code": "<pre>removeCustomShareAction(vCustomShareAction) : sap.m.Button|null</pre>"
                },
                {
                    "name": "removeFooterCustomAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button|null",
                        "description": "<p>The removed footerCustomAction or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.Button",
                                "href": "api/sap.m.Button",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vFooterCustomAction",
                            "optional": false,
                            "description": "<p>The footerCustomAction to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a footerCustomAction from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterCustomActions\">footerCustomActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeFooterCustomAction",
                    "code": "<pre>removeFooterCustomAction(vFooterCustomAction) : sap.m.Button|null</pre>"
                },
                {
                    "name": "removeHeaderContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed headerContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vHeaderContent",
                            "optional": false,
                            "description": "<p>The headerContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a headerContent from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderContent\">headerContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeHeaderContent",
                    "code": "<pre>removeHeaderContent(vHeaderContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeTitleContent",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed titleContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vTitleContent",
                            "optional": false,
                            "description": "<p>The titleContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a titleContent from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleContent\">titleContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeTitleContent",
                    "code": "<pre>removeTitleContent(vTitleContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeTitleCustomIconAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.OverflowToolbarButton|null",
                        "description": "<p>The removed titleCustomIconAction or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.OverflowToolbarButton",
                                "href": "api/sap.m.OverflowToolbarButton",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vTitleCustomIconAction",
                            "optional": false,
                            "description": "<p>The titleCustomIconAction to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.OverflowToolbarButton",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.OverflowToolbarButton"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a titleCustomIconAction from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomIconActions\">titleCustomIconActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeTitleCustomIconAction",
                    "code": "<pre>removeTitleCustomIconAction(vTitleCustomIconAction) : sap.m.OverflowToolbarButton|null</pre>"
                },
                {
                    "name": "removeTitleCustomTextAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Button|null",
                        "description": "<p>The removed titleCustomTextAction or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.m.Button",
                                "href": "api/sap.m.Button",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vTitleCustomTextAction",
                            "optional": false,
                            "description": "<p>The titleCustomTextAction to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a titleCustomTextAction from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleCustomTextActions\">titleCustomTextActions</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeTitleCustomTextAction",
                    "code": "<pre>removeTitleCustomTextAction(vTitleCustomTextAction) : sap.m.Button|null</pre>"
                },
                {
                    "name": "removeTitleExpandedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed titleExpandedContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vTitleExpandedContent",
                            "optional": false,
                            "description": "<p>The titleExpandedContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a titleExpandedContent from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedContent\">titleExpandedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeTitleExpandedContent",
                    "code": "<pre>removeTitleExpandedContent(vTitleExpandedContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "removeTitleSnappedContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed titleSnappedContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vTitleSnappedContent",
                            "optional": false,
                            "description": "<p>The titleSnappedContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a titleSnappedContent from the aggregation <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedContent\">titleSnappedContent</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/removeTitleSnappedContent",
                    "code": "<pre>removeTitleSnappedContent(vTitleSnappedContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setAddAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAddAction",
                            "optional": false,
                            "description": "<p>The addAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.AddAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.AddAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getAddAction\">addAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setAddAction",
                    "code": "<pre>setAddAction(oAddAction) : this</pre>"
                },
                {
                    "name": "setCloseAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oCloseAction",
                            "optional": false,
                            "description": "<p>The closeAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.CloseAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.CloseAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCloseAction\">closeAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setCloseAction",
                    "code": "<pre>setCloseAction(oCloseAction) : this</pre>"
                },
                {
                    "name": "setContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setContent",
                    "code": "<pre>setContent(oContent) : this</pre>"
                },
                {
                    "name": "setCopyAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oCopyAction",
                            "optional": false,
                            "description": "<p>The copyAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.CopyAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.CopyAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getCopyAction\">copyAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setCopyAction",
                    "code": "<pre>setCopyAction(oCopyAction) : this</pre>"
                },
                {
                    "name": "setDeleteAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oDeleteAction",
                            "optional": false,
                            "description": "<p>The deleteAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.DeleteAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.DeleteAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDeleteAction\">deleteAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setDeleteAction",
                    "code": "<pre>setDeleteAction(oDeleteAction) : this</pre>"
                },
                {
                    "name": "setDiscussInJamAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oDiscussInJamAction",
                            "optional": false,
                            "description": "<p>The discussInJamAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.DiscussInJamAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.DiscussInJamAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDiscussInJamAction\">discussInJamAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setDiscussInJamAction",
                    "code": "<pre>setDiscussInJamAction(oDiscussInJamAction) : this</pre>"
                },
                {
                    "name": "setDraftIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oDraftIndicator",
                            "optional": false,
                            "description": "<p>The draftIndicator to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.DraftIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.DraftIndicator"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getDraftIndicator\">draftIndicator</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setDraftIndicator",
                    "code": "<pre>setDraftIndicator(oDraftIndicator) : this</pre>"
                },
                {
                    "name": "setEditAction",
                    "visibility": "public",
                    "since": "1.50",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oEditAction",
                            "optional": false,
                            "description": "<p>The editAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.EditAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.EditAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getEditAction\">editAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setEditAction",
                    "code": "<pre>setEditAction(oEditAction) : this</pre>"
                },
                {
                    "name": "setExitFullScreenAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oExitFullScreenAction",
                            "optional": false,
                            "description": "<p>The exitFullScreenAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.ExitFullScreenAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.ExitFullScreenAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getExitFullScreenAction\">exitFullScreenAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setExitFullScreenAction",
                    "code": "<pre>setExitFullScreenAction(oExitFullScreenAction) : this</pre>"
                },
                {
                    "name": "setFavoriteAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFavoriteAction",
                            "optional": false,
                            "description": "<p>The favoriteAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.FavoriteAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.FavoriteAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFavoriteAction\">favoriteAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setFavoriteAction",
                    "code": "<pre>setFavoriteAction(oFavoriteAction) : this</pre>"
                },
                {
                    "name": "setFitContent",
                    "visibility": "public",
                    "since": "1.73",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bFitContent",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>fitContent</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFitContent\">fitContent</a>.</p><p>Optimizes <code>SemanticPage</code> responsiveness on small screens and behavior when expanding/collapsing the <code>SemanticPageHeader</code>.</p><p><b>Note:</b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be <a target=\"_self\" href=\"api/sap.ui.table.Table\">sap.ui.table.Table</a> and <a target=\"_self\" href=\"api/sap.ui.table.AnalyticalTable\">sap.ui.table.AnalyticalTable</a> depending on their settings.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setFitContent",
                    "code": "<pre>setFitContent(bFitContent?) : this</pre>"
                },
                {
                    "name": "setFlagAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFlagAction",
                            "optional": false,
                            "description": "<p>The flagAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.FlagAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.FlagAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFlagAction\">flagAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setFlagAction",
                    "code": "<pre>setFlagAction(oFlagAction) : this</pre>"
                },
                {
                    "name": "setFooterMainAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFooterMainAction",
                            "optional": false,
                            "description": "<p>The footerMainAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.FooterMainAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.FooterMainAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFooterMainAction\">footerMainAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setFooterMainAction",
                    "code": "<pre>setFooterMainAction(oFooterMainAction) : this</pre>"
                },
                {
                    "name": "setFullScreenAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oFullScreenAction",
                            "optional": false,
                            "description": "<p>The fullScreenAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.FullScreenAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.FullScreenAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getFullScreenAction\">fullScreenAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setFullScreenAction",
                    "code": "<pre>setFullScreenAction(oFullScreenAction) : this</pre>"
                },
                {
                    "name": "setHeaderExpanded",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bHeaderExpanded",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>headerExpanded</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderExpanded\">headerExpanded</a>.</p><p>Determines whether the header is expanded.</p><p>The header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.</p><p><b>Note:</b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setHeaderExpanded",
                    "code": "<pre>setHeaderExpanded(bHeaderExpanded?) : this</pre>"
                },
                {
                    "name": "setHeaderPinnable",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bHeaderPinnable",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>headerPinnable</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getHeaderPinnable\">headerPinnable</a>.</p><p>Determines whether the header is pinnable.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setHeaderPinnable",
                    "code": "<pre>setHeaderPinnable(bHeaderPinnable?) : this</pre>"
                },
                {
                    "name": "setLandmarkInfo",
                    "visibility": "public",
                    "since": "1.61",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oLandmarkInfo",
                            "optional": false,
                            "description": "<p>The landmarkInfo to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageAccessibleLandmarkInfo",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageAccessibleLandmarkInfo"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getLandmarkInfo\">landmarkInfo</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setLandmarkInfo",
                    "code": "<pre>setLandmarkInfo(oLandmarkInfo) : this</pre>"
                },
                {
                    "name": "setMessagesIndicator",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMessagesIndicator",
                            "optional": false,
                            "description": "<p>The messagesIndicator to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.MessagesIndicator",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.MessagesIndicator"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getMessagesIndicator\">messagesIndicator</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setMessagesIndicator",
                    "code": "<pre>setMessagesIndicator(oMessagesIndicator) : this</pre>"
                },
                {
                    "name": "setNegativeAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oNegativeAction",
                            "optional": false,
                            "description": "<p>The negativeAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.NegativeAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.NegativeAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getNegativeAction\">negativeAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setNegativeAction",
                    "code": "<pre>setNegativeAction(oNegativeAction) : this</pre>"
                },
                {
                    "name": "setPositiveAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oPositiveAction",
                            "optional": false,
                            "description": "<p>The positiveAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.PositiveAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.PositiveAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPositiveAction\">positiveAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setPositiveAction",
                    "code": "<pre>setPositiveAction(oPositiveAction) : this</pre>"
                },
                {
                    "name": "setPreserveHeaderStateOnScroll",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bPreserveHeaderStateOnScroll",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>preserveHeaderStateOnScroll</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPreserveHeaderStateOnScroll\">preserveHeaderStateOnScroll</a>.</p><p>Preserves the current header state when scrolling.</p><p>For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.</p><p><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setPreserveHeaderStateOnScroll",
                    "code": "<pre>setPreserveHeaderStateOnScroll(bPreserveHeaderStateOnScroll?) : this</pre>"
                },
                {
                    "name": "setPrintAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oPrintAction",
                            "optional": false,
                            "description": "<p>The printAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.PrintAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.PrintAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getPrintAction\">printAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setPrintAction",
                    "code": "<pre>setPrintAction(oPrintAction) : this</pre>"
                },
                {
                    "name": "setSaveAsTileAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSaveAsTileAction",
                            "optional": false,
                            "description": "<p>The saveAsTileAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSaveAsTileAction\">saveAsTileAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setSaveAsTileAction",
                    "code": "<pre>setSaveAsTileAction(oSaveAsTileAction) : this</pre>"
                },
                {
                    "name": "setSendEmailAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSendEmailAction",
                            "optional": false,
                            "description": "<p>The sendEmailAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.SendEmailAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.SendEmailAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSendEmailAction\">sendEmailAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setSendEmailAction",
                    "code": "<pre>setSendEmailAction(oSendEmailAction) : this</pre>"
                },
                {
                    "name": "setSendMessageAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSendMessageAction",
                            "optional": false,
                            "description": "<p>The sendMessageAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.SendMessageAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.SendMessageAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getSendMessageAction\">sendMessageAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setSendMessageAction",
                    "code": "<pre>setSendMessageAction(oSendMessageAction) : this</pre>"
                },
                {
                    "name": "setShareInJamAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oShareInJamAction",
                            "optional": false,
                            "description": "<p>The shareInJamAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.ShareInJamAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.ShareInJamAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getShareInJamAction\">shareInJamAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setShareInJamAction",
                    "code": "<pre>setShareInJamAction(oShareInJamAction) : this</pre>"
                },
                {
                    "name": "setShowFooter",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowFooter",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showFooter</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getShowFooter\">showFooter</a>.</p><p>Determines whether the footer is visible.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setShowFooter",
                    "code": "<pre>setShowFooter(bShowFooter?) : this</pre>"
                },
                {
                    "name": "setTitleAreaShrinkRatio",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTitleAreaShrinkRatio",
                            "optional": true,
                            "defaultValue": "\"1:1.6:1.6\"",
                            "description": "<p>New value for property <code>titleAreaShrinkRatio</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.DynamicPageTitleShrinkRatio",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.DynamicPageTitleShrinkRatio"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleAreaShrinkRatio\">titleAreaShrinkRatio</a>.</p><p>Assigns shrinking ratio to the <code>SemanticPage</code> title areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.</p><p>The value must be set in <code>Heading:Content:Actions</code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.</p><p>For example, if <code>2:7:1</code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.</p><p>If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8</code> is equal to <code>1:2:4</code>.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"1:1.6:1.6\"</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleAreaShrinkRatio",
                    "code": "<pre>setTitleAreaShrinkRatio(sTitleAreaShrinkRatio?) : this</pre>"
                },
                {
                    "name": "setTitleBreadcrumbs",
                    "visibility": "public",
                    "since": "1.52",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleBreadcrumbs",
                            "optional": false,
                            "description": "<p>The titleBreadcrumbs to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.IBreadcrumbs",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.IBreadcrumbs"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleBreadcrumbs\">titleBreadcrumbs</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleBreadcrumbs",
                    "code": "<pre>setTitleBreadcrumbs(oTitleBreadcrumbs) : this</pre>"
                },
                {
                    "name": "setTitleExpandedHeading",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleExpandedHeading",
                            "optional": false,
                            "description": "<p>The titleExpandedHeading to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleExpandedHeading\">titleExpandedHeading</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleExpandedHeading",
                    "code": "<pre>setTitleExpandedHeading(oTitleExpandedHeading) : this</pre>"
                },
                {
                    "name": "setTitleHeading",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleHeading",
                            "optional": false,
                            "description": "<p>The titleHeading to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleHeading\">titleHeading</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleHeading",
                    "code": "<pre>setTitleHeading(oTitleHeading) : this</pre>"
                },
                {
                    "name": "setTitleMainAction",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleMainAction",
                            "optional": false,
                            "description": "<p>The titleMainAction to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.semantic.TitleMainAction",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.semantic.TitleMainAction"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleMainAction\">titleMainAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleMainAction",
                    "code": "<pre>setTitleMainAction(oTitleMainAction) : this</pre>"
                },
                {
                    "name": "setTitleSnappedHeading",
                    "visibility": "public",
                    "since": "1.58",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleSnappedHeading",
                            "optional": false,
                            "description": "<p>The titleSnappedHeading to set</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedHeading\">titleSnappedHeading</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleSnappedHeading",
                    "code": "<pre>setTitleSnappedHeading(oTitleSnappedHeading) : this</pre>"
                },
                {
                    "name": "setTitleSnappedOnMobile",
                    "visibility": "public",
                    "since": "1.63",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oTitleSnappedOnMobile",
                            "optional": false,
                            "description": "<p>The titleSnappedOnMobile to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.Title",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Title"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getTitleSnappedOnMobile\">titleSnappedOnMobile</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setTitleSnappedOnMobile",
                    "code": "<pre>setTitleSnappedOnMobile(oTitleSnappedOnMobile) : this</pre>"
                },
                {
                    "name": "setToggleHeaderOnTitleClick",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bToggleHeaderOnTitleClick",
                            "optional": true,
                            "defaultValue": true,
                            "description": "<p>New value for property <code>toggleHeaderOnTitleClick</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage#methods/getToggleHeaderOnTitleClick\">toggleHeaderOnTitleClick</a>.</p><p>Determines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.</p><p>If set to <code>false</code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>true</code>.</p>",
                    "href": "api/sap.f.semantic.SemanticPage#methods/setToggleHeaderOnTitleClick",
                    "code": "<pre>setToggleHeaderOnTitleClick(bToggleHeaderOnTitleClick?) : this</pre>"
                }
            ],
            "displayName": "sap.f.semantic.SemanticPage",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.semantic.SemanticPage",
            "subTitle": "",
            "docuLink": "47dc86847f7a426a8e557167cf523bda",
            "docuLinkText": " Semantic Page",
            "uxGuidelinesLink": "https://experience.sap.com/fiori-design-web/semantic-page",
            "uxGuidelinesLinkText": "Semantic Page"
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.SemanticToggleButton",
            "basename": "SemanticToggleButton",
            "resource": "sap/f/semantic/SemanticToggleButton.js",
            "module": "sap/f/semantic/SemanticToggleButton",
            "export": "",
            "abstract": true,
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.m.semantic.SemanticToggleButton",
            "description": "<p>A base class for the <a target=\"_self\" href=\"api/sap.f.semantic.FavoriteAction\">sap.f.semantic.FavoriteAction</a> and <a target=\"_self\" href=\"api/sap.f.semantic.FlagAction\">sap.f.semantic.FlagAction</a>.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SemanticToggleButton</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.m.semantic.SemanticToggleButton#constructor\">sap.m.semantic.SemanticToggleButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.SemanticToggleButton(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.SemanticToggleButton.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.m.semantic.SemanticToggleButton#methods/sap.m.semantic.SemanticToggleButton.extend\">sap.m.semantic.SemanticToggleButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticToggleButton#methods/sap.f.semantic.SemanticToggleButton.extend",
                    "code": "<pre>sap.f.semantic.SemanticToggleButton.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.SemanticToggleButton.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.SemanticToggleButton.</p>",
                    "href": "api/sap.f.semantic.SemanticToggleButton#methods/sap.f.semantic.SemanticToggleButton.getMetadata",
                    "code": "<pre>sap.f.semantic.SemanticToggleButton.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.SemanticToggleButton",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "abstract class sap.f.semantic.SemanticToggleButton",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.SendEmailAction",
            "basename": "SendEmailAction",
            "resource": "sap/f/semantic/SendEmailAction.js",
            "module": "sap/f/semantic/SendEmailAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>sendEmailAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SendEmailAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.SendEmailAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.SendEmailAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.SendEmailAction#methods/sap.f.semantic.SendEmailAction.extend",
                    "code": "<pre>sap.f.semantic.SendEmailAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.SendEmailAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.SendEmailAction.</p>",
                    "href": "api/sap.f.semantic.SendEmailAction#methods/sap.f.semantic.SendEmailAction.getMetadata",
                    "code": "<pre>sap.f.semantic.SendEmailAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.SendEmailAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.SendEmailAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.SendMessageAction",
            "basename": "SendMessageAction",
            "resource": "sap/f/semantic/SendMessageAction.js",
            "module": "sap/f/semantic/SendMessageAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>sendMessageAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SendMessageAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.SendMessageAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.SendMessageAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.SendMessageAction#methods/sap.f.semantic.SendMessageAction.extend",
                    "code": "<pre>sap.f.semantic.SendMessageAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.SendMessageAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.SendMessageAction.</p>",
                    "href": "api/sap.f.semantic.SendMessageAction#methods/sap.f.semantic.SendMessageAction.getMetadata",
                    "code": "<pre>sap.f.semantic.SendMessageAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.SendMessageAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.SendMessageAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.ShareInJamAction",
            "basename": "ShareInJamAction",
            "resource": "sap/f/semantic/ShareInJamAction.js",
            "module": "sap/f/semantic/ShareInJamAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.SemanticButton",
            "description": "<p>A semantic-specific button, eligible for the <code>shareInJamAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>ShareInJamAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#constructor\">sap.f.semantic.SemanticButton</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.ShareInJamAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.ShareInJamAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton#methods/sap.f.semantic.SemanticButton.extend\">sap.f.semantic.SemanticButton.extend</a>.</p>",
                    "href": "api/sap.f.semantic.ShareInJamAction#methods/sap.f.semantic.ShareInJamAction.extend",
                    "code": "<pre>sap.f.semantic.ShareInJamAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.ShareInJamAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.ShareInJamAction.</p>",
                    "href": "api/sap.f.semantic.ShareInJamAction#methods/sap.f.semantic.ShareInJamAction.getMetadata",
                    "code": "<pre>sap.f.semantic.ShareInJamAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.ShareInJamAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.ShareInJamAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.semantic.TitleMainAction",
            "basename": "TitleMainAction",
            "resource": "sap/f/semantic/TitleMainAction.js",
            "module": "sap/f/semantic/TitleMainAction",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.46.0",
            "extends": "sap.f.semantic.MainAction",
            "description": "<p>A semantic-specific button, eligible for the <code>titleMainAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
            "ui5-metadata": {
                "stereotype": "element"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Optional initial settings for the new control: a map/JSON-object with initial property values, event listeners etc. for the new object</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>TitleMainAction</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p><p>This class does not have its own settings, but all settings applicable to the base type <a target=\"_self\" href=\"api/sap.f.semantic.MainAction#constructor\">sap.f.semantic.MainAction</a> can be used.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.semantic.TitleMainAction(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "sap.f.semantic.TitleMainAction.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.f.semantic.MainAction#methods/sap.f.semantic.MainAction.extend\">sap.f.semantic.MainAction.extend</a>.</p>",
                    "href": "api/sap.f.semantic.TitleMainAction#methods/sap.f.semantic.TitleMainAction.extend",
                    "code": "<pre>sap.f.semantic.TitleMainAction.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "sap.f.semantic.TitleMainAction.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.semantic.TitleMainAction.</p>",
                    "href": "api/sap.f.semantic.TitleMainAction#methods/sap.f.semantic.TitleMainAction.getMetadata",
                    "code": "<pre>sap.f.semantic.TitleMainAction.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                }
            ],
            "displayName": "sap.f.semantic.TitleMainAction",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.semantic.TitleMainAction",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.ShellBar",
            "basename": "ShellBar",
            "resource": "sap/f/ShellBar.js",
            "module": "sap/f/ShellBar",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.63",
            "extends": "sap.ui.core.Control",
            "implements": [
                "sap.f.IShellBar",
                "sap.m.IBar",
                "sap.tnt.IToolHeader"
            ],
            "description": "<p>A horizontal bar control holding multiple child controls used as application shell header.</p><h3>Overview</h3><p>The <code>ShellBar</code> is used as the uppermost section (shell) of the app. It is fully responsive and adaptive, and corresponds to the SAP Fiori Design Guidelines.</p><h3>Usage</h3><p>Content specified in the <code>ShellBar</code> properties and aggregations is automatically positioned in dedicated places of the control.</p>",
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "homeIcon",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "empty string",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the URI to the home icon, such as company or product logo.</p>",
                        "methods": [
                            "getHomeIcon",
                            "setHomeIcon"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "homeIconTooltip",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.67",
                        "description": "<p>Defines a custom tooltip for the home icon. If not set, a default tooltip is used.<br><br><i>Since: 1.67.</i></p>",
                        "methods": [
                            "getHomeIconTooltip",
                            "setHomeIconTooltip"
                        ]
                    },
                    {
                        "name": "notificationsNumber",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.64",
                        "description": "<p>Defines the displayed number of upcoming notifications.<br><br><i>Since: 1.64.</i></p>",
                        "methods": [
                            "getNotificationsNumber",
                            "setNotificationsNumber"
                        ]
                    },
                    {
                        "name": "secondTitle",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the secondary title of the control.</p>",
                        "methods": [
                            "getSecondTitle",
                            "setSecondTitle"
                        ]
                    },
                    {
                        "name": "showCopilot",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the SAP CoPilot icon is displayed.</p>",
                        "methods": [
                            "getShowCopilot",
                            "setShowCopilot"
                        ]
                    },
                    {
                        "name": "showMenuButton",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether a hamburger menu button is displayed (as an alternative if the <code>menu</code> aggregation is not used).</p>",
                        "methods": [
                            "getShowMenuButton",
                            "setShowMenuButton"
                        ]
                    },
                    {
                        "name": "showNavButton",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether a back navigation button is displayed.</p>",
                        "methods": [
                            "getShowNavButton",
                            "setShowNavButton"
                        ]
                    },
                    {
                        "name": "showNotifications",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the notifications button is displayed.</p>",
                        "methods": [
                            "getShowNotifications",
                            "setShowNotifications"
                        ]
                    },
                    {
                        "name": "showProductSwitcher",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the product switcher button is displayed.</p>",
                        "methods": [
                            "getShowProductSwitcher",
                            "setShowProductSwitcher"
                        ]
                    },
                    {
                        "name": "showSearch",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the search button is displayed.</p>",
                        "methods": [
                            "getShowSearch",
                            "setShowSearch"
                        ]
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "defaultValue": "empty string",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines the main title of the control.</p>",
                        "methods": [
                            "getTitle",
                            "setTitle"
                        ]
                    }
                ],
                "aggregations": [
                    {
                        "name": "_additionalBox",
                        "singularName": "_additionalBox",
                        "type": "sap.m.HBox",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Holds the internally created HBox with text content.</p>",
                        "methods": [
                            "get_additionalBox",
                            "destroy_additionalBox",
                            "set_additionalBox"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_overflowToolbar",
                        "singularName": "_overflowToolbar",
                        "type": "sap.m.OverflowToolbar",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Holds the internally created OverflowToolbar.</p>",
                        "methods": [
                            "get_overflowToolbar",
                            "destroy_overflowToolbar",
                            "set_overflowToolbar"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "additionalContent",
                        "singularName": "additionalContent",
                        "type": "sap.f.IShellBar",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>Additional content to be displayed in the control.</p><p><b>Note:</b> Only controls implementing the <code><a target=\"_self\" href=\"api/sap.f.IShellBar\">sap.f.IShellBar</a></code> interface are allowed.</p>",
                        "methods": [
                            "getAdditionalContent",
                            "destroyAdditionalContent",
                            "insertAdditionalContent",
                            "addAdditionalContent",
                            "removeAdditionalContent",
                            "indexOfAdditionalContent",
                            "removeAllAdditionalContent"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "menu",
                        "singularName": "menu",
                        "type": "sap.m.Menu",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The menu attached to the main title.</p>",
                        "methods": [
                            "getMenu",
                            "destroyMenu",
                            "setMenu"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "profile",
                        "singularName": "profile",
                        "type": "sap.m.Avatar",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The profile avatar.</p>",
                        "methods": [
                            "getProfile",
                            "destroyProfile",
                            "setProfile"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "searchManager",
                        "singularName": "searchManager",
                        "type": "sap.f.SearchManager",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "since": "1.67",
                        "description": "<p>Configurable search.</p><p><b>Note:</b> If <code>showSearch</code> is set to <code>true</code>, two search buttons appear.<br><br><i>Since: 1.67.</i></p>",
                        "methods": [
                            "getSearchManager",
                            "destroySearchManager",
                            "setSearchManager"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>ShellBar</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.ShellBar(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "avatarPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "avatar",
                            "type": "sap.m.Avatar",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.avatar",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the profile avatar is pressed.</p>"
                },
                {
                    "name": "copilotPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "image",
                            "type": "sap.m.Image",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "deprecated": {
                                "since": "1.121"
                            },
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.image",
                            "linkEnabled": true,
                            "deprecatedText": "Deprecated as of version 1.121"
                        },
                        {
                            "name": "button",
                            "type": "sap.m.Button",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.button",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the SAP CoPilot icon is pressed.</p>"
                },
                {
                    "name": "homeIconPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "icon",
                            "type": "sap.m.Image",
                            "optional": false,
                            "description": "<p>Reference to the image that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.icon",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the <code>homeIcon</code> is pressed.</p>"
                },
                {
                    "name": "menuButtonPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "button",
                            "type": "sap.m.Button",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.button",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the alternative menu button is pressed.</p>"
                },
                {
                    "name": "navButtonPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "button",
                            "type": "sap.m.Button",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.button",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the navigation/back button is pressed.</p>"
                },
                {
                    "name": "notificationsPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "button",
                            "type": "sap.m.Button",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.button",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the notifications button is pressed.</p>"
                },
                {
                    "name": "productSwitcherPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "button",
                            "type": "sap.m.Button",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.button",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the product switcher button is pressed.</p>"
                },
                {
                    "name": "searchButtonPressed",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "button",
                            "type": "sap.m.Button",
                            "optional": false,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.button",
                            "linkEnabled": true
                        }
                    ],
                    "description": "<p>Fired when the search button is pressed.</p>"
                }
            ],
            "methods": [
                {
                    "name": "_applyContextClassFor",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.m.IBar",
                        "description": "<p><code>this</code> for chaining</p>",
                        "types": [
                            {
                                "value": "sap.m.IBar",
                                "href": "api/sap.m.IBar",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Sets classes according to the context of the page. Possible contexts are header, footer, and subheader.</p>",
                    "href": "api/sap.f.ShellBar#methods/_applyContextClassFor",
                    "code": "<pre>_applyContextClassFor() : sap.m.IBar</pre>"
                },
                {
                    "name": "_applyTag",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.m.IBar",
                        "description": "<p><code>this</code> for chaining</p>",
                        "types": [
                            {
                                "value": "sap.m.IBar",
                                "href": "api/sap.m.IBar",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Sets the HTML tag according to the context of the page. Possible contexts are header, footer, and subheader.</p>",
                    "href": "api/sap.f.ShellBar#methods/_applyTag",
                    "code": "<pre>_applyTag() : sap.m.IBar</pre>"
                },
                {
                    "name": "addAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAdditionalContent",
                            "optional": false,
                            "description": "<p>The additionalContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.IShellBar",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.IShellBar"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some additionalContent to the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/addAdditionalContent",
                    "code": "<pre>addAdditionalContent(oAdditionalContent) : this</pre>"
                },
                {
                    "name": "applyTagAndContextClassFor",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.m.IBar",
                        "description": "<p><code>this</code> for chaining</p>",
                        "types": [
                            {
                                "value": "sap.m.IBar",
                                "href": "api/sap.m.IBar",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Sets classes and HTML tag according to the context of the page. Possible contexts are header, footer, and subheader</p>",
                    "href": "api/sap.f.ShellBar#methods/applyTagAndContextClassFor",
                    "code": "<pre>applyTagAndContextClassFor() : sap.m.IBar</pre>"
                },
                {
                    "name": "attachAvatarPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/avatarPressed\">avatarPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the profile avatar is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachAvatarPressed",
                    "code": "<pre>attachAvatarPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachCopilotPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/copilotPressed\">copilotPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the SAP CoPilot icon is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachCopilotPressed",
                    "code": "<pre>attachCopilotPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachHomeIconPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/homeIconPressed\">homeIconPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the <code>homeIcon</code> is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachHomeIconPressed",
                    "code": "<pre>attachHomeIconPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachMenuButtonPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/menuButtonPressed\">menuButtonPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the alternative menu button is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachMenuButtonPressed",
                    "code": "<pre>attachMenuButtonPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachNavButtonPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/navButtonPressed\">navButtonPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the navigation/back button is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachNavButtonPressed",
                    "code": "<pre>attachNavButtonPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachNotificationsPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/notificationsPressed\">notificationsPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the notifications button is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachNotificationsPressed",
                    "code": "<pre>attachNotificationsPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachProductSwitcherPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/productSwitcherPressed\">productSwitcherPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the product switcher button is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachProductSwitcherPressed",
                    "code": "<pre>attachProductSwitcherPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "attachSearchButtonPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/searchButtonPressed\">searchButtonPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar</code> itself.</p><p>Fired when the search button is pressed.</p>",
                    "href": "api/sap.f.ShellBar#methods/attachSearchButtonPressed",
                    "code": "<pre>attachSearchButtonPressed(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the additionalContent in the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/destroyAdditionalContent",
                    "code": "<pre>destroyAdditionalContent() : this</pre>"
                },
                {
                    "name": "destroyMenu",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the menu in the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getMenu\">menu</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/destroyMenu",
                    "code": "<pre>destroyMenu() : this</pre>"
                },
                {
                    "name": "destroyProfile",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the profile in the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getProfile\">profile</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/destroyProfile",
                    "code": "<pre>destroyProfile() : this</pre>"
                },
                {
                    "name": "destroySearchManager",
                    "visibility": "public",
                    "since": "1.67",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys the searchManager in the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getSearchManager\">searchManager</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/destroySearchManager",
                    "code": "<pre>destroySearchManager() : this</pre>"
                },
                {
                    "name": "detachAvatarPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/avatarPressed\">avatarPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachAvatarPressed",
                    "code": "<pre>detachAvatarPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachCopilotPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/copilotPressed\">copilotPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachCopilotPressed",
                    "code": "<pre>detachCopilotPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachHomeIconPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/homeIconPressed\">homeIconPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachHomeIconPressed",
                    "code": "<pre>detachHomeIconPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachMenuButtonPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/menuButtonPressed\">menuButtonPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachMenuButtonPressed",
                    "code": "<pre>detachMenuButtonPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachNavButtonPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/navButtonPressed\">navButtonPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachNavButtonPressed",
                    "code": "<pre>detachNavButtonPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachNotificationsPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/notificationsPressed\">notificationsPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachNotificationsPressed",
                    "code": "<pre>detachNotificationsPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachProductSwitcherPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/productSwitcherPressed\">productSwitcherPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachProductSwitcherPressed",
                    "code": "<pre>detachProductSwitcherPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "detachSearchButtonPressed",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.ShellBar#events/searchButtonPressed\">searchButtonPressed</a> event of this <code>sap.f.ShellBar</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.ShellBar#methods/detachSearchButtonPressed",
                    "code": "<pre>detachSearchButtonPressed(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.ShellBar.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.ShellBar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/sap.f.ShellBar.extend",
                    "code": "<pre>sap.f.ShellBar.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireAvatarPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "avatar",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Avatar",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Avatar"
                                }
                            ],
                            "phoneName": "mParameters.avatar",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/avatarPressed\">avatarPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireAvatarPressed",
                    "code": "<pre>fireAvatarPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireCopilotPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "image",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Image",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Image"
                                }
                            ],
                            "phoneName": "mParameters.image",
                            "defaultValue": ""
                        },
                        {
                            "name": "button",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "phoneName": "mParameters.button",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/copilotPressed\">copilotPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireCopilotPressed",
                    "code": "<pre>fireCopilotPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireHomeIconPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "icon",
                            "optional": true,
                            "description": "<p>Reference to the image that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Image",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Image"
                                }
                            ],
                            "phoneName": "mParameters.icon",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/homeIconPressed\">homeIconPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireHomeIconPressed",
                    "code": "<pre>fireHomeIconPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireMenuButtonPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "button",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "phoneName": "mParameters.button",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/menuButtonPressed\">menuButtonPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireMenuButtonPressed",
                    "code": "<pre>fireMenuButtonPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireNavButtonPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "button",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "phoneName": "mParameters.button",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/navButtonPressed\">navButtonPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireNavButtonPressed",
                    "code": "<pre>fireNavButtonPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireNotificationsPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "button",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "phoneName": "mParameters.button",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/notificationsPressed\">notificationsPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireNotificationsPressed",
                    "code": "<pre>fireNotificationsPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireProductSwitcherPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "button",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "phoneName": "mParameters.button",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/productSwitcherPressed\">productSwitcherPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireProductSwitcherPressed",
                    "code": "<pre>fireProductSwitcherPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "fireSearchButtonPressed",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "button",
                            "optional": true,
                            "description": "<p>Reference to the button that has been pressed</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.m.Button",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Button"
                                }
                            ],
                            "phoneName": "mParameters.button",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.ShellBar#events/searchButtonPressed\">searchButtonPressed</a> to attached listeners.</p>",
                    "href": "api/sap.f.ShellBar#methods/fireSearchButtonPressed",
                    "code": "<pre>fireSearchButtonPressed(mParameters?) : this</pre>"
                },
                {
                    "name": "getAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.IShellBar[]",
                        "types": [
                            {
                                "value": "sap.f.IShellBar[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>.</p><p>Additional content to be displayed in the control.</p><p><b>Note:</b> Only controls implementing the <code><a target=\"_self\" href=\"api/sap.f.IShellBar\">sap.f.IShellBar</a></code> interface are allowed.</p>",
                    "href": "api/sap.f.ShellBar#methods/getAdditionalContent",
                    "code": "<pre>getAdditionalContent() : sap.f.IShellBar[]</pre>"
                },
                {
                    "name": "getContext",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.m.BarContexts",
                        "description": "<p>with all available contexts</p>",
                        "types": [
                            {
                                "value": "sap.m.BarContexts",
                                "href": "api/sap.m.BarContexts",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets the available Bar contexts.</p>",
                    "href": "api/sap.f.ShellBar#methods/getContext",
                    "code": "<pre>getContext() : sap.m.BarContexts</pre>"
                },
                {
                    "name": "getHomeIcon",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>homeIcon</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getHomeIcon\">homeIcon</a>.</p><p>Defines the URI to the home icon, such as company or product logo.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getHomeIcon",
                    "code": "<pre>getHomeIcon() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "getHomeIconTooltip",
                    "visibility": "public",
                    "since": "1.67",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>homeIconTooltip</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getHomeIconTooltip\">homeIconTooltip</a>.</p><p>Defines a custom tooltip for the home icon. If not set, a default tooltip is used.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getHomeIconTooltip",
                    "code": "<pre>getHomeIconTooltip() : string</pre>"
                },
                {
                    "name": "getHTMLTag",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>the HTML-tag</p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets the HTML tag of the root DOM Reference.</p>",
                    "href": "api/sap.f.ShellBar#methods/getHTMLTag",
                    "code": "<pre>getHTMLTag() : string</pre>"
                },
                {
                    "name": "getMenu",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Menu",
                        "types": [
                            {
                                "value": "sap.m.Menu",
                                "href": "api/sap.m.Menu",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getMenu\">menu</a>.</p><p>The menu attached to the main title.</p>",
                    "href": "api/sap.f.ShellBar#methods/getMenu",
                    "code": "<pre>getMenu() : sap.m.Menu</pre>"
                },
                {
                    "name": "sap.f.ShellBar.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.ShellBar.</p>",
                    "href": "api/sap.f.ShellBar#methods/sap.f.ShellBar.getMetadata",
                    "code": "<pre>sap.f.ShellBar.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getNotificationsNumber",
                    "visibility": "public",
                    "since": "1.64",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>notificationsNumber</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getNotificationsNumber\">notificationsNumber</a>.</p><p>Defines the displayed number of upcoming notifications.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getNotificationsNumber",
                    "code": "<pre>getNotificationsNumber() : string</pre>"
                },
                {
                    "name": "getProfile",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.m.Avatar",
                        "types": [
                            {
                                "value": "sap.m.Avatar",
                                "href": "api/sap.m.Avatar",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getProfile\">profile</a>.</p><p>The profile avatar.</p>",
                    "href": "api/sap.f.ShellBar#methods/getProfile",
                    "code": "<pre>getProfile() : sap.m.Avatar</pre>"
                },
                {
                    "name": "getSearchManager",
                    "visibility": "public",
                    "since": "1.67",
                    "returnValue": {
                        "type": "sap.f.SearchManager",
                        "types": [
                            {
                                "value": "sap.f.SearchManager",
                                "href": "api/sap.f.SearchManager",
                                "linkEnabled": true
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getSearchManager\">searchManager</a>.</p><p>Configurable search.</p><p><b>Note:</b> If <code>showSearch</code> is set to <code>true</code>, two search buttons appear.</p>",
                    "href": "api/sap.f.ShellBar#methods/getSearchManager",
                    "code": "<pre>getSearchManager() : sap.f.SearchManager</pre>"
                },
                {
                    "name": "getSecondTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>secondTitle</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getSecondTitle\">secondTitle</a>.</p><p>Defines the secondary title of the control.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getSecondTitle",
                    "code": "<pre>getSecondTitle() : string</pre>"
                },
                {
                    "name": "getShowCopilot",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showCopilot</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowCopilot\">showCopilot</a>.</p><p>Determines whether the SAP CoPilot icon is displayed.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getShowCopilot",
                    "code": "<pre>getShowCopilot() : boolean</pre>"
                },
                {
                    "name": "getShowMenuButton",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showMenuButton</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowMenuButton\">showMenuButton</a>.</p><p>Determines whether a hamburger menu button is displayed (as an alternative if the <code>menu</code> aggregation is not used).</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getShowMenuButton",
                    "code": "<pre>getShowMenuButton() : boolean</pre>"
                },
                {
                    "name": "getShowNavButton",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showNavButton</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowNavButton\">showNavButton</a>.</p><p>Determines whether a back navigation button is displayed.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getShowNavButton",
                    "code": "<pre>getShowNavButton() : boolean</pre>"
                },
                {
                    "name": "getShowNotifications",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showNotifications</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowNotifications\">showNotifications</a>.</p><p>Determines whether the notifications button is displayed.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getShowNotifications",
                    "code": "<pre>getShowNotifications() : boolean</pre>"
                },
                {
                    "name": "getShowProductSwitcher",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showProductSwitcher</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowProductSwitcher\">showProductSwitcher</a>.</p><p>Determines whether the product switcher button is displayed.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getShowProductSwitcher",
                    "code": "<pre>getShowProductSwitcher() : boolean</pre>"
                },
                {
                    "name": "getShowSearch",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>showSearch</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowSearch\">showSearch</a>.</p><p>Determines whether the search button is displayed.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getShowSearch",
                    "code": "<pre>getShowSearch() : boolean</pre>"
                },
                {
                    "name": "getTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>title</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getTitle\">title</a>.</p><p>Defines the main title of the control.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/getTitle",
                    "code": "<pre>getTitle() : string</pre>"
                },
                {
                    "name": "indexOfAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAdditionalContent",
                            "optional": false,
                            "description": "<p>The additionalContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.f.IShellBar",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.IShellBar"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.f.IShellBar</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.ShellBar#methods/indexOfAdditionalContent",
                    "code": "<pre>indexOfAdditionalContent(oAdditionalContent) : int</pre>"
                },
                {
                    "name": "insertAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oAdditionalContent",
                            "optional": false,
                            "description": "<p>The additionalContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.IShellBar",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.IShellBar"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the additionalContent should be inserted at; for a negative value of <code>iIndex</code>, the additionalContent is inserted at position 0; for a value greater than the current size of the aggregation, the additionalContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a additionalContent into the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/insertAdditionalContent",
                    "code": "<pre>insertAdditionalContent(oAdditionalContent, iIndex) : this</pre>"
                },
                {
                    "name": "isContextSensitive",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>isContextSensitive</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Returns if the bar is sensitive to the container context. Implementation of the IBar interface</p>",
                    "href": "api/sap.f.ShellBar#methods/isContextSensitive",
                    "code": "<pre>isContextSensitive() : boolean</pre>"
                },
                {
                    "name": "removeAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.IShellBar|null",
                        "description": "<p>The removed additionalContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.f.IShellBar",
                                "href": "api/sap.f.IShellBar",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vAdditionalContent",
                            "optional": false,
                            "description": "<p>The additionalContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.f.IShellBar",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.IShellBar"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a additionalContent from the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/removeAdditionalContent",
                    "code": "<pre>removeAdditionalContent(vAdditionalContent) : sap.f.IShellBar|null</pre>"
                },
                {
                    "name": "removeAllAdditionalContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.IShellBar[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.f.IShellBar[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getAdditionalContent\">additionalContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.ShellBar#methods/removeAllAdditionalContent",
                    "code": "<pre>removeAllAdditionalContent() : sap.f.IShellBar[]</pre>"
                },
                {
                    "name": "setHomeIcon",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHomeIcon",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>homeIcon</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getHomeIcon\">homeIcon</a>.</p><p>Defines the URI to the home icon, such as company or product logo.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setHomeIcon",
                    "code": "<pre>setHomeIcon(sHomeIcon?) : this</pre>"
                },
                {
                    "name": "setHomeIconTooltip",
                    "visibility": "public",
                    "since": "1.67",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sHomeIconTooltip",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>homeIconTooltip</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getHomeIconTooltip\">homeIconTooltip</a>.</p><p>Defines a custom tooltip for the home icon. If not set, a default tooltip is used.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setHomeIconTooltip",
                    "code": "<pre>setHomeIconTooltip(sHomeIconTooltip?) : this</pre>"
                },
                {
                    "name": "setHTMLTag",
                    "visibility": "protected",
                    "since": "1.65",
                    "returnValue": {
                        "type": "sap.m.IBar",
                        "description": "<p>this for chaining</p>",
                        "types": [
                            {
                                "value": "sap.m.IBar",
                                "href": "api/sap.m.IBar",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTag",
                            "optional": false,
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": "",
                            "description": ""
                        }
                    ],
                    "description": "<p>Sets the HTML tag of the root DOM Reference.</p>",
                    "href": "api/sap.f.ShellBar#methods/setHTMLTag",
                    "code": "<pre>setHTMLTag(sTag) : sap.m.IBar</pre>"
                },
                {
                    "name": "setMenu",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMenu",
                            "optional": false,
                            "description": "<p>The menu to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.Menu",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Menu"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getMenu\">menu</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setMenu",
                    "code": "<pre>setMenu(oMenu) : this</pre>"
                },
                {
                    "name": "setNotificationsNumber",
                    "visibility": "public",
                    "since": "1.64",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sNotificationsNumber",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>notificationsNumber</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getNotificationsNumber\">notificationsNumber</a>.</p><p>Defines the displayed number of upcoming notifications.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setNotificationsNumber",
                    "code": "<pre>setNotificationsNumber(sNotificationsNumber?) : this</pre>"
                },
                {
                    "name": "setProfile",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oProfile",
                            "optional": false,
                            "description": "<p>The profile to set</p>",
                            "types": [
                                {
                                    "value": "sap.m.Avatar",
                                    "linkEnabled": true,
                                    "href": "api/sap.m.Avatar"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getProfile\">profile</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setProfile",
                    "code": "<pre>setProfile(oProfile) : this</pre>"
                },
                {
                    "name": "setSearchManager",
                    "visibility": "public",
                    "since": "1.67",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oSearchManager",
                            "optional": false,
                            "description": "<p>The searchManager to set</p>",
                            "types": [
                                {
                                    "value": "sap.f.SearchManager",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SearchManager"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Sets the aggregated <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getSearchManager\">searchManager</a>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setSearchManager",
                    "code": "<pre>setSearchManager(oSearchManager) : this</pre>"
                },
                {
                    "name": "setSecondTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSecondTitle",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>secondTitle</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getSecondTitle\">secondTitle</a>.</p><p>Defines the secondary title of the control.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setSecondTitle",
                    "code": "<pre>setSecondTitle(sSecondTitle?) : this</pre>"
                },
                {
                    "name": "setShowCopilot",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowCopilot",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showCopilot</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowCopilot\">showCopilot</a>.</p><p>Determines whether the SAP CoPilot icon is displayed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setShowCopilot",
                    "code": "<pre>setShowCopilot(bShowCopilot?) : this</pre>"
                },
                {
                    "name": "setShowMenuButton",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowMenuButton",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showMenuButton</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowMenuButton\">showMenuButton</a>.</p><p>Determines whether a hamburger menu button is displayed (as an alternative if the <code>menu</code> aggregation is not used).</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setShowMenuButton",
                    "code": "<pre>setShowMenuButton(bShowMenuButton?) : this</pre>"
                },
                {
                    "name": "setShowNavButton",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowNavButton",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showNavButton</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowNavButton\">showNavButton</a>.</p><p>Determines whether a back navigation button is displayed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setShowNavButton",
                    "code": "<pre>setShowNavButton(bShowNavButton?) : this</pre>"
                },
                {
                    "name": "setShowNotifications",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowNotifications",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showNotifications</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowNotifications\">showNotifications</a>.</p><p>Determines whether the notifications button is displayed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setShowNotifications",
                    "code": "<pre>setShowNotifications(bShowNotifications?) : this</pre>"
                },
                {
                    "name": "setShowProductSwitcher",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowProductSwitcher",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showProductSwitcher</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowProductSwitcher\">showProductSwitcher</a>.</p><p>Determines whether the product switcher button is displayed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setShowProductSwitcher",
                    "code": "<pre>setShowProductSwitcher(bShowProductSwitcher?) : this</pre>"
                },
                {
                    "name": "setShowSearch",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bShowSearch",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>showSearch</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getShowSearch\">showSearch</a>.</p><p>Determines whether the search button is displayed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setShowSearch",
                    "code": "<pre>setShowSearch(bShowSearch?) : this</pre>"
                },
                {
                    "name": "setTitle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sTitle",
                            "optional": true,
                            "defaultValue": "\"\"",
                            "description": "<p>New value for property <code>title</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.ShellBar#methods/getTitle\">title</a>.</p><p>Defines the main title of the control.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.ShellBar#methods/setTitle",
                    "code": "<pre>setTitle(sTitle?) : this</pre>"
                }
            ],
            "displayName": "sap.f.ShellBar",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.ShellBar",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.SidePanel",
            "basename": "SidePanel",
            "resource": "sap/f/SidePanel.js",
            "module": "sap/f/SidePanel",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.107",
            "extends": "sap.ui.core.Control",
            "description": "<h3>Overview</h3><p><code>SidePanel</code> is a layout control that allows primary and additional content to be displayed by choosing the action items from its action bar.</p><h3>Usage</h3><p>Action bar with action items have two states - collapsed and expanded. In collapsed state only icons are displayed, and in expanded state both icons and titles are displayed.</p><p>Each action item can have a content and choose an action item toggles the display of its content. The content can be added to the action item's <code>content</code> aggregation, or can be added or changed later.</p><p>Each click/tap fires an event, and in the event handler specific content can be added/changed to the <code>content</code> aggregation of the clicked/tapped action item or data can be retreived from the same aggregation depending on the state of the action item.</p><p>If the side content is displayed, there is automatically generated header of the side content which contains the icon and title of the selected action item and a close button that closes the area where side content is displayed.</p><h3>Responsive Behavior</h3><p><b>On desktop/tablet device</b></p><p>The side panel contains action bar that have action items placed vertically, and when expanded, the side content is displayed next to the action bar. If there is not enough space for all available action items, an overflow icon is displayed, and it toggles ON/OFF an overflow menu with the rest of the action items that are not visible at the moment.</p><p>When expanded, the side content shrinks the main content.</p><p><b>On mobile device</b></p><p>The side panel contains action bar that have action items placed horizontally at the bottom of the display, and when expanded, the side content is displayed above the action bar. If there is not enough room for all action items, the action bar can be swiped to access the rest of the action items.</p><h3>Resizing</h3><p>Resizing functionality only affects desktop or tablet devices.</p><p>By setting the <code>sidePanelResizable</code> property, the expanded side panel can be resized by mouse (by drag or by double click on resize splitter), by keyboard or by choosing one of three predefined positions in the side panel's context menu (min, max and default widths)</p><h3>Keyboard shortcuts</h3><p><ul> <li>[Shift] + [Command] + [p] (Mac) / [Shift] + [Control] + [p] (Windows) - Expand/Collapse side panel</li> <li>[Arrow Up], [Arrow Down] - Move to the next or previous action item</li> <li>[Enter], [Space] - Choose the selected action item</li> <li>[Command] + [Arrow Left] (Mac) / [Control] + [Arrow Left] (Windows) / [Tab]- Move from action items to the opened side content panel</li> <li>[Command] + [Arrow Right] (Mac) / [Control] + [Arrow Right] (Windows) / [Shift] + [Tab]- Move from opened side content panel to the action items</li> <li>[F6] / [Shift] + [F6] - Navigate back and forth between main content, side panel and side content groups <li>[Esc] - Close the opened side content panel and set focus back to main content</li> </ul></p><p>If the side panel's <code>sidePanelResizable</code> property is set, there is an action item chosen, and the resize splitter is focused:</p><p><ul> <li>[Home] - set the expanded side panel width to the minimum value defined in <code>sidePanelMinWidth</code> property</li> <li>[End] - set the expanded side panel width to the maximum value defined in <code>sidePanelMaxWidth</code> property</li> <li>[Enter] - set the expanded side panel width to the default value defined in <code>sidePanelWidth</code> property</li> <li>[Shift]+[F10] or [Context menu] - show the resize context menu</li> <li>[Arrow Left] or [Arrow Up] / [Arrow Right] or [Arrow Down] - increase/decrease the width of the expanded side panel with the regular step</li> <li>[Shift] + [Arrow Left] or [Shift] + [Arrow Up] / [Shift] + [Arrow Right] or [Shift] + [Arrow Down] - increase/decrease the width of the expanded side panel with the larger step</li> </ul></p>",
            "ui5-metamodel": true,
            "ui5-metadata": {
                "stereotype": "control",
                "properties": [
                    {
                        "name": "actionBarExpanded",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the action bar is expanded or collapsed.</p>",
                        "methods": [
                            "getActionBarExpanded",
                            "setActionBarExpanded"
                        ]
                    },
                    {
                        "name": "ariaLabel",
                        "type": "string",
                        "defaultValue": "Side Panel",
                        "group": "Accessibility",
                        "visibility": "public",
                        "description": "<p>Description for aria-label.</p>",
                        "methods": [
                            "getAriaLabel",
                            "setAriaLabel"
                        ]
                    },
                    {
                        "name": "sideContentExpanded",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "hidden",
                        "description": "<p>Determines whether the side content is visible or hidden.</p>",
                        "methods": [
                            "getSideContentExpanded",
                            "setSideContentExpanded"
                        ]
                    },
                    {
                        "name": "sidePanelMaxWidth",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "90%",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.109.0",
                        "description": "<p>Determines the maximum side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.<br><br><i>Since: 1.109.0.</i></p>",
                        "methods": [
                            "getSidePanelMaxWidth",
                            "setSidePanelMaxWidth"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "sidePanelMinWidth",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "15rem",
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.109.0",
                        "description": "<p>Determines the minimum side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.<br><br><i>Since: 1.109.0.</i></p>",
                        "methods": [
                            "getSidePanelMinWidth",
                            "setSidePanelMinWidth"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "sidePanelPosition",
                        "type": "sap.f.SidePanelPosition",
                        "defaultValue": "Right",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Defines where to place the side panel position.</p>",
                        "methods": [
                            "getSidePanelPosition",
                            "setSidePanelPosition"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "sidePanelResizable",
                        "type": "boolean",
                        "defaultValue": false,
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines whether the side panel is resizable or fixed. <b>Note:</b> setting this property only affects desktop or tablet devices.</p>",
                        "methods": [
                            "getSidePanelResizable",
                            "setSidePanelResizable"
                        ]
                    },
                    {
                        "name": "sidePanelResizeLargerStep",
                        "type": "int",
                        "defaultValue": 100,
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.109.0",
                        "description": "<p>Determines the large step (in pixels) when changing the width of the side panel with the keyboard. <b>Note:</b> the width can be changed by large step with <code>Shift + Left Arrow</code> and <code>Shift + Right Arrow</code> keys when the resize splitter is focused.<br><br><i>Since: 1.109.0.</i></p>",
                        "methods": [
                            "getSidePanelResizeLargerStep",
                            "setSidePanelResizeLargerStep"
                        ]
                    },
                    {
                        "name": "sidePanelResizeStep",
                        "type": "int",
                        "defaultValue": 10,
                        "group": "Appearance",
                        "visibility": "public",
                        "since": "1.109.0",
                        "description": "<p>Determines the step (in pixels) when changing the width of the side panel with the keyboard. <b>Note:</b> the width can be changed by this step with <code>Left Arrow</code> and <code>Right Arrow</code> keys when the resize splitter is focused.<br><br><i>Since: 1.109.0.</i></p>",
                        "methods": [
                            "getSidePanelResizeStep",
                            "setSidePanelResizeStep"
                        ]
                    },
                    {
                        "name": "sidePanelWidth",
                        "type": "sap.ui.core.CSSSize",
                        "defaultValue": "20rem",
                        "group": "Appearance",
                        "visibility": "public",
                        "description": "<p>Determines the side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.</p>",
                        "methods": [
                            "getSidePanelWidth",
                            "setSidePanelWidth"
                        ],
                        "linkEnabled": true
                    }
                ],
                "aggregations": [
                    {
                        "name": "_arrowButton",
                        "singularName": "_arrowButton",
                        "type": "sap.m.Button",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Side panel expand/collapse button.</p>",
                        "methods": [
                            "get_arrowButton",
                            "destroy_arrowButton",
                            "set_arrowButton"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_closeButton",
                        "singularName": "_closeButton",
                        "type": "sap.m.Button",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Side content close button.</p>",
                        "methods": [
                            "get_closeButton",
                            "destroy_closeButton",
                            "set_closeButton"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_contextMenu",
                        "singularName": "_contextMenu",
                        "type": "sap.m.Menu",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Context menu. It displays predefined options for side panel resize.</p>",
                        "methods": [
                            "get_contextMenu",
                            "destroy_contextMenu",
                            "set_contextMenu"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_overflowItem",
                        "singularName": "_overflowItem",
                        "type": "sap.f.SidePanelItem",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Overflow item. It opens/closes the overflow menu when there are action items that don't fit in the available height of the side panel.</p>",
                        "methods": [
                            "get_overflowItem",
                            "destroy_overflowItem",
                            "set_overflowItem"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "_overflowMenu",
                        "singularName": "_overflowMenu",
                        "type": "sap.m.Menu",
                        "cardinality": "0..1",
                        "visibility": "hidden",
                        "description": "<p>Overflow menu. It displays action items that don't fit in the available height of the side panel.</p>",
                        "methods": [
                            "get_overflowMenu",
                            "destroy_overflowMenu",
                            "set_overflowMenu"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "items",
                        "singularName": "item",
                        "type": "sap.f.SidePanelItem",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The list of action items. Each action items can have different side content added to its <code>content</code> aggregation.</p>",
                        "methods": [
                            "getItems",
                            "destroyItems",
                            "insertItem",
                            "addItem",
                            "removeItem",
                            "indexOfItem",
                            "removeAllItems"
                        ],
                        "linkEnabled": true
                    },
                    {
                        "name": "mainContent",
                        "singularName": "mainContent",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The list of controls for the main content.</p>",
                        "methods": [
                            "getMainContent",
                            "destroyMainContent",
                            "insertMainContent",
                            "addMainContent",
                            "removeMainContent",
                            "indexOfMainContent",
                            "removeAllMainContent"
                        ],
                        "linkEnabled": true
                    }
                ],
                "associations": [
                    {
                        "name": "selectedItem",
                        "singularName": "selectedItem",
                        "type": "sap.f.SidePanelItem",
                        "cardinality": "0..1",
                        "visibility": "public",
                        "description": "<p>The action item that is currently selected.</p>",
                        "methods": [
                            "getSelectedItem",
                            "setSelectedItem"
                        ],
                        "linkEnabled": true
                    }
                ]
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SidePanel</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.SidePanel(sId?, mSettings?)</pre>"
            },
            "events": [
                {
                    "name": "toggle",
                    "visibility": "public",
                    "parameters": [
                        {
                            "name": "oControlEvent",
                            "type": "sap.ui.base.Event",
                            "linkEnabled": true
                        },
                        {
                            "name": "getSource",
                            "type": "sap.ui.base.EventProvider",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getSource",
                            "linkEnabled": true
                        },
                        {
                            "name": "getParameters",
                            "type": "object",
                            "optional": false,
                            "depth": 1,
                            "phoneName": "oControlEvent.getParameters"
                        },
                        {
                            "name": "item",
                            "type": "sap.f.SidePanelItem",
                            "optional": false,
                            "description": "<p>The action item that triggers the event.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.item",
                            "linkEnabled": true
                        },
                        {
                            "name": "expanded",
                            "type": "boolean",
                            "optional": false,
                            "description": "<p>State of the action item.</p>",
                            "depth": 2,
                            "phoneName": "oControlEvent.getParameters.expanded"
                        }
                    ],
                    "description": "<p>Fires on expand and collapse of the side content.</p><p><ul><li>If the event fired as a result of action item selection (<code>expanded</code> parameter contains <code>true</code>) is prevented, the display of the side content will be blocked.</li> <li>If the event fired as a result of action item deselection, selection of different action item, pressing the <code>Close</code> button, or pressing the <code>Escape</code> key (<code>expanded</code> parameter contains <code>false</code>) is prevented, this will block closing of the currently displayed side content, and if the event is fired by selection of a different action item, the selection will be cancelled, and the next event (for expansion of a new action item) will not be fired and the new side content will not be displayed.</li></ul></p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.</p>"
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.SidePanelItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SidePanelItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some item to the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/addItem",
                    "code": "<pre>addItem(oItem) : this</pre>"
                },
                {
                    "name": "addMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMainContent",
                            "optional": false,
                            "description": "<p>The mainContent to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some mainContent to the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/addMainContent",
                    "code": "<pre>addMainContent(oMainContent) : this</pre>"
                },
                {
                    "name": "attachToggle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oData",
                            "optional": true,
                            "description": "<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object to call the event handler with. Defaults to this <code>sap.f.SidePanel</code> itself</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" href=\"api/sap.f.SidePanel#events/toggle\">toggle</a> event of this <code>sap.f.SidePanel</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.f.SidePanel</code> itself.</p><p>Fires on expand and collapse of the side content.</p><p><ul><li>If the event fired as a result of action item selection (<code>expanded</code> parameter contains <code>true</code>) is prevented, the display of the side content will be blocked.</li> <li>If the event fired as a result of action item deselection, selection of different action item, pressing the <code>Close</code> button, or pressing the <code>Escape</code> key (<code>expanded</code> parameter contains <code>false</code>) is prevented, this will block closing of the currently displayed side content, and if the event is fired by selection of a different action item, the selection will be cancelled, and the next event (for expansion of a new action item) will not be fired and the new side content will not be displayed.</li></ul></p>",
                    "href": "api/sap.f.SidePanel#methods/attachToggle",
                    "code": "<pre>attachToggle(oData?, fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "destroyItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the items in the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/destroyItems",
                    "code": "<pre>destroyItems() : this</pre>"
                },
                {
                    "name": "destroyMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the mainContent in the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/destroyMainContent",
                    "code": "<pre>destroyMainContent() : this</pre>"
                },
                {
                    "name": "detachToggle",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "fnFunction",
                            "optional": false,
                            "description": "<p>The function to be called, when the event occurs</p>",
                            "types": [
                                {
                                    "value": "function(sap.ui.base.Event) : void"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oListener",
                            "optional": true,
                            "description": "<p>Context object on which the given function had to be called</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" href=\"api/sap.f.SidePanel#events/toggle\">toggle</a> event of this <code>sap.f.SidePanel</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>",
                    "href": "api/sap.f.SidePanel#methods/detachToggle",
                    "code": "<pre>detachToggle(fnFunction, oListener?) : this</pre>"
                },
                {
                    "name": "sap.f.SidePanel.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.SidePanel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/sap.f.SidePanel.extend",
                    "code": "<pre>sap.f.SidePanel.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "fireToggle",
                    "visibility": "protected",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Whether or not to prevent the default action</p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "mParameters",
                            "optional": true,
                            "description": "<p>Parameters to pass along with the event</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "item",
                            "optional": true,
                            "description": "<p>The action item that triggers the event.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "sap.f.SidePanelItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SidePanelItem"
                                }
                            ],
                            "phoneName": "mParameters.item",
                            "defaultValue": ""
                        },
                        {
                            "name": "expanded",
                            "optional": true,
                            "description": "<p>State of the action item.</p>",
                            "depth": 1,
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ],
                            "phoneName": "mParameters.expanded",
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Fires event <a target=\"_self\" href=\"api/sap.f.SidePanel#events/toggle\">toggle</a> to attached listeners.</p><p>Listeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.</p>",
                    "href": "api/sap.f.SidePanel#methods/fireToggle",
                    "code": "<pre>fireToggle(mParameters?) : boolean</pre>"
                },
                {
                    "name": "getActionBarExpanded",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>actionBarExpanded</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getActionBarExpanded\">actionBarExpanded</a>.</p><p>Determines whether the action bar is expanded or collapsed.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getActionBarExpanded",
                    "code": "<pre>getActionBarExpanded() : boolean</pre>"
                },
                {
                    "name": "getAriaLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "string",
                        "description": "<p>Value of property <code>ariaLabel</code></p>",
                        "types": [
                            {
                                "value": "string"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getAriaLabel\">ariaLabel</a>.</p><p>Description for aria-label.</p><p>Default value is <code>\"Side Panel\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getAriaLabel",
                    "code": "<pre>getAriaLabel() : string</pre>"
                },
                {
                    "name": "getItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.SidePanelItem[]",
                        "types": [
                            {
                                "value": "sap.f.SidePanelItem[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>.</p><p>The list of action items. Each action items can have different side content added to its <code>content</code> aggregation.</p>",
                    "href": "api/sap.f.SidePanel#methods/getItems",
                    "code": "<pre>getItems() : sap.f.SidePanelItem[]</pre>"
                },
                {
                    "name": "getMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>.</p><p>The list of controls for the main content.</p>",
                    "href": "api/sap.f.SidePanel#methods/getMainContent",
                    "code": "<pre>getMainContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "sap.f.SidePanel.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.SidePanel.</p>",
                    "href": "api/sap.f.SidePanel#methods/sap.f.SidePanel.getMetadata",
                    "code": "<pre>sap.f.SidePanel.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "getSelectedItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.ID|null",
                        "types": [
                            {
                                "value": "sap.ui.core.ID",
                                "href": "api/sap.ui.core.ID",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>ID of the element which is the current target of the association <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSelectedItem\">selectedItem</a>, or <code>null</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSelectedItem",
                    "code": "<pre>getSelectedItem() : sap.ui.core.ID|null</pre>"
                },
                {
                    "name": "getSidePanelMaxWidth",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>sidePanelMaxWidth</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelMaxWidth\">sidePanelMaxWidth</a>.</p><p>Determines the maximum side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.</p><p>Default value is <code>\"90%\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelMaxWidth",
                    "code": "<pre>getSidePanelMaxWidth() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "getSidePanelMinWidth",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>sidePanelMinWidth</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelMinWidth\">sidePanelMinWidth</a>.</p><p>Determines the minimum side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.</p><p>Default value is <code>\"15rem\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelMinWidth",
                    "code": "<pre>getSidePanelMinWidth() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "getSidePanelPosition",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.SidePanelPosition",
                        "description": "<p>Value of property <code>sidePanelPosition</code></p>",
                        "types": [
                            {
                                "value": "sap.f.SidePanelPosition",
                                "href": "api/sap.f.SidePanelPosition",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelPosition\">sidePanelPosition</a>.</p><p>Defines where to place the side panel position.</p><p>Default value is <code>Right</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelPosition",
                    "code": "<pre>getSidePanelPosition() : sap.f.SidePanelPosition</pre>"
                },
                {
                    "name": "getSidePanelResizable",
                    "visibility": "public",
                    "returnValue": {
                        "type": "boolean",
                        "description": "<p>Value of property <code>sidePanelResizable</code></p>",
                        "types": [
                            {
                                "value": "boolean"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelResizable\">sidePanelResizable</a>.</p><p>Determines whether the side panel is resizable or fixed. <b>Note:</b> setting this property only affects desktop or tablet devices.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelResizable",
                    "code": "<pre>getSidePanelResizable() : boolean</pre>"
                },
                {
                    "name": "getSidePanelResizeLargerStep",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>sidePanelResizeLargerStep</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelResizeLargerStep\">sidePanelResizeLargerStep</a>.</p><p>Determines the large step (in pixels) when changing the width of the side panel with the keyboard. <b>Note:</b> the width can be changed by large step with <code>Shift + Left Arrow</code> and <code>Shift + Right Arrow</code> keys when the resize splitter is focused.</p><p>Default value is <code>100</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelResizeLargerStep",
                    "code": "<pre>getSidePanelResizeLargerStep() : int</pre>"
                },
                {
                    "name": "getSidePanelResizeStep",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>Value of property <code>sidePanelResizeStep</code></p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelResizeStep\">sidePanelResizeStep</a>.</p><p>Determines the step (in pixels) when changing the width of the side panel with the keyboard. <b>Note:</b> the width can be changed by this step with <code>Left Arrow</code> and <code>Right Arrow</code> keys when the resize splitter is focused.</p><p>Default value is <code>10</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelResizeStep",
                    "code": "<pre>getSidePanelResizeStep() : int</pre>"
                },
                {
                    "name": "getSidePanelWidth",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.CSSSize",
                        "description": "<p>Value of property <code>sidePanelWidth</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.CSSSize",
                                "href": "api/sap.ui.core.CSSSize",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelWidth\">sidePanelWidth</a>.</p><p>Determines the side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.</p><p>Default value is <code>\"20rem\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/getSidePanelWidth",
                    "code": "<pre>getSidePanelWidth() : sap.ui.core.CSSSize</pre>"
                },
                {
                    "name": "indexOfItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.f.SidePanelItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SidePanelItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.f.SidePanelItem</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.SidePanel#methods/indexOfItem",
                    "code": "<pre>indexOfItem(oItem) : int</pre>"
                },
                {
                    "name": "indexOfMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMainContent",
                            "optional": false,
                            "description": "<p>The mainContent whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.SidePanel#methods/indexOfMainContent",
                    "code": "<pre>indexOfMainContent(oMainContent) : int</pre>"
                },
                {
                    "name": "insertItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oItem",
                            "optional": false,
                            "description": "<p>The item to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.f.SidePanelItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SidePanelItem"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a item into the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/insertItem",
                    "code": "<pre>insertItem(oItem, iIndex) : this</pre>"
                },
                {
                    "name": "insertMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oMainContent",
                            "optional": false,
                            "description": "<p>The mainContent to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the mainContent should be inserted at; for a negative value of <code>iIndex</code>, the mainContent is inserted at position 0; for a value greater than the current size of the aggregation, the mainContent is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a mainContent into the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/insertMainContent",
                    "code": "<pre>insertMainContent(oMainContent, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllItems",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.SidePanelItem[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.f.SidePanelItem[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.SidePanel#methods/removeAllItems",
                    "code": "<pre>removeAllItems() : sap.f.SidePanelItem[]</pre>"
                },
                {
                    "name": "removeAllMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.SidePanel#methods/removeAllMainContent",
                    "code": "<pre>removeAllMainContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeItem",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.f.SidePanelItem|null",
                        "description": "<p>The removed item or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.f.SidePanelItem",
                                "href": "api/sap.f.SidePanelItem",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vItem",
                            "optional": false,
                            "description": "<p>The item to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.f.SidePanelItem",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SidePanelItem"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a item from the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getItems\">items</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/removeItem",
                    "code": "<pre>removeItem(vItem) : sap.f.SidePanelItem|null</pre>"
                },
                {
                    "name": "removeMainContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed mainContent or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vMainContent",
                            "optional": false,
                            "description": "<p>The mainContent to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a mainContent from the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getMainContent\">mainContent</a>.</p>",
                    "href": "api/sap.f.SidePanel#methods/removeMainContent",
                    "code": "<pre>removeMainContent(vMainContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setActionBarExpanded",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bActionBarExpanded",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>actionBarExpanded</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getActionBarExpanded\">actionBarExpanded</a>.</p><p>Determines whether the action bar is expanded or collapsed.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setActionBarExpanded",
                    "code": "<pre>setActionBarExpanded(bActionBarExpanded?) : this</pre>"
                },
                {
                    "name": "setAriaLabel",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sAriaLabel",
                            "optional": true,
                            "defaultValue": "\"Side Panel\"",
                            "description": "<p>New value for property <code>ariaLabel</code></p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getAriaLabel\">ariaLabel</a>.</p><p>Description for aria-label.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"Side Panel\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setAriaLabel",
                    "code": "<pre>setAriaLabel(sAriaLabel?) : this</pre>"
                },
                {
                    "name": "setSidePanelMaxWidth",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSidePanelMaxWidth",
                            "optional": true,
                            "defaultValue": "\"90%\"",
                            "description": "<p>New value for property <code>sidePanelMaxWidth</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelMaxWidth\">sidePanelMaxWidth</a>.</p><p>Determines the maximum side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"90%\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setSidePanelMaxWidth",
                    "code": "<pre>setSidePanelMaxWidth(sSidePanelMaxWidth?) : this</pre>"
                },
                {
                    "name": "setSidePanelMinWidth",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSidePanelMinWidth",
                            "optional": true,
                            "defaultValue": "\"15rem\"",
                            "description": "<p>New value for property <code>sidePanelMinWidth</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.CSSSize",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.CSSSize"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelMinWidth\">sidePanelMinWidth</a>.</p><p>Determines the minimum side panel width (Side Content width + Action Bar width). <b>Note:</b> if the width is given in percent(%), it is calculated as given percent from the Side Panel parent container width, otherwise it's calculated in absolute units.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>\"15rem\"</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setSidePanelMinWidth",
                    "code": "<pre>setSidePanelMinWidth(sSidePanelMinWidth?) : this</pre>"
                },
                {
                    "name": "setSidePanelPosition",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sSidePanelPosition",
                            "optional": true,
                            "defaultValue": "Right",
                            "description": "<p>New value for property <code>sidePanelPosition</code></p>",
                            "types": [
                                {
                                    "value": "sap.f.SidePanelPosition",
                                    "linkEnabled": true,
                                    "href": "api/sap.f.SidePanelPosition"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelPosition\">sidePanelPosition</a>.</p><p>Defines where to place the side panel position.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>Right</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setSidePanelPosition",
                    "code": "<pre>setSidePanelPosition(sSidePanelPosition?) : this</pre>"
                },
                {
                    "name": "setSidePanelResizable",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "bSidePanelResizable",
                            "optional": true,
                            "defaultValue": false,
                            "description": "<p>New value for property <code>sidePanelResizable</code></p>",
                            "types": [
                                {
                                    "value": "boolean"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelResizable\">sidePanelResizable</a>.</p><p>Determines whether the side panel is resizable or fixed. <b>Note:</b> setting this property only affects desktop or tablet devices.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setSidePanelResizable",
                    "code": "<pre>setSidePanelResizable(bSidePanelResizable?) : this</pre>"
                },
                {
                    "name": "setSidePanelResizeLargerStep",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iSidePanelResizeLargerStep",
                            "optional": true,
                            "defaultValue": 100,
                            "description": "<p>New value for property <code>sidePanelResizeLargerStep</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelResizeLargerStep\">sidePanelResizeLargerStep</a>.</p><p>Determines the large step (in pixels) when changing the width of the side panel with the keyboard. <b>Note:</b> the width can be changed by large step with <code>Shift + Left Arrow</code> and <code>Shift + Right Arrow</code> keys when the resize splitter is focused.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>100</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setSidePanelResizeLargerStep",
                    "code": "<pre>setSidePanelResizeLargerStep(iSidePanelResizeLargerStep?) : this</pre>"
                },
                {
                    "name": "setSidePanelResizeStep",
                    "visibility": "public",
                    "since": "1.109.0",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "iSidePanelResizeStep",
                            "optional": true,
                            "defaultValue": 10,
                            "description": "<p>New value for property <code>sidePanelResizeStep</code></p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanel#methods/getSidePanelResizeStep\">sidePanelResizeStep</a>.</p><p>Determines the step (in pixels) when changing the width of the side panel with the keyboard. <b>Note:</b> the width can be changed by this step with <code>Left Arrow</code> and <code>Right Arrow</code> keys when the resize splitter is focused.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>10</code>.</p>",
                    "href": "api/sap.f.SidePanel#methods/setSidePanelResizeStep",
                    "code": "<pre>setSidePanelResizeStep(iSidePanelResizeStep?) : this</pre>"
                }
            ],
            "displayName": "sap.f.SidePanel",
            "component": "CA-UI5-CTR",
            "hasSample": true,
            "title": "class sap.f.SidePanel",
            "subTitle": ""
        },
        {
            "kind": "class",
            "name": "sap.f.SidePanelItem",
            "basename": "SidePanelItem",
            "resource": "sap/f/SidePanelItem.js",
            "module": "sap/f/SidePanelItem",
            "export": "",
            "static": true,
            "visibility": "public",
            "since": "1.107",
            "extends": "sap.ui.core.Item",
            "description": "<h3>Overview</h3><p>The SidePanel Action Item.</p>",
            "ui5-metamodel": true,
            "ui5-metadata": {
                "stereotype": "element",
                "properties": [
                    {
                        "name": "icon",
                        "type": "sap.ui.core.URI",
                        "defaultValue": "empty string",
                        "group": "Misc",
                        "visibility": "public",
                        "description": "<p>Specifies the icon for the item.</p>",
                        "methods": [
                            "getIcon",
                            "setIcon"
                        ],
                        "linkEnabled": true
                    }
                ],
                "aggregations": [
                    {
                        "name": "content",
                        "singularName": "content",
                        "type": "sap.ui.core.Control",
                        "cardinality": "0..n",
                        "visibility": "public",
                        "description": "<p>The list of controls for side content of the action item.</p>",
                        "methods": [
                            "getContent",
                            "destroyContent",
                            "insertContent",
                            "addContent",
                            "removeContent",
                            "indexOfContent",
                            "removeAllContent"
                        ],
                        "linkEnabled": true
                    }
                ],
                "defaultAggregation": "content"
            },
            "constructor": {
                "visibility": "public",
                "parameters": [
                    {
                        "name": "sId",
                        "optional": true,
                        "description": "<p>ID for the new control, generated automatically if no ID is given</p>",
                        "phoneName": "sId",
                        "depth": 0,
                        "types": [
                            {
                                "name": "string",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    },
                    {
                        "name": "mSettings",
                        "optional": true,
                        "description": "<p>Initial settings for the new control</p>",
                        "phoneName": "mSettings",
                        "depth": 0,
                        "types": [
                            {
                                "name": "object",
                                "linkEnabled": false
                            }
                        ],
                        "defaultValue": ""
                    }
                ],
                "description": "<p>Constructor for a new <code>SidePanelItem</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>",
                "references": [],
                "codeExample": "<pre>new sap.f.SidePanelItem(sId?, mSettings?)</pre>"
            },
            "methods": [
                {
                    "name": "addContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to add; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Adds some content to the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/addContent",
                    "code": "<pre>addContent(oContent) : this</pre>"
                },
                {
                    "name": "destroyContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "description": "<p>Destroys all the content in the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/destroyContent",
                    "code": "<pre>destroyContent() : this</pre>"
                },
                {
                    "name": "sap.f.SidePanelItem.extend",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "function",
                        "description": "<p>Created class / constructor function</p>",
                        "types": [
                            {
                                "value": "function"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sClassName",
                            "optional": false,
                            "description": "<p>Name of the class being created</p>",
                            "types": [
                                {
                                    "value": "string"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "oClassInfo",
                            "optional": true,
                            "description": "<p>Object literal with information about the class</p>",
                            "types": [
                                {
                                    "value": "object"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "FNMetaImpl",
                            "optional": true,
                            "description": "<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>",
                            "types": [
                                {
                                    "value": "function"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Creates a new subclass of class sap.f.SidePanelItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Item#methods/sap.ui.core.Item.extend\">sap.ui.core.Item.extend</a>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/sap.f.SidePanelItem.extend",
                    "code": "<pre>sap.f.SidePanelItem.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"
                },
                {
                    "name": "getContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ],
                        "description": ""
                    },
                    "description": "<p>Gets content of aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>.</p><p>The list of controls for side content of the action item.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/getContent",
                    "code": "<pre>getContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "getIcon",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.URI",
                        "description": "<p>Value of property <code>icon</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.URI",
                                "href": "api/sap.ui.core.URI",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Gets current value of property <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getIcon\">icon</a>.</p><p>Specifies the icon for the item.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/getIcon",
                    "code": "<pre>getIcon() : sap.ui.core.URI</pre>"
                },
                {
                    "name": "sap.f.SidePanelItem.getMetadata",
                    "visibility": "public",
                    "static": true,
                    "returnValue": {
                        "type": "sap.ui.core.ElementMetadata",
                        "description": "<p>Metadata object describing this class</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.ElementMetadata",
                                "href": "api/sap.ui.core.ElementMetadata",
                                "linkEnabled": true
                            }
                        ]
                    },
                    "description": "<p>Returns a metadata object for class sap.f.SidePanelItem.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/sap.f.SidePanelItem.getMetadata",
                    "code": "<pre>sap.f.SidePanelItem.getMetadata() : sap.ui.core.ElementMetadata</pre>"
                },
                {
                    "name": "indexOfContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "int",
                        "description": "<p>The index of the provided control in the aggregation if found, or -1 otherwise</p>",
                        "types": [
                            {
                                "value": "int"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content whose index is looked for</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>. and returns its index if found or -1 otherwise.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/indexOfContent",
                    "code": "<pre>indexOfContent(oContent) : int</pre>"
                },
                {
                    "name": "insertContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "oContent",
                            "optional": false,
                            "description": "<p>The content to insert; if empty, nothing is inserted</p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        },
                        {
                            "name": "iIndex",
                            "optional": false,
                            "description": "<p>The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position</p>",
                            "types": [
                                {
                                    "value": "int"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Inserts a content into the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/insertContent",
                    "code": "<pre>insertContent(oContent, iIndex) : this</pre>"
                },
                {
                    "name": "removeAllContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control[]",
                        "description": "<p>An array of the removed elements (might be empty)</p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control[]"
                            }
                        ]
                    },
                    "description": "<p>Removes all the controls from the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>.</p><p>Additionally, it unregisters them from the hosting UIArea.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/removeAllContent",
                    "code": "<pre>removeAllContent() : sap.ui.core.Control[]</pre>"
                },
                {
                    "name": "removeContent",
                    "visibility": "public",
                    "returnValue": {
                        "type": "sap.ui.core.Control|null",
                        "description": "<p>The removed content or <code>null</code></p>",
                        "types": [
                            {
                                "value": "sap.ui.core.Control",
                                "href": "api/sap.ui.core.Control",
                                "linkEnabled": true
                            },
                            {
                                "value": "null"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "vContent",
                            "optional": false,
                            "description": "<p>The content to remove or its index or id</p>",
                            "types": [
                                {
                                    "value": "int"
                                },
                                {
                                    "value": "string"
                                },
                                {
                                    "value": "sap.ui.core.Control",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.Control"
                                }
                            ],
                            "defaultValue": ""
                        }
                    ],
                    "description": "<p>Removes a content from the aggregation <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getContent\">content</a>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/removeContent",
                    "code": "<pre>removeContent(vContent) : sap.ui.core.Control|null</pre>"
                },
                {
                    "name": "setIcon",
                    "visibility": "public",
                    "returnValue": {
                        "type": "this",
                        "description": "<p>Reference to <code>this</code> in order to allow method chaining</p>",
                        "types": [
                            {
                                "value": "this"
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "name": "sIcon",
                            "optional": true,
                            "defaultValue": "''",
                            "description": "<p>New value for property <code>icon</code></p>",
                            "types": [
                                {
                                    "value": "sap.ui.core.URI",
                                    "linkEnabled": true,
                                    "href": "api/sap.ui.core.URI"
                                }
                            ]
                        }
                    ],
                    "description": "<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.f.SidePanelItem#methods/getIcon\">icon</a>.</p><p>Specifies the icon for the item.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>empty string</code>.</p>",
                    "href": "api/sap.f.SidePanelItem#methods/setIcon",
                    "code": "<pre>setIcon(sIcon?) : this</pre>"
                }
            ],
            "displayName": "sap.f.SidePanelItem",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "class sap.f.SidePanelItem",
            "subTitle": ""
        },
        {
            "kind": "enum",
            "name": "sap.f.SidePanelPosition",
            "basename": "SidePanelPosition",
            "resource": "sap/f/library.js",
            "module": "sap/f/library",
            "export": "SidePanelPosition",
            "static": true,
            "visibility": "public",
            "since": "1.104",
            "description": "<p><p>Enumeration for different SidePanel position.</p><p>This enum is part of the 'sap/f/library' module export and must be accessed by the property 'SidePanelPosition'.</p></p>",
            "ui5-metadata": {
                "stereotype": "enum"
            },
            "properties": [
                {
                    "name": "sap.f.SidePanelPosition.Left",
                    "visibility": "public",
                    "description": "<p>The position is left.</p>"
                },
                {
                    "name": "sap.f.SidePanelPosition.Right",
                    "visibility": "public",
                    "description": "<p>The position is right.</p>"
                }
            ],
            "displayName": "sap.f.SidePanelPosition",
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "enum sap.f.SidePanelPosition",
            "subTitle": ""
        },
        {
            "name": "sap",
            "displayName": "sap",
            "kind": "namespace",
            "nodes": [
                {
                    "name": "sap.f",
                    "description": "<p>SAPUI5 library with controls specialized for SAP Fiori apps.</p>",
                    "href": "api/sap.f"
                }
            ],
            "hasSample": false,
            "title": "namespace sap",
            "subTitle": ""
        },
        {
            "name": "sap.f.cards",
            "displayName": "sap.f.cards",
            "kind": "namespace",
            "nodes": [
                {
                    "name": "sap.f.cards.BaseHeader",
                    "description": "<p>Provides basic functionality for header controls that can be used in <code>sap.f.Card</code.</p>",
                    "href": "api/sap.f.cards.BaseHeader"
                },
                {
                    "name": "sap.f.cards.Header",
                    "description": "<p>Displays general information in the header of the <a target=\"_self\" href=\"api/sap.f.Card\">sap.f.Card</a>.\n</p>",
                    "href": "api/sap.f.cards.Header"
                },
                {
                    "name": "sap.f.cards.HeaderPosition",
                    "description": "<p>Different options for the position of the header in controls that implement the <a target=\"_self\" href=\"api/sap.f.ICard\">sap.f.ICard</a> interface.\n</p>",
                    "href": "api/sap.f.cards.HeaderPosition"
                },
                {
                    "name": "sap.f.cards.IHeader",
                    "description": "<p>Marker interface for controls suitable as a header in controls that implement the <a target=\"_self\" href=\"api/sap.f.ICard\">sap.f.ICard</a> interface.</p>",
                    "href": "api/sap.f.cards.IHeader"
                },
                {
                    "name": "sap.f.cards.NumericHeader",
                    "description": "<p>Displays general information in the header of the <a target=\"_self\" href=\"api/sap.f.Card\">sap.f.Card</a> and allows the configuration of a numeric value visualization.\n</p>",
                    "href": "api/sap.f.cards.NumericHeader"
                },
                {
                    "name": "sap.f.cards.NumericHeaderSideIndicatorsAlignment",
                    "description": "<p>Different options for the alignment of the side indicators in the numeric header.\n</p>",
                    "href": "api/sap.f.cards.NumericHeaderSideIndicatorsAlignment"
                },
                {
                    "name": "sap.f.cards.NumericSideIndicator",
                    "description": "<p>Holds a set of side indicator attributes used in the <a target=\"_self\" href=\"api/sap.f.cards.NumericHeader\">sap.f.cards.NumericHeader</a> control.</p>",
                    "href": "api/sap.f.cards.NumericSideIndicator"
                },
                {
                    "name": "sap.f.cards.loading",
                    "description": "",
                    "href": "api/sap.f.cards.loading"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.cards",
            "subTitle": ""
        },
        {
            "name": "sap.f.cards.loading",
            "displayName": "sap.f.cards.loading",
            "kind": "namespace",
            "nodes": [
                {
                    "name": "sap.f.cards.loading.PlaceholderBaseRenderer",
                    "description": "<p>PlaceholderBase renderer.</p>",
                    "href": "api/sap.f.cards.loading.PlaceholderBaseRenderer"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.cards.loading",
            "subTitle": ""
        },
        {
            "name": "sap.f.dnd",
            "displayName": "sap.f.dnd",
            "kind": "namespace",
            "nodes": [
                {
                    "name": "sap.f.dnd.GridDropInfo",
                    "description": "<p>Provides enhanced configuration for drop operations inside grid-based controls.\n</p>",
                    "href": "api/sap.f.dnd.GridDropInfo"
                },
                {
                    "name": "sap.f.dnd.IGridDroppable",
                    "description": "<p>Interface that should be implemented by grid controls, if they are working with the <code>sap.f.dnd.GridDropInfo</code>.\n</p>",
                    "href": "api/sap.f.dnd.IGridDroppable"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.dnd",
            "subTitle": ""
        },
        {
            "name": "sap.f.routing",
            "displayName": "sap.f.routing",
            "kind": "namespace",
            "nodes": [
                {
                    "name": "sap.f.routing.Router",
                    "description": "<p>The <code>sap.f.routing.Router</code> class is intended to be used with <code><a target=\"_self\" href=\"api/sap.f.FlexibleColumnLayout\">sap.f.FlexibleColumnLayout</a></code> as a root control.\n</p>",
                    "href": "api/sap.f.routing.Router"
                },
                {
                    "name": "sap.f.routing.TargetHandler",
                    "description": "<p>Used for closing dialogs and showing transitions in <code>NavContainers</code> when targets are displayed.\n</p>",
                    "href": "api/sap.f.routing.TargetHandler"
                },
                {
                    "name": "sap.f.routing.Targets",
                    "description": "<p>Provides a convenient way for placing views into the correct containers of your app.\n</p>",
                    "href": "api/sap.f.routing.Targets"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.routing",
            "subTitle": ""
        },
        {
            "name": "sap.f.semantic",
            "displayName": "sap.f.semantic",
            "kind": "namespace",
            "nodes": [
                {
                    "name": "sap.f.semantic.AddAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>addAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.AddAction"
                },
                {
                    "name": "sap.f.semantic.CloseAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>closeAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.CloseAction"
                },
                {
                    "name": "sap.f.semantic.CopyAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>copyAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.CopyAction"
                },
                {
                    "name": "sap.f.semantic.DeleteAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>deleteAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.DeleteAction"
                },
                {
                    "name": "sap.f.semantic.DiscussInJamAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>discussInJamAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
                    "href": "api/sap.f.semantic.DiscussInJamAction"
                },
                {
                    "name": "sap.f.semantic.EditAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>editAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.EditAction"
                },
                {
                    "name": "sap.f.semantic.ExitFullScreenAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>exitFullScreenAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.ExitFullScreenAction"
                },
                {
                    "name": "sap.f.semantic.FavoriteAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>favoriteAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.FavoriteAction"
                },
                {
                    "name": "sap.f.semantic.FlagAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>flagAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.FlagAction"
                },
                {
                    "name": "sap.f.semantic.FooterMainAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>footerMainAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
                    "href": "api/sap.f.semantic.FooterMainAction"
                },
                {
                    "name": "sap.f.semantic.FullScreenAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>fullScreenAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.FullScreenAction"
                },
                {
                    "name": "sap.f.semantic.MainAction",
                    "description": "<p>Serves as a base class for the <a target=\"_self\" href=\"api/sap.f.semantic.TitleMainAction\">sap.f.semantic.TitleMainAction</a> and <a target=\"_self\" href=\"api/sap.f.semantic.FooterMainAction\">sap.f.semantic.FooterMainAction</a> controls.</p>",
                    "href": "api/sap.f.semantic.MainAction"
                },
                {
                    "name": "sap.f.semantic.MessagesIndicator",
                    "description": "<p>A semantic-specific button, eligible for the <code>messagesIndicator</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
                    "href": "api/sap.f.semantic.MessagesIndicator"
                },
                {
                    "name": "sap.f.semantic.NegativeAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>negativeAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
                    "href": "api/sap.f.semantic.NegativeAction"
                },
                {
                    "name": "sap.f.semantic.PositiveAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>positiveAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its footer.</p>",
                    "href": "api/sap.f.semantic.PositiveAction"
                },
                {
                    "name": "sap.f.semantic.PrintAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>printAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
                    "href": "api/sap.f.semantic.PrintAction"
                },
                {
                    "name": "sap.f.semantic.SemanticButton",
                    "description": "<p>A base class for the available semantic actions, such as <a target=\"_self\" href=\"api/sap.f.semantic.AddAction\">AddAction</a>, <a target=\"_self\" href=\"api/sap.f.semantic.CloseAction\">CloseAction</a>, etc.</p>",
                    "href": "api/sap.f.semantic.SemanticButton"
                },
                {
                    "name": "sap.f.semantic.SemanticControl",
                    "description": "<p>The base class for the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticButton\">sap.f.semantic.SemanticButton</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticControl"
                },
                {
                    "name": "sap.f.semantic.SemanticPage",
                    "description": "<p>Provides enhanced functionality by internally aggregating <a target=\"_self\" href=\"api/sap.f.DynamicPage\">sap.f.DynamicPage</a> and contains controls with semantic-specific meaning.\n</p>",
                    "href": "api/sap.f.semantic.SemanticPage"
                },
                {
                    "name": "sap.f.semantic.SemanticToggleButton",
                    "description": "<p>A base class for the <a target=\"_self\" href=\"api/sap.f.semantic.FavoriteAction\">sap.f.semantic.FavoriteAction</a> and <a target=\"_self\" href=\"api/sap.f.semantic.FlagAction\">sap.f.semantic.FlagAction</a>.</p>",
                    "href": "api/sap.f.semantic.SemanticToggleButton"
                },
                {
                    "name": "sap.f.semantic.SendEmailAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>sendEmailAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
                    "href": "api/sap.f.semantic.SendEmailAction"
                },
                {
                    "name": "sap.f.semantic.SendMessageAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>sendMessageAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
                    "href": "api/sap.f.semantic.SendMessageAction"
                },
                {
                    "name": "sap.f.semantic.ShareInJamAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>shareInJamAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in the share menu within its title.</p>",
                    "href": "api/sap.f.semantic.ShareInJamAction"
                },
                {
                    "name": "sap.f.semantic.TitleMainAction",
                    "description": "<p>A semantic-specific button, eligible for the <code>titleMainAction</code> aggregation of the <a target=\"_self\" href=\"api/sap.f.semantic.SemanticPage\">sap.f.semantic.SemanticPage</a> to be placed in its title.</p>",
                    "href": "api/sap.f.semantic.TitleMainAction"
                }
            ],
            "component": "CA-UI5-CTR",
            "hasSample": false,
            "title": "namespace sap.f.semantic",
            "subTitle": ""
        }
    ],
    "defaultComponent": "CA-UI5-CTR"
}